{"version":3,"sources":["app/models/Pagination.ts","app/API/agent.ts","app/models/activity.ts","app/models/Profile.ts","app/store/ActivityStore.ts","app/store/CommentStore.ts","app/store/CommonStore.ts","app/store/modelStore.ts","app/store/ProfileStore.ts","app/store/UserStore.ts","app/store/Store.ts","app/layout/navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/Profiles/FollowButton.tsx","features/Profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/error/ValidationError.tsx","features/users/registerForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/Options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailHeader.tsx","features/activities/details/ActivityDetailSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/error/NotFound.tsx","app/common/modal/modalContainer.tsx","features/Profiles/ProfileActivities.tsx","features/Profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetDropZone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/Profiles/ProfilePhotos.tsx","features/Profiles/ProfileContent.tsx","features/Profiles/ProfileHeader.tsx","features/Profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","Object","createClass","data","pagination","classCallCheck","this","PagingParams","pageNumber","arguments","length","undefined","pageSize","pagenumber","PageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","concat","response","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","JSON","parse","abrupt","stop","_x","apply","error","_ref2","status","method","errors","hasOwnProperty","modelStateErrors","key","push","flat","toast","startsWith","userStore","logout","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","Content-type","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Activity","init","assign","ActivityFormValues","title","category","description","date","city","venue","Profile","userName","displayName","image","ActivityStore","_this","activityRegistry","Map","selectedActivity","editMode","loading","submitting","loadingInitials","pagingParams","set","setPagingParams","setPredicate","value","resetPrediciate","forEach","loadActivities","result","axiosParams","sent","runInAction","setActivity","setPagination","t0","console","log","loadActivity","_callee2","_context2","getActivity","_activity$attendees","isGoing","attendees","some","isHost","hostUserName","host","find","x","Date","createActivity","_ref3","_callee3","attendee","newActivity","_context3","_x2","updateActivity","_ref4","_callee4","_context4","objectSpread2","_x3","deleteActivity","_ref5","_callee5","_context5","_x4","updateAttendance","_callee6","_context6","_this$selectedActivit","_this$selectedActivit2","filter","_this$selectedActivit3","_this$selectedActivit4","finish","cancelActivityToggle","_callee7","_context7","_this$selectedActivit5","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followerCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activityByDate","reduce","activities","format","toConsumableArray","CommentStore","comments","hubConnection","createHubConnection","activityId","activityStore","HubConnectionBuilder","withUrl","accessTokenFactory","_store$userStore$user","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","_this$hubConnection","clearComments","addComment","_store$activityStore$","_this$hubConnection2","invoke","CommonStore","window","localStorage","getItem","appLoaded","setServerError","setToken","setAppLoaded","setItem","removeItem","ModelStore","model","open","openModel","content","closeModel","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","_this$profile$photos","photos","isMain","setImage","p","_this$profile$photos2","_store$userStore$user2","followingCount","_x5","_x6","loadFollowing","_ref6","_x7","loadUserActivities","_ref7","_x8","_x9","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","startRefreshTokenTimer","modalStore","history","getUser","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","scope","stoprefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","_useStore$userStore","react_default","createElement","Menu","inverted","fixed","Container","Item","as","NavLink","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","_useStore$activitySto","Fragment","vertical","size","width","marginTop","Header","attached","color","active","has","esm","onChange","_userStore$user","_useStore","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","bio","extra","Icon","Profiles_FollowButton","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","Profiles_ProfileCard","ActivityListItem","_activity$host","_activity$host2","Segment","Group","Label","textAlign","marginBottom","react_router_dom","secondary","dashboard_ActivityListItemAttendee","clearing","floated","groupedActivities","slicedToArray","group","react","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","_useState","useState","_useState2","loadingNext","setLoadingNext","useEffect","Grid","Column","react_infinite_scroller_default","pageStart","loadMore","CurrentPage","hasMore","totalPages","initialLoad","dashboard_ActivityList","ActivityFilters","Loader","MyTextInput","props","_useField","useField","_useField2","field","meta","Form","Field","touched","label","useNavigate","formik_esm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","colors","VaidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","users_LoginForm","registerForm","Divider","LoadingComponent","_ref$inverted","_ref$content","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","react_datepicker_min_default","selected","navigate","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zindex","top","ribbon","_ref$activity","relaxed","divided","Extra","details_ActivityDetailHeader","ActivityDetailedInfo","details_ActivityDetailChat","details_ActivityDetailSidebar","NotFound","Inline","primary","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetDropZone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","react_cropper_es","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","_useState3","_useState4","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","_profile$photos","_useStore$profileStor","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","Profiles_ProfilePhotos","Profiles_ProfileActivities","ProfileFollowings","menuPosition","Statistic","Profiles_ProfileHeader","Profiles_ProfileContent","PrivateRoute","children","react_router","replace","location","useLocation","finally","navbar","react_toastify_esm","hideProgressBar","modalContainer","path","element","home_HomePage","dashboard_ActivityDashboard","details_ActivityDetails","form_ActivityForm","Profiles_ProfilePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","Provider","layout_App","document","getElementById"],"mappings":"sYAOaA,EAAbC,OAAAC,EAAA,EAAAD,CAII,SAAAD,EAAYG,EAASC,GACpBH,OAAAI,EAAA,EAAAJ,CAAAK,KAAAN,GAAAM,KAJDH,UAIA,EAAAG,KAHAF,gBAGA,EACIE,KAAKH,KAAKA,EACVG,KAAKF,WAAWA,IAIXG,EAAbN,OAAAC,EAAA,EAAAD,CAII,SAAAM,IACA,IADYC,EACZC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADuB,EAAGG,EAC1BH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmC,EACnCR,OAAAI,EAAA,EAAAJ,CAAAK,KAAAC,GAAAD,KAJAO,gBAIA,EAAAP,KAHAQ,cAGA,EACIR,KAAKO,WAAWL,EAChBF,KAAKQ,SAASF,ICVtBG,IAAMC,SAASC,QAAQC,OAEvBH,IAAMI,aAAaC,QAAQC,IAAI,SAAAC,GAC3B,IAAMC,EAAMC,EAAMC,YAAYF,MAE9B,OADGA,IAAOD,EAAOI,QAASC,cAAhB,UAAAC,OAAwCL,IAC3CD,IAGXP,IAAMI,aAAaU,SAASR,IAA5B,eAAAS,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAAgC,SAAAC,EAAMN,GAAN,IAAAzB,EAAA,OAAA4B,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAE,KAAA,oBAElBnC,EAAWyB,EAASH,QAAT,YAFO,CAAAW,EAAAE,KAAA,eAIpBV,EAAS1B,KAAK,IAAIH,EAAgB6B,EAAS1B,KAAMqC,KAAKC,MAAMrC,IAJxCiC,EAAAK,OAAA,SAKbb,GALa,cAAAQ,EAAAK,OAAA,SAOjBb,GAPiB,wBAAAQ,EAAAM,SAAAR,MAAhC,gBAAAS,GAAA,OAAAd,EAAAe,MAAAvC,KAAAG,YAAA,GASG,SAACqC,GACA,IAAAC,EAAsCD,EAAMjB,SAArC1B,EAAP4C,EAAO5C,KAAM6C,EAAbD,EAAaC,OAAQ1B,EAArByB,EAAqBzB,OAAQI,EAA7BqB,EAA6BrB,QAC7B,OAAOsB,GACH,KAAK,IAID,GAHoB,QAAjB1B,EAAO2B,QAAmB9C,EAAK+C,OAAOC,eAAe,MAGrDhD,EAAK+C,OACR,CACI,IAAME,EAAiB,GACvB,IAAI,IAAMC,KAAOlD,EAAK+C,OAEf/C,EAAK+C,OAAOG,IAEXD,EAAiBE,KAAKnD,EAAK+C,OAAOG,IAG1C,MAAMD,EAAiBG,OAIvBC,IAAMV,MAAM3C,GAEhB,MACJ,KAAK,IACW,MAAT6C,GAAgBtB,EAAQ,oBAAoB+B,WAAW,kCACtDjC,EAAMkC,UAAUC,SAChBH,IAAMV,MAAM,yCAGhB,MACJ,KAAK,IACDU,IAAMV,MAAM,aACZ,MACJ,KAAK,IACDU,IAAMV,MAAM,gBAGpB,OAAOc,QAAQC,OAAOf,KAE1B,IAAMgB,EAAc,SAAIjC,GAAJ,OAAiCA,EAAS1B,MAExD4D,EACG,SAAIC,GAAJ,OAAiBjD,IAAMkD,IAAOD,GAAKE,KAAKJ,IAD3CC,EAEI,SAAKC,EAAYG,GAAjB,OAA2BpD,IAAMqD,KAAQJ,EAAKG,GAAMD,KAAKJ,IAF7DC,EAGE,SAAKC,EAAYG,GAAjB,OAA2BpD,IAAMsD,IAAOL,EAAKG,GAAMD,KAAKJ,IAH1DC,EAIM,SAAIC,GAAJ,OAAiBjD,IAAMuD,OAAUN,GAAKE,KAAKJ,IAyCxCS,EANH,CACRC,WAjCa,CACbC,KAAM,SAACC,GAAD,OAA0B3D,IAAMkD,IAAiC,cAAc,CAACS,WAASR,KAAKJ,IACpGa,QAAS,SAACC,GAAD,OAAab,EAAA,eAAAnC,OAAsCgD,KAC5DC,OAAQ,SAACC,GAAD,OAA+Bf,EAAoB,cAAee,IAC1EC,OAAQ,SAACD,GAAD,OAAgCf,EAAA,eAAAnC,OAAkCkD,EAASF,IAAME,IACzFR,OAAQ,SAACM,GAAD,OAAab,EAAA,eAAAnC,OAAqCgD,KAC1DI,OAAQ,SAACJ,GAAD,OAAab,EAAA,eAAAnC,OAAmCgD,EAAnC,WAA+C,MA4BpEK,QAzBU,CACVC,QAAQ,kBAAKnB,EAAmB,aAChCoB,MAAM,SAACC,GAAD,OAAuBrB,EAAoB,iBAAkBqB,IACnEC,SAAS,SAACD,GAAD,OAAuBrB,EAAoB,oBAAqBqB,IACzEE,QAAQ,SAACC,GAAD,OAAsBxB,EAAA,gCAAAnC,OAAoD2D,GAAe,KACjGC,aAAa,kBAAKzB,EAAoB,wBAAwB,MAqB9D0B,SAlBY,CACZxB,IAAK,SAACyB,GAAD,OAAqB3B,EAAA,aAAAnC,OAAmC8D,KAC7DC,YAAY,SAACC,GACT,IAAIC,EAAS,IAAIC,SAEjB,OADAD,EAASE,OAAO,OAAQH,GACjB7E,IAAMqD,KAAY,SAAUyB,EAAS,CACxCnE,QAAQ,CAACsE,eAAe,0BAGhCC,aAAa,SAACrB,GAAD,OAAab,EAAA,WAAAnC,OAAyBgD,EAAzB,YAAsC,KAChEsB,YAAY,SAACtB,GAAD,OAAab,EAAA,WAAAnC,OAA2BgD,KACpDuB,gBAAgB,SAACT,GAAD,OAAmB3B,EAAA,WAAAnC,OAAyB8D,GAAW,KACvEU,eAAe,SAACV,EAAiBW,GAAlB,OAAqCtC,EAAA,WAAAnC,OAAmC8D,EAAnC,eAAA9D,OAAyDyE,KAC7GC,eAAe,SAACZ,EAAiBW,GAAlB,OAAqCtC,EAAA,aAAAnC,OAA0C8D,EAA1C,0BAAA9D,OAA2EyE,OC7FlHE,EAAbtG,OAAAC,EAAA,EAAAD,CACI,SAAAsG,EAAYC,GAA0BvG,OAAAI,EAAA,EAAAJ,CAAAK,KAAAiG,GAClCtG,OAAOwG,OAAOnG,KAAMkG,KAIfE,EAAbzG,OAAAC,EAAA,EAAAD,CASI,SAAAyG,EAAY5B,GAA8B7E,OAAAI,EAAA,EAAAJ,CAAAK,KAAAoG,GAAApG,KAR1CsE,QAAYjE,EAQ6BL,KAPzCqG,MAAa,GAO4BrG,KANzCsG,SAAgB,GAMyBtG,KALzCuG,YAAmB,GAKsBvG,KAJzCwG,KAAiB,KAIwBxG,KAHzCyG,KAAa,GAG4BzG,KAFzC0G,MAAa,GAGNlC,IACCxE,KAAKsE,GAAGE,EAASF,GACjBtE,KAAKqG,MAAM7B,EAAS+B,YACpBvG,KAAKsG,SAAS9B,EAAS8B,SACvBtG,KAAKuG,YAAY/B,EAAS+B,YAC1BvG,KAAKwG,KAAKhC,EAASgC,KACnBxG,KAAK0G,MAAMlC,EAASkC,MACpB1G,KAAKyG,KAAKjC,EAASiC,QC5BtBE,EAAbhH,OAAAC,EAAA,EAAAD,CACI,SAAAgH,EAAY7B,GACXnF,OAAAI,EAAA,EAAAJ,CAAAK,KAAA2G,GACG3G,KAAKoF,SAASN,EAAK8B,SACnB5G,KAAK6G,YAAY/B,EAAK+B,YACtB7G,KAAK8G,MAAMhC,EAAKgC,QCVHC,aAWjB,SAAAA,IAAa,IAAAC,EAAAhH,KAAAL,OAAAI,EAAA,EAAAJ,CAAAK,KAAA+G,GAAA/G,KAVbiH,iBAAiB,IAAIC,IAURlH,KATbmH,sBAAsC9G,EASzBL,KARboH,UAAS,EAQIpH,KAPbqH,SAAQ,EAOKrH,KANbsH,YAAW,EAMEtH,KALbuH,iBAAgB,EAKHvH,KAJbF,WAA8B,KAIjBE,KAHbwH,aAAa,IAAIvH,EAGJD,KAFb+F,WAAU,IAAImB,KAAMO,IAAI,OAAO,GAElBzH,KAab0H,gBAAgB,SAACF,GACbR,EAAKQ,aAAaA,GAdTxH,KAiBb2H,aAAa,SAAC5B,EAAkB6B,GAC5B,IAAMC,EAAgB,WAClBb,EAAKjB,UAAU+B,QAAQ,SAACF,EAAO7E,GAClB,cAANA,GAAmBiE,EAAKjB,UAAU/B,OAAOjB,MAGpD,OAAOgD,GAEH,IAAK,MACD8B,IACAb,EAAKjB,UAAU0B,IAAI,OAAO,GAC1B,MACJ,IAAK,UACDI,IACAb,EAAKjB,UAAU0B,IAAI,WAAW,GAC9B,MACJ,IAAK,SACDI,IACAb,EAAKjB,UAAU0B,IAAI,UAAU,GAC7B,MACJ,IAAK,YACDT,EAAKjB,UAAU/B,OAAO,aACtBgD,EAAKjB,UAAU0B,IAAI,YAAaG,KAvC/B5H,KA4Eb+H,eA5EapI,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KA4EG,SAAAC,IAAA,IAAAmG,EAAA,OAAAtG,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZ+E,EAAKO,iBAAgB,EADTxF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGWgC,EAAMC,WAAWC,KAAK6C,EAAKiB,aAHtC,OAGFD,EAHEjG,EAAAmG,KAIRC,YAAY,WACRH,EAAOnI,KAAKiI,QAAQ,SAAAtD,GAChBwC,EAAKoB,YAAY5D,KAErBwC,EAAKqB,cAAcL,EAAOlI,YAC1BkH,EAAKO,iBAAgB,IATjBxF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAuG,GAAAvG,EAAA,SAaRwG,QAAQC,IAARzG,EAAAuG,IACAH,YAAY,WACRnB,EAAKO,iBAAgB,IAfjB,yBAAAxF,EAAAM,SAAAR,EAAA,iBA5EH7B,KAiGbqI,cAAc,SAACvI,GACXkH,EAAKlH,WAAWA,GAlGPE,KAqGbyI,aArGa,eAAAhG,EAAA9C,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAqGA,SAAA8G,EAAOpE,GAAP,IAAAE,EAAA,OAAA9C,EAAAC,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,YACLuC,EAASwC,EAAK4B,YAAYtE,IADrB,CAAAqE,EAAA1G,KAAA,eAIL+E,EAAKG,iBAAiB3C,EAJjBmE,EAAAvG,OAAA,SAKEoC,GALF,cASLwC,EAAKO,iBAAgB,EAThBoB,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,GAWkBgC,EAAMC,WAAWG,QAAQC,GAX3C,eAWGE,EAXHmE,EAAAT,KAYGlB,EAAKoB,YAAY5D,GACjB2D,YAAY,WACZnB,EAAKG,iBAAiB3C,IAEtBwC,EAAKO,iBAAgB,EAhBxBoB,EAAAvG,OAAA,SAiBUoC,GAjBV,QAAAmE,EAAA3G,KAAA,GAAA2G,EAAAL,GAAAK,EAAA,SAoBDJ,QAAQC,IAARG,EAAAL,IACAtB,EAAKO,iBAAgB,EArBpB,yBAAAoB,EAAAtG,SAAAqG,EAAA,kBArGA,gBAAApG,GAAA,OAAAG,EAAAF,MAAAvC,KAAAG,YAAA,GAAAH,KA+HLoI,YAAY,SAAC5D,GACjB,IAEAqE,EAFM/D,EAAK5D,EAAMkC,UAAU0B,KACxBA,IAECN,EAASsE,QAAQtE,EAASuE,UAAWC,KAAK,SAAArH,GAAC,OAAEA,EAAEyD,WAAWN,EAAK8B,WAC/DpC,EAASyE,OAAOzE,EAAS0E,eAAepE,EAAK8B,SAC7CpC,EAAS2E,KAAT,QAAAN,EAAcrE,EAASuE,iBAAvB,IAAAF,OAAA,EAAcA,EAAoBO,KAAK,SAAAC,GAAC,OAAEA,EAAEjE,WAAWZ,EAAS0E,gBAEpE1E,EAASgC,KAAK,IAAI8C,KAAK9E,EAASgC,MAChCQ,EAAKC,iBAAiBQ,IAAIjD,EAASF,GAAIE,IAxI9BxE,KA0IL4I,YAAY,SAACtE,GAEjB,OAAO0C,EAAKC,iBAAiBtD,IAAIW,IA5IxBtE,KAiJbuJ,eAjJa,eAAAC,EAAA7J,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAiJE,SAAA6H,EAAOjF,GAAP,IAAAM,EAAA4E,EAAAC,EAAA,OAAAjI,EAAAC,EAAAG,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cACL6C,EAAK5D,EAAMkC,UAAU0B,KACrB4E,EAAS,IAAI/C,EAAQ7B,GAC3BkC,EAAKK,SAAQ,EAHFuC,EAAA5H,KAAA,EAAA4H,EAAA3H,KAAA,EAMDgC,EAAMC,WAAWK,OAAOC,GANvB,QAODmF,EAAY,IAAI1D,EAASzB,IACvB0E,aAAapE,EAAM8B,SAC/B+C,EAAYZ,UAAU,CAACW,GACvB1C,EAAKoB,YAAYuB,GACbxB,YAAY,WACRnB,EAAKG,iBAAiBwC,IAZnBC,EAAA3H,KAAA,iBAAA2H,EAAA5H,KAAA,GAAA4H,EAAAtB,GAAAsB,EAAA,SAiBPrB,QAAQC,IAARoB,EAAAtB,IACAH,YAAY,WACRnB,EAAKK,SAAQ,IAnBV,yBAAAuC,EAAAvH,SAAAoH,EAAA,kBAjJF,gBAAAI,GAAA,OAAAL,EAAAjH,MAAAvC,KAAAG,YAAA,GAAAH,KA0Kb8J,eA1Ka,eAAAC,EAAApK,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KA0KE,SAAAoI,EAAOxF,GAAP,OAAA9C,EAAAC,EAAAG,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cACX+E,EAAKK,SAAQ,EADF4C,EAAAjI,KAAA,EAAAiI,EAAAhI,KAAA,EAIDgC,EAAMC,WAAWO,OAAOD,GAJvB,OAKP2D,YAAY,WAGR,GAAG3D,EAASF,GAAG,CACX,IAAIwF,EAAenK,OAAAuK,EAAA,EAAAvK,QAAAuK,EAAA,EAAAvK,CAAA,GAAIqH,EAAK4B,YAAYpE,EAASF,KAAQE,GACzDwC,EAAKC,iBAAiBQ,IAAIjD,EAASF,GAAIwF,GACvC9C,EAAKG,iBAAiB2C,KAXvBG,EAAAhI,KAAA,gBAAAgI,EAAAjI,KAAA,EAAAiI,EAAA3B,GAAA2B,EAAA,SAkBP1B,QAAQC,IAARyB,EAAA3B,IACAH,YAAY,WACRnB,EAAKK,SAAQ,IApBV,yBAAA4C,EAAA5H,SAAA2H,EAAA,iBA1KF,gBAAAG,GAAA,OAAAJ,EAAAxH,MAAAvC,KAAAG,YAAA,GAAAH,KAkMboK,eAlMa,eAAAC,EAAA1K,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAkME,SAAA0I,EAAOhG,GAAP,OAAA5C,EAAAC,EAAAG,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cACX+E,EAAKK,SAAQ,EADFkD,EAAAvI,KAAA,EAAAuI,EAAAtI,KAAA,EAIDgC,EAAMC,WAAWF,OAAOM,GAJvB,OAKP6D,YAAY,WACRnB,EAAKC,iBAAiBjD,OAAOM,GAC7B0C,EAAKK,SAAQ,IAPVkD,EAAAtI,KAAA,gBAAAsI,EAAAvI,KAAA,EAAAuI,EAAAjC,GAAAiC,EAAA,SAYPhC,QAAQC,IAAR+B,EAAAjC,IACAH,YAAY,WACRnB,EAAKK,SAAQ,IAdV,yBAAAkD,EAAAlI,SAAAiI,EAAA,iBAlMF,gBAAAE,GAAA,OAAAH,EAAA9H,MAAAvC,KAAAG,YAAA,GAAAH,KAqNbyK,iBArNa9K,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAqNI,SAAA8I,IAAA,IAAA5F,EAAA,OAAApD,EAAAC,EAAAG,KAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cACP6C,EAAK5D,EAAMkC,UAAU0B,KAC3BkC,EAAKK,SAAQ,EAFAsD,EAAA3I,KAAA,EAAA2I,EAAA1I,KAAA,EAIHgC,EAAMC,WAAWQ,OAAOsC,EAAKG,iBAAkB7C,IAJ5C,OAKT6D,YAAY,WAAI,IAAAyC,EACZ,WAAAA,EAAG5D,EAAKG,wBAAR,IAAAyD,OAAA,EAAGA,EAAuB9B,QAAQ,KAAA+B,EAC9B7D,EAAKG,iBAAiB4B,UAAtB,QAAA8B,EAAgC7D,EAAKG,iBAAiB4B,iBAAtD,IAAA8B,OAAA,EAAgCA,EAAiCC,OAAO,SAAAnJ,GAAC,OAAGA,EAAEyD,YAAF,OAAaN,QAAb,IAAaA,OAAb,EAAaA,EAAM8B,YAC/FI,EAAKG,iBAAiB2B,SAAQ,MAE9B,KAAAiC,EAAAC,EACMtB,EAAS,IAAI/C,EAAQ7B,GAC3B,QAAAiG,EAAA/D,EAAKG,wBAAL,IAAA4D,GAAA,QAAAC,EAAAD,EAAuBhC,iBAAvB,IAAAiC,KAAkChI,KAAK0G,GACvC1C,EAAKG,iBAAkB2B,SAAQ,EAGnC9B,EAAKC,iBAAiBQ,IAAIT,EAAKG,iBAAkB7C,GAAI0C,EAAKG,oBAhBrDwD,EAAA1I,KAAA,gBAAA0I,EAAA3I,KAAA,EAAA2I,EAAArC,GAAAqC,EAAA,SAqBTpC,QAAQC,IAARmC,EAAArC,IArBS,eAAAqC,EAAA3I,KAAA,GAwBTmG,YAAY,kBAAInB,EAAKK,SAAQ,IAxBpBsD,EAAAM,OAAA,6BAAAN,EAAAtI,SAAAqI,EAAA,uBArNJ1K,KAiPbkL,qBAjPavL,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAiPQ,SAAAuJ,IAAA,OAAAzJ,EAAAC,EAAAG,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cACjB+E,EAAKK,SAAQ,EADI+D,EAAApJ,KAAA,EAAAoJ,EAAAnJ,KAAA,EAGPgC,EAAMC,WAAWQ,OAAOsC,EAAKG,iBAAkB7C,IAHxC,OAIb6D,YAAY,WAAI,IAAAkD,EACZrE,EAAKG,iBAAkBmE,cAAY,QAAAD,EAACrE,EAAKG,wBAAN,IAAAkE,OAAA,EAACA,EAAuBC,aAC3DtE,EAAKC,iBAAiBQ,IAAIT,EAAKG,iBAAkB7C,GAAI0C,EAAKG,oBANjDiE,EAAAnJ,KAAA,gBAAAmJ,EAAApJ,KAAA,EAAAoJ,EAAA9C,GAAA8C,EAAA,SAWb7C,QAAQC,IAAR4C,EAAA9C,IAXa,eAAA8C,EAAApJ,KAAA,GAcbmG,YAAY,kBAAInB,EAAKK,SAAQ,IAdhB+D,EAAAH,OAAA,6BAAAG,EAAA/I,SAAA8I,EAAA,uBAjPRnL,KAmQbuL,sBAAsB,WAClBvE,EAAKG,sBAAiB9G,GApQbL,KAuQbwL,wBAAwB,SAACpG,GAErB4B,EAAKC,iBAAiBa,QAAQ,SAAAtD,GAC1BA,EAASuE,UAAUjB,QAAQ,SAAA4B,GACpBA,EAAStE,WAAWA,IAEnBsE,EAAS+B,UAAU/B,EAASgC,gBAAiBhC,EAASgC,gBACtDhC,EAAS+B,WAAW/B,EAAS+B,gBA7QzCE,YAAmB3L,MAEnB4L,YACI,kBAAI5E,EAAKjB,UAAU8F,QACnB,WAAK7E,EAAKQ,aAAa,IAAIvH,EACvB+G,EAAKC,iBAAiB6E,QACtB9E,EAAKe,gEAqClB,WACI,IAAM3D,EAAO,IAAI2H,gBAajB,OAZA3H,EAAOqB,OAAO,aAAczF,KAAKwH,aAAajH,WAAWyL,YACzD5H,EAAOqB,OAAO,WAAYzF,KAAKwH,aAAahH,SAASwL,YACrDhM,KAAK+F,UAAU+B,QAAQ,SAACF,EAAO7E,GAClB,cAANA,EAECqB,EAAOqB,OAAO1C,EAAM6E,EAAeqE,eAInC7H,EAAOqB,OAAO1C,EAAK6E,KAGpBxD,8BAEV,WACI,OAAO8H,MAAMC,KAAKnM,KAAKiH,iBAAiBmF,UAAUC,KAAK,SAAC1K,EAAE2K,GAAH,OACvD3K,EAAE6E,KAAM+F,UAAUD,EAAE9F,KAAM+F,2CAI9B,WACI,OAAO5M,OAAO6M,QACVxM,KAAKyM,eAAeC,OAAO,SAACC,EAAYnI,GACpC,IAAMgC,EAAOoG,kBAAOpI,EAASgC,KAAO,eAEpC,OADAmG,EAAWnG,GAAMmG,EAAWnG,GAAX,GAAAlF,OAAA3B,OAAAkN,EAAA,EAAAlN,CAAqBgN,EAAWnG,IAAhC,CAAuChC,IAAU,CAACA,GAC5DmI,GACR,8BCtFMG,cAIjB,SAAAA,IAAa,IAAA9F,EAAAhH,KAAAL,OAAAI,EAAA,EAAAJ,CAAAK,KAAA8M,GAAA9M,KAHb+M,SAAuB,GAGV/M,KAFbgN,cAAmC,KAEtBhN,KAIbiN,oBAAoB,SAACC,GACdhM,EAAMiM,cAAchG,mBACnBH,EAAKgG,eAAc,IAAII,KAAuBC,QAAQzM,oBAAgDsM,EAAW,CAC7GI,mBAAmB,eAAAC,EAAA,eAAAA,EAAIrM,EAAMkC,UAAU0B,YAApB,IAAAyI,OAAA,EAAIA,EAAsBtM,SAEhDuM,yBACAC,iBAAiBC,IAASC,aAC1BC,QAED5G,EAAKgG,cAAca,QAAQC,MAAM,SAAAtL,GAAK,OAAE+F,QAAQC,IAAI,qCAAsChG,KAE1FwE,EAAKgG,cAAce,GAAG,eAAe,SAAChB,GAClC5E,YAAY,WACR4E,EAASjF,QAAQ,SAAAkG,GACbA,EAAQC,UAAU,IAAI3E,KAAK0E,EAAQC,UAAY,OAEnDjH,EAAK+F,SAASA,MAGtB/F,EAAKgG,cAAce,GAAG,iBAAiB,SAACC,GACpC7F,YAAY,WACR6F,EAAQC,UAAU,IAAI3E,KAAK0E,EAAQC,WACnCjH,EAAK+F,SAASmB,QAAQF,SA1BzBhO,KA+BbmO,kBAAkB,WAAI,IAAAC,EAClB,QAAAA,EAAApH,EAAKgG,qBAAL,IAAAoB,KAAoB/L,OAAOyL,MAAM,SAAAtL,GAAK,OAAE+F,QAAQC,IAAI,4BAA6BhG,MAhCxExC,KAmCbqO,cAAc,WACVrH,EAAK+F,SAAS,GACd/F,EAAKmH,qBArCInO,KAwCbsO,WAxCa,eAAA9M,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAwCF,SAAAC,EAAMuK,GAAN,IAAAmC,EAAAC,EAAA,OAAA9M,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPmK,EAAOc,WAAP,QAAAqB,EAAkBrN,EAAMiM,cAAchG,wBAAtC,IAAAoH,OAAA,EAAkBA,EAAsCjK,GADjDvC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,UAAAuM,EAGGxH,EAAKgG,qBAHR,IAAAwB,OAAA,EAGGA,EAAoBC,OAAO,cAAerC,GAH7C,OAAArK,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAuG,GAAAvG,EAAA,SAOHwG,QAAQC,IAARzG,EAAAuG,IAPG,wBAAAvG,EAAAM,SAAAR,EAAA,iBAxCE,gBAAAS,GAAA,OAAAd,EAAAe,MAAAvC,KAAAG,YAAA,GACTwL,YAAmB3L,QCPN0O,cAKjB,SAAAA,IAAa,IAAA1H,EAAAhH,KAAAL,OAAAI,EAAA,EAAAJ,CAAAK,KAAA0O,GAAA1O,KAJbwC,MAAuB,KAIVxC,KAHbiB,MAAkB0N,OAAOC,aAAaC,QAAQ,OAGjC7O,KAFb8O,WAAU,EAEG9O,KAgBb+O,eAAe,SAACvM,GACZwE,EAAKxE,MAAMA,GAjBFxC,KAoBbgP,SAAS,SAAC/N,GAEN+F,EAAK/F,MAAMA,GAtBFjB,KAyBbiP,aAAa,WACTjI,EAAK8H,WAAU,GAzBfnD,YAAmB3L,MACnB4L,YACI,kBAAI5E,EAAK/F,OACT,SAAAA,GACOA,EAEC0N,OAAOC,aAAaM,QAAQ,MAAOjO,GAInC0N,OAAOC,aAAaO,WAAW,WCZ9BC,cAOjB,SAAAA,IAAa,IAAApI,EAAAhH,KAAAL,OAAAI,EAAA,EAAAJ,CAAAK,KAAAoP,GAAApP,KALbqP,MAAa,CACTC,MAAK,EACLzL,KAAM,MAGG7D,KAIbuP,UAAU,SAACC,GACPxI,EAAKqI,MAAMC,MAAK,EAChBtI,EAAKqI,MAAMxL,KAAK2L,GANPxP,KASbyP,WAAW,WACPzI,EAAKqI,MAAMC,MAAK,EAChBtI,EAAKqI,MAAMxL,KAAK,MAVhB8H,YAAmB3L,QCVN0P,aAUjB,SAAAA,IAAa,IAAA1I,EAAAhH,KAAAL,OAAAI,EAAA,EAAAJ,CAAAK,KAAA0P,GAAA1P,KATb2P,QAAqB,KASR3P,KARb4P,gBAAe,EAQF5P,KAPb6P,WAAU,EAOG7P,KANbqH,SAAQ,EAMKrH,KALb8P,WAAqB,GAKR9P,KAJb+P,mBAAkB,EAIL/P,KAHbgQ,UAAU,EAGGhQ,KAFbiQ,eAA8B,GAEjBjQ,KADbkQ,mBAAkB,EACLlQ,KAebmQ,aAAa,SAACH,GACVhJ,EAAKgJ,UAAUA,GAhBNhQ,KA0BboQ,YA1Ba,eAAA5O,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KA0BD,SAAAC,EAAOuD,GAAP,IAAAuK,EAAA,OAAAjO,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACR+E,EAAK4I,gBAAe,EADZ7N,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgBgC,EAAMkB,SAASxB,IAAIyB,GAHnC,OAGEuK,EAHF5N,EAAAmG,KAIJC,YAAY,WACRnB,EAAK2I,QAAQA,EACb3I,EAAK4I,gBAAe,IANpB7N,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAuG,GAAAvG,EAAA,SAWJwG,QAAQC,IAARzG,EAAAuG,IACAH,YAAY,kBAAInB,EAAK4I,gBAAe,IAZhC,yBAAA7N,EAAAM,SAAAR,EAAA,iBA1BC,gBAAAS,GAAA,OAAAd,EAAAe,MAAAvC,KAAAG,YAAA,GAAAH,KA0CbqF,YA1Ca,eAAA5C,EAAA9C,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KA0CC,SAAA8G,EAAMpD,GAAN,IAAA/D,EAAA8O,EAAA,OAAA3O,EAAAC,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cACV+E,EAAK6I,WAAU,EADLlH,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,EAGegC,EAAMkB,SAASE,YAAYC,GAH1C,OAGA/D,EAHAoH,EAAAT,KAIAmI,EAAM9O,EAAS1B,KACrBsI,YAAY,WACQ,IAAAmI,EAAbtJ,EAAK2I,UACJ,QAAAW,EAAAtJ,EAAK2I,QAAQY,cAAb,IAAAD,KAAqBtN,KAAKqN,GACvBA,EAAMG,QAAUtP,EAAMkC,UAAU0B,OAC/B5D,EAAMkC,UAAUqN,SAASJ,EAAM3M,KAC/BsD,EAAK2I,QAAQ7I,MAAMuJ,EAAM3M,MAGjCsD,EAAK6I,WAAU,IAbblH,EAAA1G,KAAA,gBAAA0G,EAAA3G,KAAA,EAAA2G,EAAAL,GAAAK,EAAA,SAkBNJ,QAAQC,IAARG,EAAAL,IACAH,YAAY,kBAAInB,EAAK6I,WAAU,IAnBzB,yBAAAlH,EAAAtG,SAAAqG,EAAA,iBA1CD,gBAAAmB,GAAA,OAAApH,EAAAF,MAAAvC,KAAAG,YAAA,GAAAH,KAiEb2F,aAjEa,eAAA6D,EAAA7J,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAiEA,SAAA6H,EAAM4G,GAAN,OAAA3O,EAAAC,EAAAG,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cACT+E,EAAKK,SAAQ,EADJuC,EAAA5H,KAAA,EAAA4H,EAAA3H,KAAA,EAGCgC,EAAMkB,SAASQ,aAAa0K,EAAM/L,IAHnC,OAILpD,EAAMkC,UAAUqN,SAASJ,EAAM3M,KAC/ByE,YAAY,WACLnB,EAAK2I,SAAW3I,EAAK2I,QAAQY,SAC5BvJ,EAAK2I,QAAQY,OAAOnH,KAAK,SAAAsH,GAAC,OAAEA,EAAEF,SAASA,QAAO,EAC9CxJ,EAAK2I,QAAQY,OAAOnH,KAAK,SAAAsH,GAAC,OAAEA,EAAEpM,KAAK+L,EAAM/L,KAAKkM,QAAO,EACrDxJ,EAAK2I,QAAQ7I,MAAMuJ,EAAM3M,IACzBsD,EAAKK,SAAQ,KAVhBuC,EAAA3H,KAAA,gBAAA2H,EAAA5H,KAAA,EAAA4H,EAAAtB,GAAAsB,EAAA,SAcLzB,YAAY,kBAAInB,EAAKK,SAAQ,IAC7BkB,QAAQC,IAARoB,EAAAtB,IAfK,yBAAAsB,EAAAvH,SAAAoH,EAAA,iBAjEA,gBAAAU,GAAA,OAAAX,EAAAjH,MAAAvC,KAAAG,YAAA,GAAAH,KAoFb4F,YApFa,eAAAmE,EAAApK,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAoFD,SAAAoI,EAAOqG,GAAP,OAAA3O,EAAAC,EAAAG,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cACR+E,EAAKK,SAAQ,EADL4C,EAAAjI,KAAA,EAAAiI,EAAAhI,KAAA,EAGEgC,EAAMkB,SAASS,YAAYyK,EAAM/L,IAHnC,OAIJ6D,YAAY,WACQ,IAAAwI,EAAb3J,EAAK2I,UACJ3I,EAAK2I,QAAQY,OAAb,QAAAI,EAAoB3J,EAAK2I,QAAQY,cAAjC,IAAAI,OAAA,EAAoBA,EAAqB7F,OAAO,SAAA4F,GAAC,OAAEA,EAAEpM,KAAK+L,EAAM/L,KAChE0C,EAAKK,SAAQ,KAPjB4C,EAAAhI,KAAA,gBAAAgI,EAAAjI,KAAA,EAAAiI,EAAA3B,GAAA2B,EAAA,SAYJ9B,YAAY,kBAAInB,EAAKK,SAAQ,IAC7BkB,QAAQC,IAARyB,EAAA3B,IAbI,yBAAA2B,EAAA5H,SAAA2H,EAAA,iBApFC,gBAAAQ,GAAA,OAAAT,EAAAxH,MAAAvC,KAAAG,YAAA,GAAAH,KAqGb6F,gBArGa,eAAAwE,EAAA1K,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAqGG,SAAA0I,EAAOlF,EAAiBqG,GAAxB,OAAA/J,EAAAC,EAAAG,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cACZ+E,EAAKK,SAAQ,EADDkD,EAAAvI,KAAA,EAAAuI,EAAAtI,KAAA,EAIFgC,EAAMkB,SAASU,gBAAgBT,GAJ7B,OAKRlE,EAAMiM,cAAc3B,wBAAwBpG,GAC5C+C,YAAY,WAAI,IAAAoF,EAAAqD,EACT5J,EAAK2I,SAAW3I,EAAK2I,QAAQvK,YAAb,QAAAmI,EAAwBrM,EAAMkC,UAAU0B,YAAxC,IAAAyI,OAAA,EAAwBA,EAAsB3G,WAAYI,EAAK2I,QAAQvK,WAAWA,IACjGqG,EAAUzE,EAAK2I,QAAQjE,gBAAkB1E,EAAK2I,QAAQjE,gBACtD1E,EAAK2I,QAAQlE,WAAWzE,EAAK2I,QAAQlE,WAEtCzE,EAAK2I,SAAW3I,EAAK2I,QAAQvK,YAAb,QAAAwL,EAAwB1P,EAAMkC,UAAU0B,YAAxC,IAAA8L,OAAA,EAAwBA,EAAsBhK,YAC7D6E,EAAUzE,EAAK2I,QAAQkB,iBAAiB7J,EAAK2I,QAAQkB,kBAEzD7J,EAAK8I,WAAWhI,QAAQ,SAAA6H,GACjBA,EAAQvK,WAAWA,IAElBuK,EAAQlE,UAAUkE,EAAQjE,gBAAiBiE,EAAQjE,gBACnDiE,EAAQlE,WAAWkE,EAAQlE,aAInCzE,EAAKK,SAAQ,IAtBTkD,EAAAtI,KAAA,gBAAAsI,EAAAvI,KAAA,EAAAuI,EAAAjC,GAAAiC,EAAA,SA2BRhC,QAAQC,IAAR+B,EAAAjC,IACAH,YAAY,kBAAInB,EAAKK,SAAQ,IA5BrB,yBAAAkD,EAAAlI,SAAAiI,EAAA,iBArGH,gBAAAwG,EAAAC,GAAA,OAAA1G,EAAA9H,MAAAvC,KAAAG,YAAA,GAAAH,KAqIbgR,cArIa,eAAAC,EAAAtR,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAqIC,SAAA8I,EAAM3E,GAAN,IAAA0F,EAAA,OAAA/J,EAAAC,EAAAG,KAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cACV+E,EAAK+I,mBAAkB,EADbpF,EAAA3I,KAAA,EAAA2I,EAAA1I,KAAA,EAIgBgC,EAAMkB,SAASW,eAAekB,EAAK2I,QAASvK,SAAUW,GAJtE,OAIA0F,EAJAd,EAAAzC,KAKNC,YAAY,WACRnB,EAAK8I,WAAWrE,EAChBzE,EAAK+I,mBAAkB,IAPrBpF,EAAA1I,KAAA,gBAAA0I,EAAA3I,KAAA,EAAA2I,EAAArC,GAAAqC,EAAA,SAaNpC,QAAQC,IAARmC,EAAArC,IACAH,YAAY,kBAAInB,EAAK+I,mBAAkB,IAdjC,yBAAApF,EAAAtI,SAAAqI,EAAA,iBArID,gBAAAwG,GAAA,OAAAD,EAAA1O,MAAAvC,KAAAG,YAAA,GAAAH,KAuJbmR,mBAvJa,eAAAC,EAAAzR,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAuJO,SAAAuJ,EAAO/F,EAAiBW,GAAxB,IAAA4G,EAAA,OAAAjL,EAAAC,EAAAG,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cAChB+E,EAAKkJ,mBAAkB,EADP9E,EAAApJ,KAAA,EAAAoJ,EAAAnJ,KAAA,EAIWgC,EAAMkB,SAASa,eAAeZ,EAAUW,GAJnD,OAIN4G,EAJMvB,EAAAlD,KAKZC,YAAY,WACRnB,EAAKiJ,eAAetD,EACpB3F,EAAKkJ,mBAAkB,IAPf9E,EAAAnJ,KAAA,gBAAAmJ,EAAApJ,KAAA,EAAAoJ,EAAA9C,GAAA8C,EAAA,SAYZ7C,QAAQC,IAAR4C,EAAA9C,IACAH,YAAY,kBAAInB,EAAKkJ,mBAAkB,IAb3B,yBAAA9E,EAAA/I,SAAA8I,EAAA,iBAvJP,gBAAAkG,EAAAC,GAAA,OAAAF,EAAA7O,MAAAvC,KAAAG,YAAA,GACTwL,YAAmB3L,MAEnB4L,YACI,kBAAK5E,EAAKgJ,WACN,SAAAA,GACA,GAAe,IAAZA,GAAkC,IAAjBhJ,EAAKgJ,UAAc,CACnC,IAAMjK,EAA2B,IAAjBiB,EAAKgJ,UAAe,YAAY,YAChDhJ,EAAKgK,cAAcjL,QAGnBiB,EAAK8I,WAAW,oDAOhC,WACI,SAAG5O,EAAMkC,UAAU0B,OAAQ9E,KAAK2P,UACrBzO,EAAMkC,UAAU0B,KAAK8B,WAAW5G,KAAK2P,QAAQvK,kBC5B3CmM,aAMjB,SAAAA,IAAa,IAAAvK,EAAAhH,KAAAL,OAAAI,EAAA,EAAAJ,CAAAK,KAAAuR,GAAAvR,KALb8E,KAAe,KAKF9E,KAJbwR,cAA+B,KAIlBxR,KAHbyR,WAAU,EAGGzR,KAFb0R,yBAEa,EAAA1R,KAQb6E,MARa,eAAArD,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAQP,SAAAC,EAAO8P,GAAP,IAAA7M,EAAA,OAAApD,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBgC,EAAMU,QAAQE,MAAM8M,GAFvC,cAEQ7M,EAFR/C,EAAAmG,KAGEhH,EAAMC,YAAY6N,SAASlK,EAAK7D,OAChC+F,EAAK4K,uBAAuB9M,GAC5BqD,YAAY,kBAAKnB,EAAKlC,KAAKA,IAC3B5D,EAAM2Q,WAAWpC,aANnB1N,EAAAK,OAAA,SAOS0P,GAAQ9O,KAAK,gBAPtB,cAAAjB,EAAAC,KAAA,GAAAD,EAAAuG,GAAAvG,EAAA,SAAAA,EAAAuG,GAAA,yBAAAvG,EAAAM,SAAAR,EAAA,kBARO,gBAAAS,GAAA,OAAAd,EAAAe,MAAAvC,KAAAG,YAAA,GAAAH,KAqBbqD,OAAO,WAIH,OAHAnC,EAAMC,YAAY6N,SAAS,MAC3BL,OAAOC,aAAaO,WAAW,OAC/BnI,EAAKlC,KAAK,KACHgN,GAAQ9O,KAAK,MAzBXhD,KA4Bb+R,QA5BapS,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KA4BL,SAAA8G,IAAA,IAAA5D,EAAA,OAAApD,EAAAC,EAAAG,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAA0G,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,EAEiBgC,EAAMU,QAAQC,UAF/B,OAEME,EAFN6D,EAAAT,KAGAhH,EAAMC,YAAY6N,SAASlK,EAAK7D,OAChCkH,YAAY,kBAAInB,EAAKlC,KAAKA,IAC1BkC,EAAK4K,uBAAuB9M,GAL5B6D,EAAA1G,KAAA,gBAAA0G,EAAA3G,KAAA,EAAA2G,EAAAL,GAAAK,EAAA,SAQAJ,QAAQC,IAARG,EAAAL,IARA,yBAAAK,EAAAtG,SAAAqG,EAAA,iBA5BK1I,KAwCb+E,SAxCa,eAAAyE,EAAA7J,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAwCJ,SAAA6H,EAAOkI,GAAP,IAAA7M,EAAA,OAAApD,EAAAC,EAAAG,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAAA2H,EAAA5H,KAAA,EAAA4H,EAAA3H,KAAA,EAEgBgC,EAAMU,QAAQI,SAAS4M,GAFvC,cAEK7M,EAFL8E,EAAA1B,KAGDhH,EAAMC,YAAY6N,SAASlK,EAAK7D,OAChC+F,EAAK4K,uBAAuB9M,GAC5BqD,YAAY,kBAAKnB,EAAKlC,KAAKA,IAC3B5D,EAAM2Q,WAAWpC,aANhB7F,EAAAxH,OAAA,SAOM0P,GAAQ9O,KAAK,gBAPnB,cAAA4G,EAAA5H,KAAA,GAAA4H,EAAAtB,GAAAsB,EAAA,SAAAA,EAAAtB,GAAA,yBAAAsB,EAAAvH,SAAAoH,EAAA,kBAxCI,gBAAAI,GAAA,OAAAL,EAAAjH,MAAAvC,KAAAG,YAAA,GAAAH,KAqDbyQ,SAAS,SAAC3J,GACHE,EAAKlC,OAAMkC,EAAKlC,KAAKgC,MAAMA,IAtDrB9G,KAyDbgS,uBAzDarS,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAyDU,SAAAoI,IAAA,OAAAtI,EAAAC,EAAAG,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,OACnB0M,OAAOsD,GAAGC,eAAe,SAAA3Q,GACA,cAAlBA,EAASmB,SAERsE,EAAKwK,cAAcjQ,EAAS4Q,aAAalN,eAJ9B,wBAAAgF,EAAA5H,SAAA2H,MAzDVhK,KAkEboS,cAAc,WACVpL,EAAKyK,WAAU,EACf,IAAMY,EAAS,SAACpN,GACZhB,EAAMU,QAAQK,QAAQC,GAAarB,KAAK,SAAAkB,GACpC5D,EAAMC,YAAY6N,SAASlK,EAAK7D,OAChC+F,EAAK4K,uBAAuB9M,GAC5BqD,YAAY,WACRnB,EAAKlC,KAAKA,EACVkC,EAAKyK,WAAU,MAIpB3D,MAAM,SAAAtL,GACL+F,QAAQC,IAAIhG,GACZ2F,YAAY,kBAAInB,EAAKyK,WAAU,OAIpCzK,EAAKwK,cACJa,EAASrL,EAAKwK,eAId7C,OAAOsD,GAAGpN,MAAM,SAAAtD,GACZ8Q,EAAS9Q,EAAS4Q,aAAalN,cACjC,CAACqN,MAAM,0BA3FJtS,KAoGbkF,aApGavF,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAoGA,SAAA0I,IAAA,IAAAxF,EAAA,OAAApD,EAAAC,EAAAG,KAAA,SAAAyI,GAAA,cAAAA,EAAAvI,KAAAuI,EAAAtI,MAAA,cACT+E,EAAKuL,wBADIhI,EAAAvI,KAAA,EAAAuI,EAAAtI,KAAA,EAGYgC,EAAMU,QAAQO,eAH1B,OAGCJ,EAHDyF,EAAArC,KAILC,YAAY,kBAAInB,EAAKlC,KAAKA,IAC1B5D,EAAMC,YAAY6N,SAASlK,EAAK7D,OAChC+F,EAAK4K,uBAAuB9M,GANvByF,EAAAtI,KAAA,iBAAAsI,EAAAvI,KAAA,GAAAuI,EAAAjC,GAAAiC,EAAA,SASLhC,QAAQC,IAAR+B,EAAAjC,IATK,yBAAAiC,EAAAlI,SAAAiI,EAAA,kBAnGTqB,YAAmB3L,kDAGvB,WACI,QAASA,KAAK8E,2CA4GlB,SAA+BA,GAC3B,IAAM0N,EAAStQ,KAAKC,MAAMsQ,KAAK3N,EAAK7D,MAAMyR,MAAM,KAAK,KAE/CC,EADQ,IAAIrJ,KAAkB,IAAbkJ,EAASI,KACVrG,UAAUjD,KAAKuJ,MAAO,IAC5CtK,QAAQC,IAAI,WAAWmK,GACvB3S,KAAK0R,oBAAoBoB,WAAW9S,KAAKkF,aAAcyN,wCAG3D,WACII,aAAa/S,KAAK0R,8BCtHbxQ,EAAY,CACrBiM,cAAc,IAAIpG,EAClB5F,YAAY,IAAIuN,EAChBtL,UAAU,IAAImO,EACdM,WAAW,IAAIzC,EACf4D,aAAc,IAAItD,EAClBuD,aAAa,IAAInG,GAGRoG,EAAaC,wBAAcjS,GAEjC,SAASkS,IACZ,OAAOC,qBAAWH,GCtBPI,kBAAU,WACrB,IAAAC,EAAiCH,IAA1BhQ,UAAW0B,EAAlByO,EAAkBzO,KAAMzB,EAAxBkQ,EAAwBlQ,OACxB,OACAmQ,EAAA7R,EAAA8R,cAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,OACjBJ,EAAA7R,EAAA8R,cAACI,EAAA,EAAD,KACIL,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,IAAIC,QAAM,GACjCV,EAAA7R,EAAA8R,cAAA,OAAKU,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAACC,YAAY,MAD/D,cAIAd,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,cAAcM,KAAK,eAC9Cf,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,KACIN,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQT,GAAIC,IAASC,GAAG,kBAAkBQ,UAAQ,EAACjF,QAAQ,qBAE/DgE,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,CAAWY,SAAS,SAChBlB,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOR,KAAS,OAAJrP,QAAI,IAAJA,OAAA,EAAAA,EAAMgC,QAAS,kBAAmB8N,QAAM,EAACC,OAAO,UAC5DrB,EAAA7R,EAAA8R,cAACqB,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAI,OAAElQ,QAAF,IAAEA,OAAF,EAAEA,EAAM+B,aACtC2M,EAAA7R,EAAA8R,cAACqB,EAAA,EAASpB,KAAV,KACAF,EAAA7R,EAAA8R,cAACqB,EAAA,EAAShB,KAAV,CAAeC,GAAIkB,IAAMhB,GAAE,aAAA3S,OAAA,OAAewD,QAAf,IAAeA,OAAf,EAAeA,EAAM8B,UAAYoO,KAAK,aAAaE,KAAK,SACnF1B,EAAA7R,EAAA8R,cAACqB,EAAA,EAAShB,KAAV,CAAeqB,QAAS9R,EAAQ2R,KAAK,SAASE,KAAK,iFCnBxD5B,eAAS,WACpB,IAAA8B,EAAgDhC,IAAzCjG,cAAepH,EAAtBqP,EAAsBrP,UAAW4B,EAAjCyN,EAAiCzN,aACjC,OACI6L,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACA7B,EAAA7R,EAAA8R,cAACC,EAAA,EAAD,CAAM4B,UAAQ,EAACC,KAAK,QAAQlB,MAAO,CAACmB,MAAM,OAAQC,UAAU,KACxDjC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQR,KAAK,SAASS,UAAQ,EAACC,MAAM,OAAOpG,QAAQ,YACpDgE,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,CACItE,QAAQ,iBACRqG,OAAQ9P,EAAU+P,IAAI,OACtBX,QAAS,kBAAIxN,EAAa,MAAO,WAErC6L,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,CAAWtE,QAAQ,YACfqG,OAAQ9P,EAAU+P,IAAI,WACtBX,QAAS,kBAAIxN,EAAa,UAAW,WAEzC6L,EAAA7R,EAAA8R,cAACC,EAAA,EAAKI,KAAN,CACAtE,QAAQ,cACRqG,OAAQ9P,EAAU+P,IAAI,UACtBX,QAAS,kBAAIxN,EAAa,SAAU,YAGxC6L,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,MACAlC,EAAA7R,EAAA8R,cAACsC,GAAA,EAAD,CACIC,SAAU,SAACxP,GAAD,OAAcmB,EAAa,YAAanB,IAClDoB,MAAO7B,EAAUpC,IAAI,cAAe,IAAI2F,yFCpBrCgK,eAAS,SAAA9R,GAAsC,IAAAyU,EAAftG,EAAenO,EAAfmO,QAC3CuG,EAAgC9C,IAAzBJ,EAAPkD,EAAOlD,aAAc5P,EAArB8S,EAAqB9S,UAEdyC,EAA0BmN,EAA1BnN,gBAAiBwB,EAAS2L,EAAT3L,QACxB,IAAG,QAAA4O,EAAA7S,EAAU0B,YAAV,IAAAmR,OAAA,EAAAA,EAAgBrP,YAAa+I,EAAQvK,SAAU,OAAO,KAOzD,OACIoO,EAAA7R,EAAA8R,cAAC0C,GAAA,EAAD,CAAQC,SAAS,QACjB5C,EAAA7R,EAAA8R,cAAC0C,GAAA,EAAOE,QAAR,CAAgBC,SAAO,EAACjC,MAAO,CAACmB,MAAM,SAClChC,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CACA+B,OAAK,EACLX,MAAM,OACNpG,QAASG,EAAQlE,UAAU,YAAY,mBAE3C+H,EAAA7R,EAAA8R,cAAC0C,GAAA,EAAOE,QAAR,CAAgBG,QAAM,EAACnC,MAAO,CAACmB,MAAM,SACjChC,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CACIiC,OAAK,EACLF,OAAK,EACLX,MAAOjG,EAAQlE,UAAU,MAAM,QAC/B+D,QAASG,EAAQlE,UAAU,WAAW,SACtCpE,QAASA,EACT8N,QAAS,SAACuB,GAAD,OApBrB,SAAsBA,EAAkBtR,GAEpCsR,EAAEC,iBACFhH,EAAQlE,UAAU5F,EAAgBT,GAAU,GAAQS,EAAgBT,GAAU,GAiBxDwR,CAAaF,EAAE/G,EAAQvK,iBCzBtCkO,eAAS,SAAA9R,GAAqC,IAAfmO,EAAenO,EAAfmO,QAC1C,OACI6D,EAAA7R,EAAA8R,cAACoD,GAAA,EAAD,CAAM9C,GAAIkB,IAAMhB,GAAE,aAAA3S,OAAeqO,EAAQvK,WACrCoO,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOR,IAAKxE,EAAQ7I,OAAS,qBAC7B0M,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKR,QAAN,KACI7C,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKnB,OAAN,KAAc/F,EAAQ9I,aACtB2M,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKC,YAAN,KAAmBnH,EAAQoH,MAE/BvD,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKR,QAAN,CAAcW,OAAK,GACfxD,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,SACV5E,EAAQjE,eAEb8H,EAAA7R,EAAA8R,cAACyD,GAAD,CAAcvH,QAASA,OCbpB2D,eAAS,SAAA9R,GACxB,IAD2DuH,EAC3DvH,EAD2DuH,UAEjDsL,EAAM,CACR8C,YAAa,SACbC,YAAa,GAEjB,OACI5D,EAAA7R,EAAA8R,cAAC4D,GAAA,EAAD,CAAMC,YAAU,GACXvO,EAAUwO,IAAI,SAAA7N,GAAQ,OACP8J,EAAA7R,EAAA8R,cAAC+D,GAAA,EAAD,CAAOC,WAAS,EAAC1U,IAAK2G,EAAStE,SAC/BsS,QACDlE,EAAA7R,EAAA8R,cAAC4D,GAAA,EAAKvD,KAAN,CAAW/Q,IAAK2G,EAAStE,SAAU2O,GAAIkB,IAAMhB,GAAE,aAAA3S,OAAeoI,EAAStE,WACvEoO,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CACKY,KAAK,OAAOoC,UAAQ,EAACxD,IAAKzK,EAAS5C,OAAQ,mBAC3C8Q,UAAQ,EACRvD,MAAO3K,EAAS+B,UAAW4I,EAAM,SAGtCb,EAAA7R,EAAA8R,cAAC+D,GAAA,EAAMnB,QAAP,KACI7C,EAAA7R,EAAA8R,cAACoE,GAAD,CAAalI,QAASjG,WClBtC,SAASoO,GAATtW,GACf,IAAAuW,EAAAC,EAD0CxT,EAC1ChD,EAD0CgD,SAItC,OACIgP,EAAA7R,EAAA8R,cAACwE,GAAA,EAAQC,MAAT,KACK1T,EAAS8G,aACNkI,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAOxC,SAAS,MAAMC,MAAM,MAAMpG,QAAQ,YAAY6E,MAAO,CAAC+D,UAAU,YAE5E5E,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,KACIzE,EAAA7R,EAAA8R,cAACK,GAAA,EAAKoE,MAAN,KACI1E,EAAA7R,EAAA8R,cAACK,GAAA,EAAD,KACIN,EAAA7R,EAAA8R,cAACK,GAAA,EAAKa,MAAN,CAAYN,MAAO,CAACgE,aAAa,GAAI9C,KAAK,OAAOoC,UAAQ,EAACxD,KAAK,QAAA4D,EAAAvT,EAAS2E,YAAT,IAAA4O,OAAA,EAAAA,EAAejR,QAAS,oBACvF0M,EAAA7R,EAAA8R,cAACK,GAAA,EAAKuC,QAAN,KACI7C,EAAA7R,EAAA8R,cAACK,GAAA,EAAK4B,OAAN,CAAa3B,GAAIkB,IAAMhB,GAAE,eAAA3S,OAAiBkD,EAASF,KAC9CE,EAAS6B,OAEdmN,EAAA7R,EAAA8R,cAACK,GAAA,EAAKgD,YAAN,kBAA4BtD,EAAA7R,EAAA8R,cAAC6E,EAAA,EAAD,CAAMrE,GAAE,aAAA3S,OAAekD,EAAS0E,eAAhC,YAAA8O,EAAkDxT,EAAS2E,YAA3D,IAAA6O,OAAA,EAAkDA,EAAenR,cAC5FrC,EAASyE,QACNuK,EAAA7R,EAAA8R,cAACK,GAAA,EAAKgD,YAAN,KACItD,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO1B,OAAK,EAACb,MAAM,UAAnB,kCAGPpR,EAASsE,UAAYtE,EAASyE,QAC3BuK,EAAA7R,EAAA8R,cAACK,GAAA,EAAKgD,YAAN,KACItD,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO1B,OAAK,EAACb,MAAM,SAAnB,uCAOxBpC,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,KACIzE,EAAA7R,EAAA8R,cAAA,YACID,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,UAAU3H,kBAAOpI,EAASgC,KAAO,uBAC5CgN,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,WAFf,IAE2B/P,EAASkC,QAGxC8M,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASM,WAAS,GACd/E,EAAA7R,EAAA8R,cAAC+E,GAAD,CAA0BzP,UAAWvE,EAASuE,aAElDyK,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASQ,UAAQ,GACbjF,EAAA7R,EAAA8R,cAAA,YAAOjP,EAAS+B,aAChBiN,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAE,eAAA3S,OAAiBkD,EAASF,IAAMsR,MAAM,OAC1D8C,QAAQ,QAAQlJ,QAAQ,WChDzB8D,mBAAU,WAErB,IACOqF,EADgBvF,IAAhBjG,cACAwL,kBAEP,OACInF,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACKsD,EAAkBpB,IAAI,SAAA/V,GAAA,IAAAiB,EAAA9C,OAAAiZ,EAAA,EAAAjZ,CAAA6B,EAAA,GAAEqX,EAAFpW,EAAA,GAASkK,EAATlK,EAAA,UACnB+Q,EAAA7R,EAAA8R,cAACqF,EAAA,SAAD,CAAU/V,IAAK8V,GACXrF,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQqD,KAAG,EAACnD,MAAM,QACbiD,GAEIlM,EAAW4K,IAAI,SAAA/S,GAAQ,OACpBgP,EAAA7R,EAAA8R,cAACqE,GAAD,CAAkB/U,IAAKyB,EAASF,GAAIE,SAAUA,sBCjB/D,SAASwU,KACpB,OACIxF,EAAA7R,EAAA8R,cAACqF,EAAA,SAAD,KACItF,EAAA7R,EAAA8R,cAACwF,GAAA,EAAD,CAAa1C,OAAK,EAAClC,MAAO,CAAEoB,UAAW,KACnCjC,EAAA7R,EAAA8R,cAACwE,GAAA,EAAQC,MAAT,KACI1E,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAS5D,MAAO,CAAE6E,UAAW,MACzB1F,EAAA7R,EAAA8R,cAACwF,GAAA,EAAD,KACIzF,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYvD,OAAb,CAAoB5O,OAAK,GACrB0M,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYE,KAAb,MACA3F,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYE,KAAb,OAEJ3F,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYG,UAAb,KACI5F,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYE,KAAb,SAIZ3F,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,KACIzE,EAAA7R,EAAA8R,cAACwF,GAAA,EAAD,KACIzF,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYE,KAAb,MACA3F,EAAA7R,EAAA8R,cAACwF,GAAA,EAAYE,KAAb,QAGR3F,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASM,WAAS,EAAClE,MAAO,CAAE6E,UAAW,MACvC1F,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASQ,UAAQ,GACbjF,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQ6E,UAAQ,EAACzD,MAAM,OAAO8C,QAAQ,QAAQlJ,QAAQ,aCd/D8D,mBAAS,WAEpB,IAAOnG,EAAeiG,IAAfjG,cACApF,EAA+DoF,EAA/DpF,eAAgBd,EAA+CkG,EAA/ClG,iBAAkBS,EAA6ByF,EAA7BzF,gBAAiB5H,EAAYqN,EAAZrN,WAC1DwZ,EAAoCC,oBAAS,GAA7CC,EAAA7Z,OAAAiZ,EAAA,EAAAjZ,CAAA2Z,EAAA,GAAOG,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GAgBA,OARAG,oBAAU,WACL1S,EAAiBsO,MAAM,GAAGxN,KAC7B,CAACA,EAAgBd,EAAiBsO,OAOhC/B,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAM,MACdrI,EAAc5F,kBAAoBkS,EAC/BjG,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACA7B,EAAA7R,EAAA8R,cAACuF,GAAD,MACAxF,EAAA7R,EAAA8R,cAACuF,GAAD,OAGAxF,EAAA7R,EAAA8R,cAACqG,EAAAnY,EAAD,CACAoY,UAAW,EACXC,SAzBhB,WAEIN,GAAe,GACfhS,EAAgB,IAAIzH,EAAaH,EAAYma,YAAY,IACzDlS,IAAiBnE,KAAK,kBAAI8V,GAAe,MAsB7BQ,SAAUT,KAAiB3Z,GAAcA,EAAWma,YAAYna,EAAWqa,WAC3EC,aAAa,GAEb5G,EAAA7R,EAAA8R,cAAC4G,GAAD,QAcR7G,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAM,KACfhC,EAAA7R,EAAA8R,cAAC6G,GAAD,OAEJ9G,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAAC8G,EAAA,EAAD,CAAQ1E,OAAQ4D,8CCxDjB,SAASe,GAAYC,GAChC,IAAAC,EAAoBC,aAASF,EAAMlG,MAAnCqG,EAAAjb,OAAAiZ,EAAA,EAAAjZ,CAAA+a,EAAA,GAAOG,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GACA,OACIpH,EAAA7R,EAAA8R,cAACsH,GAAA,EAAKC,MAAN,CAAYxY,MAAOsY,EAAKG,WAAaH,EAAKtY,OACtCgR,EAAA7R,EAAA8R,cAAA,aAAQgH,EAAMS,OACd1H,EAAA7R,EAAA8R,cAAA,QAAA9T,OAAAwG,OAAA,GAAW0U,EAAWJ,IACrBK,EAAKG,SAAWH,EAAKtY,MAClBgR,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO1B,OAAK,EAACb,MAAM,OAAOkF,EAAKtY,OACjC,MCVC8Q,mBAAU,WACrB,IAAOlQ,EAAWgQ,IAAXhQ,UACQ+X,eACf,OACI3H,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAQC,cAAe,CAACC,MAAM,GAAIC,SAAS,GAAI/Y,MAAM,MACrDgZ,SAAU,SAAC5T,EAADpG,GAAA,IAASia,EAATja,EAASia,UAAT,OAAsBrY,EAAUyB,MAAM+C,GAAOkG,MAAM,SAAAtL,GAAK,OAAEiZ,EAAU,CAACjZ,MAAM,kCAChF,SAAAC,GAAA,IAAEiZ,EAAFjZ,EAAEiZ,aAAcC,EAAhBlZ,EAAgBkZ,aAAc/Y,EAA9BH,EAA8BG,OAA9B,OACG4Q,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAMQ,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,OAC3DrI,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQ3B,GAAG,KAAKvE,QAAQ,sBAAsBoG,MAAM,OAAOwC,UAAU,WACrE5E,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,QAAQuH,YAAY,UACtCtI,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,WAAWuH,YAAY,WAAWC,KAAK,aACzDvI,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAc7G,KAAK,QAAQyH,OAAQ,kBAC/BxI,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO9D,MAAO,CAACgE,aAAa,IAAK5B,OAAK,EAACwF,OAAO,MAAMzM,QAAS5M,EAAOJ,WAExEgR,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQnN,QAASsU,EAAclH,UAAQ,EAACjF,QAAQ,QAAQuM,KAAK,SAASxF,OAAK,4BChBhF,SAAS2F,GAAT1a,GACf,IADyCoB,EACzCpB,EADyCoB,OAErC,OACI4Q,EAAA7R,EAAA8R,cAAC0I,GAAA,EAAD,CAAS3Z,OAAK,GACTI,GACG4Q,EAAA7R,EAAA8R,cAAC0I,GAAA,EAAQ9E,KAAT,KAEQzU,EAAO2U,IAAI,SAAC6E,EAASC,GAAV,OACP7I,EAAA7R,EAAA8R,cAAC0I,GAAA,EAAQrI,KAAT,CAAc/Q,IAAKsZ,GAAID,OCLpC9I,mBAAU,WACrB,IAAOlQ,EAAWgQ,IAAXhQ,UACQ+X,eACf,OACI3H,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAQC,cAAe,CAACxU,YAAY,GAAIzB,SAAS,GAAIkW,MAAM,GAAIC,SAAS,GAAI/Y,MAAM,MAClFgZ,SAAU,SAAC5T,EAADpG,GAAA,IAASia,EAATja,EAASia,UAAT,OAAsBrY,EAAU2B,SAAS6C,GAAOkG,MAAM,SAAAtL,GAAK,OACjEiZ,EAAU,CAACjZ,aACf8Z,iBAAkBC,KAAW,CACzB1V,YAAY0V,OAAaC,WACzBpX,SAASmX,OAAaC,WACtBlB,MAAMiB,OAAaC,WAAWlB,QAC9BC,SAASgB,OAAaC,cAGrB,SAAA/Z,GAAA,IAAEiZ,EAAFjZ,EAAEiZ,aAAcC,EAAhBlZ,EAAgBkZ,aAAc/Y,EAA9BH,EAA8BG,OAAQ6Z,EAAtCha,EAAsCga,QAASC,EAA/Cja,EAA+Cia,MAA/C,OACGlJ,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAMQ,UAAU,gBAAgBJ,SAAUE,EAAcG,aAAa,OACjErI,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQ3B,GAAG,KAAKvE,QAAQ,wBAAwBoG,MAAM,OAAOwC,UAAU,WACvE5E,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,cAAcuH,YAAY,iBAC5CtI,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,WAAWuH,YAAY,cACzCtI,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,QAAQuH,YAAY,UACtCtI,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,WAAWuH,YAAY,WAAWC,KAAK,aACzDvI,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAc7G,KAAK,QAAQyH,OAAQ,kBAChCxI,EAAA7R,EAAA8R,cAACyI,GAAD,CAAiBtZ,OAAQA,EAAOJ,WAEnCgR,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQ6E,UAAWoD,IAAYC,GAASf,EAActU,QAASsU,EAAclH,UAAQ,EAACjF,QAAQ,WAAWuM,KAAK,SAASxF,OAAK,SCzBjIjD,eAAU,WAErB,IAAA4C,EAA8B9C,IAAvBhQ,EAAP8S,EAAO9S,UAAWyO,EAAlBqE,EAAkBrE,WAClB,OACI2B,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAStE,UAAQ,EAACyE,UAAU,SAAS9C,UAAQ,EAACsG,UAAU,YACpDpI,EAAA7R,EAAA8R,cAACI,EAAA,EAAD,CAAWmB,MAAI,GACXxB,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQ3B,GAAG,KAAKJ,UAAQ,GACpBH,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOY,KAAK,UAAUpB,IAAI,mBAAmBC,IAAI,OAAOC,MAAO,CAACgE,aAAa,MADjF,cAICjV,EAAUuZ,WACPnJ,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACI7B,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQ3B,GAAG,KAAKJ,UAAQ,EAACnE,QAAQ,4BACjCgE,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAcsB,KAAK,OAAO5B,UAAQ,GAAvD,mBAKJH,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACJ7B,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQW,QAAS,kBAAItD,EAAWtC,UAAUiE,EAAA7R,EAAA8R,cAACmJ,GAAD,QAAerH,KAAK,OAAO5B,UAAQ,GAA7E,SAGAH,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQW,QAAS,kBAAItD,EAAWtC,UAAUiE,EAAA7R,EAAA8R,cAACoJ,GAAD,QAAkBtH,KAAK,OAAO5B,UAAQ,GAAhF,YAGFH,EAAA7R,EAAA8R,cAACqJ,GAAA,EAAD,CAASxF,YAAU,EAAC3D,UAAQ,GAA5B,MACAH,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQnN,QAASjE,EAAUqO,UAAW8D,KAAK,OAAO5B,UAAQ,EAACiC,MAAM,WAAWpG,QAAQ,sBAAsB2F,QAAS/R,EAAUgP,+BC1B5H,SAAS2K,GAATvb,GACf,IAAAwb,EAAAxb,EAD0CmS,gBAC1C,IAAAqJ,KAAAC,EAAAzb,EADyDgO,eACzD,IAAAyN,EADiE,aACjEA,EACI,OACIzJ,EAAA7R,EAAA8R,cAACyJ,GAAA,EAAD,CAAQrH,QAAQ,EAAMlC,SAAUA,GAC5BH,EAAA7R,EAAA8R,cAAC8G,EAAA,EAAD,CAAQ/K,QAASA,mBCFd,SAAS2N,GAAW1C,GAC/B,IAAAC,EAAoBC,aAASF,EAAMlG,MAAnCqG,EAAAjb,OAAAiZ,EAAA,EAAAjZ,CAAA+a,EAAA,GAAOG,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GACA,OACIpH,EAAA7R,EAAA8R,cAACsH,GAAA,EAAKC,MAAN,CAAYxY,MAAOsY,EAAKG,WAAaH,EAAKtY,OACtCgR,EAAA7R,EAAA8R,cAAA,aAAQgH,EAAMS,OACd1H,EAAA7R,EAAA8R,cAAA,WAAA9T,OAAAwG,OAAA,GAAc0U,EAAWJ,IACxBK,EAAKG,SAAWH,EAAKtY,MAClBgR,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO1B,OAAK,EAACb,MAAM,OAAOkF,EAAKtY,OACjC,oBCRC,SAAS4a,GAAc3C,GAClC,IAAAC,EAA6BC,aAASF,EAAMlG,MAA5CqG,EAAAjb,OAAAiZ,EAAA,EAAAjZ,CAAA+a,EAAA,GAAOG,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GAAoByC,EAApBzC,EAAA,GACA,OACIpH,EAAA7R,EAAA8R,cAACsH,GAAA,EAAKC,MAAN,CAAYxY,MAAOsY,EAAKG,WAAaH,EAAKtY,OACtCgR,EAAA7R,EAAA8R,cAAA,aAAQgH,EAAMS,OACd1H,EAAA7R,EAAA8R,cAAC6J,GAAA,EAAD,CAAQC,WAAS,EACjBC,QAAS/C,EAAM+C,QACf5V,MAAOiT,EAAMjT,OAAS,KACtBoO,SAAU,SAACU,EAAE+G,GAAH,OAAOJ,EAAQK,SAASD,EAAE7V,QACpC+V,OAAQ,kBAAIN,EAAQO,YAAW,IAC/B9B,YAAarB,EAAMqB,cAGlBhB,EAAKG,SAAWH,EAAKtY,MAClBgR,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO1B,OAAK,EAACb,MAAM,OAAOkF,EAAKtY,OACjC,MCzBP,IAAMqb,GAAgB,CACzB,CAAC7I,KAAK,SAAUpN,MAAM,UACtB,CAACoN,KAAK,UAAWpN,MAAM,WACvB,CAACoN,KAAK,OAAQpN,MAAM,QACpB,CAACoN,KAAK,OAAQpN,MAAM,QACpB,CAACoN,KAAK,QAASpN,MAAM,SACrB,CAACoN,KAAK,SAAUpN,MAAM,gCCGX,SAASkW,GAAYrD,GAChC,IAAAC,EAA6BC,aAASF,EAAMlG,MAA5CqG,EAAAjb,OAAAiZ,EAAA,EAAAjZ,CAAA+a,EAAA,GAAOG,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GAAoByC,EAApBzC,EAAA,GACA,OACIpH,EAAA7R,EAAA8R,cAACsH,GAAA,EAAKC,MAAN,CAAYxY,MAAOsY,EAAKG,WAAaH,EAAKtY,OACtCgR,EAAA7R,EAAA8R,cAACsK,GAAApc,EAADhC,OAAAwG,OAAA,GACQ0U,EACAJ,EAFR,CAGIuD,SAAWnD,EAAMjT,OAAS,IAAI0B,KAAKuR,EAAMjT,QAAS,KAClDoO,SAAU,SAAApO,GAAK,OAAEyV,EAAQK,SAAS9V,OAErCkT,EAAKG,SAAWH,EAAKtY,MAClBgR,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO1B,OAAK,EAACb,MAAM,OAAOkF,EAAKtY,OACjC,MCLC8Q,mBAAU,WAErB,IAAOnG,EAAeiG,IAAfjG,cACD8Q,EAAS9C,eACP5R,EAC2B4D,EAD3B5D,eAAgBO,EACWqD,EADXrD,eACpBrB,EAA+B0E,EAA/B1E,aAAclB,EAAiB4F,EAAjB5F,gBACXjD,EAAM4Z,eAAN5Z,GACPgV,EAA6BC,mBAA6B,IAAInT,GAA9DoT,EAAA7Z,OAAAiZ,EAAA,EAAAjZ,CAAA2Z,EAAA,GAAM9U,EAANgV,EAAA,GAAgBpR,EAAhBoR,EAAA,GAEM8C,EAAiBC,KAAW,CAC9BlW,MAAOkW,OAAaC,SAAS,kCAC7BjW,YAAagW,OAAaC,SAAS,wCACnClW,SAAUiW,OAAaC,WACvBhW,KAAM+V,OAAaC,SAAS,oBAAoB2B,WAChDzX,MAAO6V,OAAaC,WACpB/V,KAAM8V,OAAaC,aA2BvB,OAzBA7C,oBAAU,WACHrV,GAAImE,EAAanE,GAAIV,KAAK,SAAAY,GAAQ,OAAE4D,EAAY,IAAIhC,EAAmB5B,OAC5E,CAACF,EAAImE,IAuBJlB,EAAwBiM,EAAA7R,EAAA8R,cAACsJ,GAAD,CAAkBvN,QAAQ,yBAEjDgE,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASQ,UAAQ,GACbjF,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQlG,QAAQ,mBAAmBuJ,KAAG,EAACnD,MAAM,SAC7CpC,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CACAkB,iBAAkBA,EAClB8B,oBAAkB,EAAC/C,cAAe7W,EAAUgX,SAAU,SAAApP,GAAM,OA3BpE,SAA0B5H,GAEtB,GAAIA,EAASF,GASTwF,EAAetF,GAAUZ,KAAK,kBAAIqa,EAAQ,eAAA3c,OAAgBkD,EAASF,WARvE,CACI,IAAIqF,EAAYhK,OAAAuK,EAAA,EAAAvK,QAAAuK,EAAA,EAAAvK,CAAA,GACT6E,GADQ,IAEXF,GAAG+Z,iBAEP9U,EAAeI,GAAa/F,KAAK,kBAAIqa,EAAQ,eAAA3c,OAAgBqI,EAAYrF,QAmBVga,CAAiBlS,KAC3E,SAAA5K,GAAA,IAAEka,EAAFla,EAAEka,aAAce,EAAhBjb,EAAgBib,QAASd,EAAzBna,EAAyBma,aAAce,EAAvClb,EAAuCkb,MAAvC,OACGlJ,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAMQ,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,OAK9DrI,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAajG,KAAK,QAAQuH,YAAY,UACvCtI,EAAA7R,EAAA8R,cAAC0J,GAAD,CAAYoB,KAAM,EAAGzC,YAAY,cAAevH,KAAK,gBACrDf,EAAA7R,EAAA8R,cAAC2J,GAAD,CAAeI,QAASK,GAAiB/B,YAAY,WAAavH,KAAK,aACxEf,EAAA7R,EAAA8R,cAACqK,GAAD,CAAaU,gBAAgB,OAC5BjK,KAAK,OACLkK,gBAAc,EACdC,YAAY,OACZC,WAAW,yBAEZnL,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQlG,QAAQ,mBAAmBuJ,KAAG,EAACnD,MAAM,SAC5CpC,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAasB,YAAY,OAAQvH,KAAK,SACtCf,EAAA7R,EAAA8R,cAAC+G,GAAD,CAAasB,YAAY,QAASvH,KAAK,UACvCf,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CACA6E,SAAUsC,IACLc,IAAYC,EACjBrV,QAASsU,EAAcjD,QAAQ,QAAQjE,UAAQ,EAACsH,KAAK,SAASvM,QAAQ,WACtEgE,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAcyE,QAAQ,QAAQqD,KAAK,SAASvM,QAAQ,qCC5E9E8D,eAAS,SAAA9R,GAAgD,IAAnB0L,EAAmB1L,EAAnB0L,WAC1C+F,EAAcG,IAAdH,aAWP,OAVA0G,oBAAU,WAKN,OAJGzM,GACC+F,EAAahG,oBAAoBC,GAG9B,WACH+F,EAAa5E,kBAEnB,CAAC4E,EAAc/F,IAGbsG,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACI7B,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CACIG,UAAU,SACVzC,SAAS,MACThC,UAAQ,EACRiC,MAAM,OACNvB,MAAO,CAACuK,OAAQ,SAEhBpL,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,+BAEJlC,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAStC,UAAQ,EAAC8C,UAAQ,GAC1BjF,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAQI,SAAU,SAACpP,EAAD3J,GAAA,IAAUoc,EAAVpc,EAAUoc,UAAV,OAAuB5L,EAAa3E,WAAWlC,GAAQxI,KAAK,kBAAIib,OAC1ExD,cAAe,CAACxX,KAAK,IACrByY,iBAAkBC,KAAW,CACzB1Y,KAAM0Y,OAAaC,cAGlB,SAAAhT,GAAA,IAAEmS,EAAFnS,EAAEmS,aAAcc,EAAhBjT,EAAgBiT,QAASf,EAAzBlS,EAAyBkS,aAAzB,OACOlI,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAMQ,UAAU,WACZpI,EAAA7R,EAAA8R,cAAC2H,GAAA,EAAD,CAAO7G,KAAK,QACP,SAACkG,GAAD,OACGjH,EAAA7R,EAAA8R,cAAA,OAAKY,MAAO,CAACK,SAAS,aAClBlB,EAAA7R,EAAA8R,cAAC8G,EAAA,EAAD,CAAQ1E,OAAQ8F,IAChBnI,EAAA7R,EAAA8R,cAAA,WAAA9T,OAAAwG,OAAA,CACA2V,YAAY,sDACZyC,KAAM,GACF9D,EAAMI,MAHV,CAIAiE,WAAY,SAAApI,GACG,UAARA,EAAE3T,KAAiB2T,EAAEqI,UAEb,UAARrI,EAAE3T,KAAkB2T,EAAEqI,WAErBrI,EAAEC,iBACF8F,GAAWf,eAYnDlI,EAAA7R,EAAA8R,cAACuL,GAAA,EAAQ9G,MAAT,KAEQjF,EAAalG,SAASwK,IAAI,SAAAvJ,GAAO,OAC7BwF,EAAA7R,EAAA8R,cAACuL,GAAA,EAAD,CAASjc,IAAKiL,EAAQ1J,IAClBkP,EAAA7R,EAAA8R,cAACuL,GAAA,EAAQC,OAAT,CAAgB9K,IAAKnG,EAAQlH,OAAQ,qBACrC0M,EAAA7R,EAAA8R,cAACuL,GAAA,EAAQ3I,QAAT,KACI7C,EAAA7R,EAAA8R,cAACuL,GAAA,EAAQE,OAAT,CAAgBnL,GAAIkB,IAAMhB,GAAE,aAAA3S,OAAe0M,EAAQ5I,WAAa4I,EAAQnH,aACxE2M,EAAA7R,EAAA8R,cAACuL,GAAA,EAAQG,SAAT,KACI3L,EAAA7R,EAAA8R,cAAA,WAAM2L,aAAoBpR,EAAQC,aAEtCuF,EAAA7R,EAAA8R,cAACuL,GAAA,EAAQK,KAAT,CAAchL,MAAO,CAACiL,WAAY,aAActR,EAAQnK,eCrE7EyP,eAAS,SAAA9R,GAA+C,IAAlBgD,EAAkBhD,EAAlBgD,SACjD,OACIgP,EAAA7R,EAAA8R,cAACwE,GAAA,EAAQC,MAAT,KACI1E,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAStC,SAAS,OACdnC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1B,KAAK,QAAQK,MAAM,OAAOrB,KAAK,UAEzCf,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAAA,SAAIjP,EAAS+B,gBAIzBiN,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAStC,UAAQ,GACbnC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,CAAM2F,cAAc,UAChB/L,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,WAAWgB,KAAK,QAAQK,MAAM,UAE7CpC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAC5BhC,EAAA7R,EAAA8R,cAAA,YACG7G,kBAAOpI,EAASgC,KAAO,2BAK1BgN,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAStC,UAAQ,GACbnC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,CAAM2F,cAAc,UAChB/L,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,SAASgB,KAAK,QAAQK,MAAM,UAE3CpC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAAA,YAAOjP,EAASkC,MAAhB,KAAyBlC,EAASiC,YCjCpD+Y,GAAqB,CACvB1U,OAAQ,mBAGN2U,GAAyB,CAC3B/K,SAAU,WACVgL,OAAQ,KACRC,KAAM,KACNnK,MAAO,OACPoK,OAAQ,OACRhK,MAAO,SAOItC,eAAU,SAAA9R,GAAiD,IAAAuW,EAAAC,EAAlBxT,EAAkBhD,EAAlBgD,SACpD4Q,EAAwEhC,IAAjEjG,cAAe1C,EAAtB2K,EAAsB3K,iBAAkBpD,EAAxC+N,EAAwC/N,QAAS6D,EAAjDkK,EAAiDlK,qBACjD,OACIsI,EAAA7R,EAAA8R,cAACwE,GAAA,EAAQC,MAAT,KACI1E,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASxB,OAAK,EAACd,SAAS,MAAMtB,MAAO,CAACwL,QAAS,MAC1Crb,EAAS8G,aACNkI,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CAAO9D,MAAO,CAACK,SAAS,WAAYoL,OAAO,IAAMH,MAAM,GAAII,IAAI,IAAMC,QAAM,EAACpK,MAAM,MAAMpG,QAAQ,cAEpGgE,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOR,IAAG,0BAAA7S,OAA4BkD,EAAS8B,SAArC,QAAqDiQ,OAAK,EAAClC,MAAOmL,KAC5EhM,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAS5D,MAAOoL,GAAwBhJ,OAAK,GACzCjD,EAAA7R,EAAA8R,cAACK,GAAA,EAAKoE,MAAN,KACI1E,EAAA7R,EAAA8R,cAACK,GAAA,EAAD,KACIN,EAAA7R,EAAA8R,cAACK,GAAA,EAAKuC,QAAN,KACI7C,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CACIH,KAAK,OACL/F,QAAShL,EAAS6B,MAClBgO,MAAO,CAACuB,MAAO,WAEnBpC,EAAA7R,EAAA8R,cAAA,SAAI7G,kBAAOpI,EAASgC,KAAO,gBAC3BgN,EAAA7R,EAAA8R,cAAA,sBACcD,EAAA7R,EAAA8R,cAAA,cAAQD,EAAA7R,EAAA8R,cAAC6E,EAAA,EAAD,CAAMrE,GAAE,aAAA3S,OAAA,QAAAyW,EAAevT,EAAS2E,YAAxB,IAAA4O,OAAA,EAAeA,EAAe3S,WAAtC,YAAA4S,EAAoDxT,EAAS2E,YAA7D,IAAA6O,OAAA,EAAoDA,EAAenR,oBAO7G2M,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAASQ,UAAQ,EAAC9C,SAAS,UACtBnR,EAASyE,OACNuK,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACI7B,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQoB,MAAOpR,EAAS8G,YAAY,QAAQ,MACxCoN,QAAQ,OACRjC,OAAK,EACLjH,QAAShL,EAAS8G,YAAY,uBAAuB,kBACrD6J,QAASjK,EACT7D,QAASA,IAEbmM,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAE,WAAA3S,OAAakD,EAASF,IAC1C+U,SAAU7U,EAAS8G,YACnBsK,MAAM,SAAS8C,QAAQ,SAFvB,iBAMNlU,EAASsE,QACP0K,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQnN,QAASA,EAAS8N,QAAS1K,GAAnC,qBAEA+I,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQoB,MAAM,OAAOvO,QAASA,EAC9B8N,QAAS1K,EACT4O,SAAU7U,EAAS8G,aAFnB,qBC9DLgI,eAAS,SAAA9R,GAAqE,IAAAye,EAAAze,EAApCgD,SAAWuE,EAAyBkX,EAAzBlX,UAAWI,EAAc8W,EAAd9W,KAC3E,OAAIJ,EAEAyK,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACI7B,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CACIG,UAAU,SACV/D,MAAO,CAAEuK,OAAQ,QACjBjJ,SAAS,MACT4C,WAAS,EACT5E,UAAQ,EACRiC,MAAM,QAEL7M,EAAU3I,OARf,IAQ2C,IAAnB2I,EAAU3I,OAAY,SAAW,SARzD,UAUAoT,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAStC,UAAQ,GACbnC,EAAA7R,EAAA8R,cAAC4D,GAAA,EAAD,CAAM6I,SAAO,EAACC,SAAO,GAChBpX,EAAUwO,IAAI,SAAA7N,GAAQ,OACvB8J,EAAA7R,EAAA8R,cAACK,GAAA,EAAD,CAAMO,MAAO,CAAEK,SAAU,YAAc3R,IAAK2G,EAAStE,UACpDsE,EAAStE,YAAT,OAAoB+D,QAApB,IAAoBA,OAApB,EAAoBA,EAAM/D,WAC3BoO,EAAA7R,EAAA8R,cAAC0E,GAAA,EAAD,CACI9D,MAAO,CAAEK,SAAU,YACnBkB,MAAM,SACNoK,OAAO,SAHX,QAOAxM,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOY,KAAK,OAAOpB,IAAKzK,EAAS5C,OAAS,qBAC1C0M,EAAA7R,EAAA8R,cAACK,GAAA,EAAKuC,QAAN,CAAckJ,cAAc,UACxB/L,EAAA7R,EAAA8R,cAACK,GAAA,EAAK4B,OAAN,CAAa3B,GAAG,MACZP,EAAA7R,EAAA8R,cAAC6E,EAAA,EAAD,CAAMrE,GAAE,aAAA3S,OAAeoI,EAAStE,WAAasE,EAAS7C,cAEzD6C,EAAS+B,WACV+H,EAAA7R,EAAA8R,cAACK,GAAA,EAAKsM,MAAN,CAAY/L,MAAO,CAAEuB,MAAO,WAA5B,oBA/BE,OCEXtC,eAAU,WAEvB,IAAOnG,EAAeiG,IAAfjG,cACgB3I,EAAgE2I,EAAjFhG,iBAA2BsB,EAAsD0E,EAAtD1E,aAAclB,EAAwC4F,EAAxC5F,gBAAiBgE,EAAuB4B,EAAvB5B,sBAEzDjH,EAAI4Z,eAAJ5Z,GAMP,OALAqV,oBAAU,WAGR,OAFGrV,GAAImE,EAAanE,GAEd,kBAAIiH,MACV,CAACjH,EAAImE,EAAc8C,IAClBhE,IAAoB/C,EAAiBgP,EAAA7R,EAAA8R,cAACsJ,GAAD,MAEpCvJ,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACEpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAClBhC,EAAA7R,EAAA8R,cAAC4M,GAAD,CAAsB7b,SAAUA,IAChCgP,EAAA7R,EAAA8R,cAAC6M,GAAD,CAAoB9b,SAAUA,IAC9BgP,EAAA7R,EAAA8R,cAAC8M,GAAD,CAAoBrT,WAAY1I,EAASF,MAE3CkP,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAClBhC,EAAA7R,EAAA8R,cAAC+M,GAAD,CAAuBhc,SAAUA,QC5B5B,SAASic,KAEpB,OACIjN,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,CAAS6D,aAAW,GAChBtI,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQR,MAAI,GACR1B,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,WADf,kBAIAf,EAAA7R,EAAA8R,cAACwE,GAAA,EAAQyI,OAAT,KACIlN,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQT,GAAIkB,IAAMhB,GAAG,cAAc0M,SAAO,GAA1C,oCCRDrN,eAAU,WACrB,IAAOzB,EAAYuB,IAAZvB,WAEP,OACI2B,EAAA7R,EAAA8R,cAACmN,GAAA,EAAD,CAAOtR,KAAMuC,EAAWxC,MAAMC,KAAMuR,QAAShP,EAAWpC,WAAY8F,KAAK,QACrE/B,EAAA7R,EAAA8R,cAACmN,GAAA,EAAMvK,QAAP,KACKxE,EAAWxC,MAAMxL,mBCH5Bid,GAAM,CACR,CAACC,SAAS,gBAAiBC,KAAK,CAACje,IAAI,WACrC,CAACge,SAAS,cAAeC,KAAK,CAACje,IAAI,SACnC,CAACge,SAAS,UAAWC,KAAK,CAACje,IAAI,aAGpBuQ,eAAS,WACpB,IAAON,EAAcI,IAAdJ,aAEA7B,EAAgE6B,EAAhE7B,mBAAoBxB,EAA4CqD,EAA5CrD,QAASO,EAAmC8C,EAAnC9C,kBAAmBD,EAAgB+C,EAAhB/C,eACvD0J,oBAAU,WACNxI,EAAmBxB,EAASvK,WAC9B,CAAC+L,EAAoBxB,IAKvB,OACI6D,EAAA7R,EAAA8R,cAACwN,GAAA,EAAIC,KAAL,CAAU7Z,QAAS6I,GACfsD,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQgD,QAAQ,OAAOxD,KAAK,WAAW1F,QAAS,gBAEpDgE,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAACwN,GAAA,EAAD,CAAKH,MAAOA,GACZK,KAAM,CAAC5I,WAAW,EAAMxD,UAAS,GACjCqM,YAAa,SAAC1K,EAAE7W,GAAH,OAbP,SAAC6W,EAAmB7W,GACtCsR,EAAmBxB,EAASvK,SAAU0b,GAAMjhB,EAAKwhB,aAAuBL,KAAKje,KAY1Cue,CAAgB5K,EAAE7W,MAEzC2T,EAAA7R,EAAA8R,cAAA,WACAD,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKqB,MAAN,CAAYqJ,YAAa,GACpBtR,EAAesH,IAAI,SAAC/S,GAAD,OAChBgP,EAAA7R,EAAA8R,cAACoD,GAAA,EAAD,CACA9C,GAAIkB,IACJhB,GAAE,eAAA3S,OAAiBkD,EAASF,IAC5BvB,IAAKyB,EAASF,IACVkP,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOR,IAAG,0BAAA7S,OAA4BkD,EAAS8B,SAArC,QACN+N,MAAO,CAAC6E,UAAU,IAAKsI,UAAU,WACjChO,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKR,QAAN,KACI7C,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKnB,OAAN,CAAa0C,UAAU,UAAU5T,EAAS6B,OAC1CmN,EAAA7R,EAAA8R,cAACoD,GAAA,EAAK4K,KAAN,CAAWrJ,UAAU,UACjB5E,EAAA7R,EAAA8R,cAAA,WAAM7G,kBAAO,IAAItD,KAAK9E,EAASgC,MAAO,WACtCgN,EAAA7R,EAAA8R,cAAA,WAAM7G,kBAAO,IAAItD,KAAK9E,EAASgC,MAAO,sBC3CnE8M,eAAS,WACpB,IAAON,EAAcI,IAAdJ,aACArD,EAAqDqD,EAArDrD,QAASG,EAA4CkD,EAA5ClD,WAAYC,EAAgCiD,EAAhCjD,kBAAmBC,EAAagD,EAAbhD,UAI/C,OACIwD,EAAA7R,EAAA8R,cAACwN,GAAA,EAAIC,KAAL,CAAU7Z,QAAS0I,GACfyD,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQgD,QAAQ,OAAOxD,KAAK,OAAO1F,QAAqB,IAAZQ,EAAA,oBAAA1O,OAAA,OAAkCqO,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAS9I,aAA3C,UAAAvF,OAAA,OAAmEqO,QAAnE,IAAmEA,OAAnE,EAAmEA,EAAS9I,YAA5E,iBAEhD2M,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKqB,MAAN,CAAYqJ,YAAa,GACpBzR,EAAWyH,IAAI,SAAA5H,GAAO,OACnB6D,EAAA7R,EAAA8R,cAACoE,GAAD,CAAa9U,IAAK4M,EAAQvK,SAAUuK,QAASA,sBCf1D,SAAS+R,GAATlgB,GAA+C,IAAjBmgB,EAAiBngB,EAAjBmgB,SACnCC,EAAS,CACXhD,OAAQ,mBACRzH,YAAY,OACZ0K,aAAc,MACdC,WAAW,OACX1J,UAAU,SACVwH,OAAO,KAOPmC,EAASC,sBAAY,SAAAC,GACzBN,EAASM,EAAc1K,IAAI,SAACjS,GAAD,OAAa3F,OAAOwG,OAAOb,EAAK,CACvD4c,QAAQC,IAAIC,gBAAgB9c,SAE/B,CAACqc,IACJU,EAAoDC,aAAY,CAACP,WAA1DQ,EAAPF,EAAOE,aAAcC,EAArBH,EAAqBG,cAAeC,EAApCJ,EAAoCI,aAEpC,OACEjP,EAAA7R,EAAA8R,cAAA,MAAA9T,OAAAwG,OAAA,GAASoc,IAAT,CAAyBlO,MAAOoO,EAAa9iB,OAAAuK,EAAA,EAAAvK,QAAAuK,EAAA,EAAAvK,CAAA,GAAIiiB,GAZlC,CACXzK,YAAY,UAWyDyK,IACvEpO,EAAA7R,EAAA8R,cAAA,QAAW+O,KACThP,EAAA7R,EAAA8R,cAACwD,GAAA,EAAD,CAAM1C,KAAK,SAASgB,KAAK,SACzB/B,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQlG,QAAQ,kCCxBT,SAASkT,GAATlhB,GAGf,IAFKmhB,EAELnhB,EAFKmhB,aAAcC,EAEnBphB,EAFmBohB,WAGf,OACIpP,EAAA7R,EAAA8R,cAACoP,GAAA,EAAD,CACI1O,IAAKwO,EACLtO,MAAO,CAACuL,OAAO,IAAKpK,MAAM,QAC1BsN,mBAAoB,EACpBC,YAAa,EACbb,QAAQ,eACRc,QAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,YAAY,EACZC,cAAe,SAAAC,GAAO,OAAIT,EAAWS,MCZlC,SAASC,GAAT9hB,GACf,IAD2C6F,EAC3C7F,EAD2C6F,QAAShC,EACpD7D,EADoD6D,YAEhDiU,EAAwBC,mBAAc,IAAtCC,EAAA7Z,OAAAiZ,EAAA,EAAAjZ,CAAA2Z,EAAA,GAAOiK,EAAP/J,EAAA,GAAcmI,EAAdnI,EAAA,GACAgK,EAA4BjK,qBAA5BkK,EAAA9jB,OAAAiZ,EAAA,EAAAjZ,CAAA6jB,EAAA,GAAOH,EAAPI,EAAA,GAAgBb,EAAhBa,EAAA,GAaA,OALA9J,oBAAU,WACN,OAAO,WACH4J,EAAMzb,QAAQ,SAACxC,GAAD,OAAY6c,IAAIuB,gBAAgBpe,EAAK4c,aAEzD,CAACqB,IAEC/P,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQqD,KAAG,EAACnD,MAAM,OAAOpG,QAAQ,uBACjCgE,EAAA7R,EAAA8R,cAACiO,GAAD,CAAqBC,SAAUA,KAEnCnO,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IACpBhC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQqD,KAAG,EAACnD,MAAM,OAAOpG,QAAQ,0BAChC+T,GAASA,EAAMnjB,OAAS,GACrBoT,EAAA7R,EAAA8R,cAACiP,GAAD,CAAoBE,WAAYA,EAAYD,aAAcY,EAAM,GAAGrB,WAG3E1O,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IACpBhC,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQqD,KAAG,EAACnD,MAAM,OAAOpG,QAAQ,8BAChC+T,GAASA,EAAMnjB,OAAO,GACvBoT,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACI7B,EAAA7R,EAAA8R,cAAA,OAAKmI,UAAU,cAAcvH,MAAO,CAAC6E,UAAU,IAAKyK,SAAS,YAC7DnQ,EAAA7R,EAAA8R,cAACe,EAAA,EAAO0D,MAAR,CAAc0L,OAAQ,GAClBpQ,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQnN,QAASA,EAAS8N,QA/B9C,WACOkO,GACCA,EAAQQ,mBAAmBC,OAAO,SAAAC,GAAI,OAAE1e,EAAY0e,MA6BGtP,UAAQ,EAACS,KAAK,UACzD1B,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQ6E,SAAUhS,EAAS8N,QAAS,kBAAIwM,EAAS,KAAKzM,KAAK,cCrCpE5B,mBAAS,SAAA9R,GAAuC,IAAAwiB,EAAfrU,EAAenO,EAAfmO,QAC5CsU,EAAiG7Q,IAA1FJ,aAAckR,EAArBD,EAAqBC,cAAe7e,EAApC4e,EAAoC5e,YAAawK,EAAjDoU,EAAiDpU,UAAWxI,EAA5D4c,EAA4D5c,QAAS1B,EAArEse,EAAqEte,aAAcC,EAAnFqe,EAAmFre,YACnF0T,EAAsCC,oBAAS,GAA/CC,EAAA7Z,OAAAiZ,EAAA,EAAAjZ,CAAA2Z,EAAA,GAAO6K,EAAP3K,EAAA,GAAqB4K,EAArB5K,EAAA,GACAgK,EAA0BjK,mBAAS,IAAnCkK,EAAA9jB,OAAAiZ,EAAA,EAAAjZ,CAAA6jB,EAAA,GAAOa,EAAPZ,EAAA,GAAea,EAAfb,EAAA,GAeA,OACIjQ,EAAA7R,EAAA8R,cAACwN,GAAA,EAAIC,KAAL,KACI1N,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQgD,QAAQ,OAAOxD,KAAK,QAAQ1F,QAAQ,WAC3C0U,GACG1Q,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQkE,QAAQ,QAAQjC,OAAK,EAC7BjH,QAAS2U,EAAa,SAAS,YAC/BhP,QAAS,kBAAIiP,GAAiBD,OAGtC3Q,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IACf2O,EACG3Q,EAAA7R,EAAA8R,cAAC6P,GAAD,CAAmBje,YA3BvC,SAA2BC,GACvBD,EAAYC,GAAM1B,KAAK,kBAAIwgB,GAAgB,MA0BwB/c,QAASwI,IAGhE2D,EAAA7R,EAAA8R,cAACoD,GAAA,EAAKqB,MAAN,CAAYqJ,YAAa,GAAzB,QAAAyC,EACKrU,EAAQY,cADb,IAAAyT,OAAA,EACKA,EAAgBzM,IAAI,SAAAlH,GAAK,OAC1BmD,EAAA7R,EAAA8R,cAACoD,GAAA,EAAD,CAAM9T,IAAKsN,EAAM/L,IACbkP,EAAA7R,EAAA8R,cAACkB,EAAA,EAAD,CAAOR,IAAK9D,EAAM3M,MACjBwgB,GACG1Q,EAAA7R,EAAA8R,cAACe,EAAA,EAAO0D,MAAR,CAAc3B,OAAK,EAACqN,OAAQ,GACxBpQ,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQiC,OAAK,EAACb,MAAM,QAAQpG,QAAQ,OAAO+E,KAAM,OAAOlE,EAAM/L,GAAI+U,SAAUhJ,EAAMG,OAClFnJ,QAASgd,IAAU,OAAShU,EAAM/L,IAAM+C,EAAS8N,QAAS,SAAAuB,GAAC,OAjC3F,SAA4BrG,EAAcqG,GACtC4N,EAAU5N,EAAE6N,cAAchQ,MAC1B5O,EAAa0K,GA+B4EmU,CAAmBnU,EAAMqG,MAEtFlD,EAAA7R,EAAA8R,cAACe,EAAA,EAAD,CAAQiC,OAAK,EAACb,MAAM,MAAMV,KAAK,QAC/B7N,QAASgd,IAAShU,EAAM/L,IAAM+C,EAC9B8N,QAAS,SAAAuB,GAAC,OAhC1C,SAA2BrG,EAAaqG,GAEpC4N,EAAU5N,EAAE6N,cAAchQ,MAC1B3O,EAAYyK,GA6B4BoU,CAAkBpU,EAAOqG,IACrC2C,SAAUhJ,EAAMG,OAChB+D,KAAMlE,EAAM/L,eC5CjCgP,eAAU,SAAA9R,GAAwC,IAAfmO,EAAenO,EAAfmO,QACvCqD,EAAcI,IAAdJ,aACD8N,EAAM,CACR,CAACC,SAAS,QAAS/E,OAAO,kBAAIxI,EAAA7R,EAAA8R,cAACwN,GAAA,EAAIC,KAAL,wBAC9B,CAACH,SAAS,SAAU/E,OAAO,kBAAIxI,EAAA7R,EAAA8R,cAACwN,GAAA,EAAIC,KAAL,KAAU1N,EAAA7R,EAAA8R,cAACiR,GAAD,CAAe/U,QAASA,OACjE,CAACoR,SAAS,SAAU/E,OAAO,kBAAIxI,EAAA7R,EAAA8R,cAACkR,GAAD,QAC/B,CAAC5D,SAAS,YAAa/E,OAAO,kBAAIxI,EAAA7R,EAAA8R,cAACmR,GAAD,QAClC,CAAC7D,SAAS,YAAa/E,OAAO,kBAAIxI,EAAA7R,EAAA8R,cAACmR,GAAD,SAGtC,OACIpR,EAAA7R,EAAA8R,cAACwN,GAAA,EAAD,CACIE,KAAM,CAAC5K,OAAM,EAAMjB,UAAS,GAC5BuP,aAAa,QACb/D,MAAOA,EACPM,YAAa,SAAC1K,EAAG7W,GAAJ,OAAWmT,EAAa7C,aAAatQ,EAAKwhB,4BCpBpD/N,eAAU,SAAA9R,GAAuC,IAAfmO,EAAenO,EAAfmO,QAC7C,OACI6D,EAAA7R,EAAA8R,cAACwE,GAAA,EAAD,KACIzE,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IAChBhC,EAAA7R,EAAA8R,cAACK,GAAA,EAAKoE,MAAN,KACI1E,EAAA7R,EAAA8R,cAACK,GAAA,EAAD,KACIN,EAAA7R,EAAA8R,cAACK,GAAA,EAAKa,MAAN,CAAYC,QAAM,EAACW,KAAK,QAAQpB,IAAKxE,EAAQ7I,OAAR,qBACrC0M,EAAA7R,EAAA8R,cAACK,GAAA,EAAKuC,QAAN,CAAckJ,cAAc,UACxB/L,EAAA7R,EAAA8R,cAACiC,GAAA,EAAD,CAAQ3B,GAAG,KAAKvE,QAASG,EAAQ9I,kBAKjD2M,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,GAChBhC,EAAA7R,EAAA8R,cAACqR,GAAA,EAAU5M,MAAX,CAAiB0L,OAAQ,GACrBpQ,EAAA7R,EAAA8R,cAACqR,GAAA,EAAD,CAAW5J,MAAM,YAAYtT,MAAO+H,EAAQjE,gBAC5C8H,EAAA7R,EAAA8R,cAACqR,GAAA,EAAD,CAAW5J,MAAM,YAAYtT,MAAO+H,EAAQkB,kBAEhD2C,EAAA7R,EAAA8R,cAACqJ,GAAA,EAAD,MACAtJ,EAAA7R,EAAA8R,cAACyD,GAAD,CAAcvH,QAASA,SCpB5B2D,eAAU,WACrB,IAAOlO,EAAU8Y,eAAV9Y,SACA4N,EAAcI,IAAdJ,aACA5C,EAAoC4C,EAApC5C,YAAaT,EAAuBqD,EAAvBrD,QAASQ,EAAc6C,EAAd7C,aAQ7B,OANAwJ,oBAAU,WAEN,OADAvJ,EAAYhL,GACN,WACF+K,EAAa,KAEnB,CAACC,EAAahL,EAAS+K,IAErBqD,EAAA7R,EAAA8R,cAACmG,EAAA,EAAD,KACIpG,EAAA7R,EAAA8R,cAACmG,EAAA,EAAKC,OAAN,CAAarE,MAAO,IACf7F,GACD6D,EAAA7R,EAAA8R,cAAAD,EAAA7R,EAAA0T,SAAA,KACA7B,EAAA7R,EAAA8R,cAACsR,GAAD,CAAepV,QAASA,IACxB6D,EAAA7R,EAAA8R,cAACuR,GAAD,CAAgBrV,QAASA,SClB1B,SAASsV,GAATzjB,GAAuC,IAAhB0jB,EAAgB1jB,EAAhB0jB,SAElC,OAD+B9R,IAAxBhQ,UAAWuZ,WACEuI,EAAW1R,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAUC,SAAO,EAACnR,GAAG,MC+CzCX,mBAvCf,WACE,IAAM+R,EAASC,eACfpP,EAA+B9C,IAAxBjS,EAAP+U,EAAO/U,YAAaiC,EAApB8S,EAAoB9S,UActB,OAZEuW,oBAAU,WACLxY,EAAYF,MACbmC,EAAU2O,UAAUwT,QAAQ,kBAAIpkB,EAAY8N,iBAI5C7L,EAAU4O,yBAAyBpO,KAAK,kBAAIzC,EAAY8N,kBAE1D,CAAC9N,EAAaiC,IACbiiB,GACH9c,QAAQC,IAAI6c,EAAStiB,KAEnB5B,EAAY2N,UAGZ0E,EAAA7R,EAAA8R,cAACqF,EAAA,SAAD,KACEtF,EAAA7R,EAAA8R,cAAC+R,EAAD,MACAhS,EAAA7R,EAAA8R,cAACgS,EAAA,EAAD,CAAgB/Q,SAAS,eAAegR,iBAAe,IACvDlS,EAAA7R,EAAA8R,cAACkS,GAAD,MACAnS,EAAA7R,EAAA8R,cAACI,EAAA,EAAD,CAAWQ,MAAO,CAACoB,UAAU,QAC3BjC,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,KACA3R,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,IAAIC,QAASrS,EAAA7R,EAAA8R,cAACqS,GAAD,QACzBtS,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,cAAcC,QAASrS,EAAA7R,EAAA8R,cAACwR,GAAD,KAAczR,EAAA7R,EAAA8R,cAACsS,GAAD,SACjDvS,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,kBAAkBC,QAASrS,EAAA7R,EAAA8R,cAACwR,GAAD,KAAczR,EAAA7R,EAAA8R,cAACuS,GAAD,SACrDxS,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,kBAAkBC,QAASrS,EAAA7R,EAAA8R,cAACwR,GAAD,KAAczR,EAAA7R,EAAA8R,cAACwS,GAAD,CAAcljB,IAAKsiB,EAAStiB,SACjFyQ,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,sBAAsBC,QAASrS,EAAA7R,EAAA8R,cAACwR,GAAD,KAAczR,EAAA7R,EAAA8R,cAACyS,GAAD,SACzD1S,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,cAAcC,QAASrS,EAAA7R,EAAA8R,cAACwR,GAAD,KAAczR,EAAA7R,EAAA8R,cAACwS,GAAD,CAAcljB,IAAKsiB,EAAStiB,SAC7EyQ,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,SAASC,QAASrS,EAAA7R,EAAA8R,cAACmJ,GAAD,QAC9BpJ,EAAA7R,EAAA8R,cAAC0R,GAAA,EAAD,CAAOS,KAAK,IAAIC,QAASrS,EAAA7R,EAAA8R,cAACgN,GAAD,WAhBCjN,EAAA7R,EAAA8R,cAACsJ,GAAD,CAAkBvN,QAAQ,qBCnB7C2W,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAA5P,EAAA,GAAA9S,KAAA0iB,EAAAC,KAAA,WAAqB3iB,KAAK,SAAApC,GAAiD,IAA9CglB,EAA8ChlB,EAA9CglB,OAAQC,EAAsCjlB,EAAtCilB,OAAQC,EAA8BllB,EAA9BklB,OAAQC,EAAsBnlB,EAAtBmlB,OAAQC,EAAcplB,EAAdolB,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,eCNC,SAASS,KACpB,IAAOC,EAAUxB,eAAVwB,SAKP,OAJAnN,oBAAU,WACNhL,OAAOoY,SAAS,EAAE,IACpB,CAACD,IAEI,KCTXR,EAAA7I,EAAAuJ,EAAA,4BAAAC,KAcO,IAAMnV,GAAQoV,eACrBC,IAASnL,OACPxI,EAAA7R,EAAA8R,cAACP,EAAakU,SAAd,CAAuBxf,MAAO1G,GAC5BsS,EAAA7R,EAAA8R,cAAC6E,EAAA,EAAD,KACA9E,EAAA7R,EAAA8R,cAACoT,GAAD,MACArT,EAAA7R,EAAA8R,cAAC4T,GAAD,QAIFC,SAASC,eAAe,SAM1BpB","file":"static/js/main.4fc83ffe.chunk.js","sourcesContent":["export interface Pagination{\r\n    CurrentPage:number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data:T;\r\n    pagination:Pagination;\r\n\r\n    constructor(data: T, pagination:Pagination)\r\n    {\r\n        this.data=data;\r\n        this.pagination=pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pagenumber;\r\n    PageSize;\r\n    \r\n    constructor(pageNumber=1, pageSize=2)\r\n    {\r\n        this.pagenumber=pageNumber;\r\n        this.PageSize=pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Activity, ActivityFormValues} from '../models/activity';\r\nimport { PaginatedResult } from \"../models/Pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"../store/Store\";\r\n\r\nconst sleep=(delay:number) =>{\r\n    return new Promise ((resolve)=>{\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\n\r\naxios.defaults.baseURL=process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config=>{\r\n    const token=store.commonStore.token;\r\n    if(token) config.headers!.Authorization=`Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response=>{\r\n        if(process.env.NODE_ENV === 'development') await sleep(1000);\r\n        const pagination=response.headers['pagination'];\r\n        if(pagination){\r\n            response.data=new PaginatedResult(response.data, JSON.parse(pagination));\r\n            return response as AxiosResponse<PaginatedResult<any>>;\r\n        }\r\n        return response;\r\n\r\n}, (error:AxiosError)=>{\r\n    const {data, status, config, headers}=error.response!;\r\n    switch(status){\r\n        case 400:\r\n            if(config.method ==='get' && data.errors.hasOwnProperty('id')){\r\n                //history.push('not-found')\r\n            }\r\n            if(data.errors)\r\n            {\r\n                const modelStateErrors=[];\r\n                for(const key in data.errors)\r\n                {\r\n                    if(data.errors[key])\r\n                    {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }    \r\n                throw modelStateErrors.flat();\r\n            }\r\n            else\r\n            {\r\n                toast.error(data);\r\n            }\r\n            break\r\n        case 401:\r\n            if(status===401 && headers['www-authenticate'].startsWith('Bearer error=\"invalid_token\"')){\r\n                store.userStore.logout();\r\n                toast.error('Session expired - please login again');\r\n            }\r\n\r\n            break;\r\n        case 404:\r\n            toast.error('not found');\r\n            break;\r\n        case 500:\r\n            toast.error('server error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\nconst responseBody= <T>(response: AxiosResponse<T>)=>response.data;\r\n\r\nconst requests={\r\n    get: <T>(url:string)=>axios.get<T>(url).then(responseBody),\r\n    post: <T> (url:string, body:{})=>axios.post<T>(url, body).then(responseBody),\r\n    put:<T> (url:string, body:{})=>axios.put<T>(url, body).then(responseBody),\r\n    delete: <T>(url:string)=>axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities={\r\n    list: (params:URLSearchParams)=>axios.get<PaginatedResult<Activity[]>>('/activities',{params}).then(responseBody),\r\n    details: (id:string)=>requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity:ActivityFormValues)=>requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues)=>requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id:string)=>requests.delete<void>(`/activities/${id}`),\r\n    attend: (id:string)=>requests.post<void>(`/activities/${id}/attend`,{})\r\n}\r\n\r\nconst Account={\r\n    current:()=> requests.get<User>('/account'),\r\n    login:(user:UserFormValues)=>requests.post<User>('/account/login', user),\r\n    register:(user:UserFormValues)=>requests.post<User>('/account/register', user),\r\n    fbLogin:(accessToken:string)=>requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken:()=> requests.post<User>('/account/refreshToken',{})\r\n}\r\n\r\nconst Profiles= {\r\n    get: (username: string)=> requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto:(file:Blob)=>{\r\n        let formData=new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData,{\r\n            headers:{'Content-type':'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto:(id:string)=>requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto:(id:string)=>requests.delete(`/photos/${id}`),\r\n    updateFollowing:(username:string)=>requests.post(`/follow/${username}`,{}),\r\n    listFollowings:(username:string, predicate:string)=>requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities:(username:string, predicate:string)=>requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\nconst agent={\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n        id: string;\r\n        title: string;\r\n        date: Date | null;\r\n        description: string;\r\n        category: string;\r\n        city: string;\r\n        venue: string;\r\n        hostUserName:string;\r\n        isCancelled:boolean;\r\n        isGoing:boolean;\r\n        isHost:boolean;\r\n        host?:Profile;\r\n        attendees: Profile[]\r\n    }\r\n\r\n    export class Activity implements Activity{\r\n        constructor(init?:ActivityFormValues){\r\n            Object.assign(this, init);\r\n        }\r\n    }\r\n    \r\n    export class ActivityFormValues{\r\n        id?: string=undefined\r\n        title:string='';\r\n        category:string='';\r\n        description:string='';\r\n        date:Date | null=null;\r\n        city: string='';\r\n        venue:string='';\r\n\r\n        constructor(activity?:ActivityFormValues){\r\n            if(activity){\r\n                this.id=activity.id;\r\n                this.title=activity.description;\r\n                this.category=activity.category;\r\n                this.description=activity.description;\r\n                this.date=activity.date;\r\n                this.venue=activity.venue;\r\n                this.city=activity.city;\r\n            }\r\n        }\r\n    }","import { User } from \"./User\";\r\n\r\nexport interface Profile{\r\n    username:string;\r\n    displayName:string;\r\n    image?:string;\r\n    bio?:string;\r\n    followerCount:number;\r\n    followingCount:number;\r\n    following:boolean;\r\n    photos?:Photo[];\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user:User)\r\n    {\r\n        this.username=user.userName;\r\n        this.displayName=user.displayName;\r\n        this.image=user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo\r\n{\r\n    id: string;\r\n    url: string;\r\n    isMain:boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n   }","import { format } from \"date-fns\";\r\nimport {  makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../API/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/Pagination\";\r\nimport { Profile } from \"../models/Profile\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class ActivityStore{\r\n    activityRegistry=new Map<string, Activity>();\r\n    selectedActivity:Activity | undefined=undefined;\r\n    editMode=false;\r\n    loading=false;\r\n    submitting=false;\r\n    loadingInitials=false;\r\n    pagination: Pagination | null=null;\r\n    pagingParams=new PagingParams();\r\n    predicate=new Map().set('all', true);\r\n  \r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            ()=>this.predicate.keys(),\r\n            ()=>{this.pagingParams=new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    setPagingParams=(pagingParams: PagingParams)=>{\r\n        this.pagingParams=pagingParams;\r\n    }\r\n\r\n    setPredicate=(predicate:string, value: string|Date)=>{\r\n        const resetPrediciate=()=>{\r\n            this.predicate.forEach((value, key)=>{\r\n                if(key!=='startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch(predicate)\r\n        {\r\n            case 'all':\r\n                resetPrediciate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPrediciate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPrediciate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n                break;\r\n        }\r\n    }\r\n\r\n   get axiosParams() {\r\n       const params=new URLSearchParams();\r\n       params.append('pageNumber', this.pagingParams.pagenumber.toString());\r\n       params.append('pageSize', this.pagingParams.PageSize.toString());\r\n       this.predicate.forEach((value, key)=>{\r\n           if(key==='startDate')\r\n           {\r\n               params.append(key, (value as Date).toISOString());\r\n           }\r\n           else\r\n           {\r\n               params.append(key, value);\r\n           }\r\n       })\r\n       return params;\r\n   }\r\n    get activityByDate(){\r\n        return Array.from(this.activityRegistry.values()).sort((a,b)=>\r\n        a.date!.getTime()-b.date!.getTime());\r\n\r\n    }\r\n\r\n    get groupedActivities(){\r\n        return Object.entries(\r\n            this.activityByDate.reduce((activities, activity)=>{\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date]=activities[date]?[...activities[date], activity]:[activity];\r\n                return activities;\r\n            }, {} as {[key:string]:Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities= async ()=>{\r\n        this.loadingInitials=true;\r\n        try{\r\n            const result=await agent.Activities.list(this.axiosParams);\r\n            runInAction(()=>{\r\n                result.data.forEach(activity => {\r\n                    this.setActivity(activity);\r\n                  });\r\n                this.setPagination(result.pagination);  \r\n                this.loadingInitials=false;\r\n            })\r\n        }catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loadingInitials=false;\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    setPagination=(pagination:Pagination)=>{\r\n        this.pagination=pagination;\r\n    }\r\n\r\n    loadActivity=async (id:string)=>{\r\n        let activity=this.getActivity(id);\r\n        if(activity)\r\n        {\r\n            this.selectedActivity=activity;\r\n            return activity;\r\n        }\r\n        else\r\n        {\r\n            this.loadingInitials=true;\r\n            try{\r\n                    activity=await agent.Activities.details(id);\r\n                    this.setActivity(activity);\r\n                    runInAction(()=>{\r\n                    this.selectedActivity=activity;\r\n                    })\r\n                    this.loadingInitials=false;\r\n                    return activity;\r\n            }catch(error)\r\n            {\r\n                console.log(error);\r\n                this.loadingInitials=false;\r\n            }\r\n\r\n        }\r\n    }\r\n    private setActivity=(activity:Activity)=>{\r\n        const user=store.userStore.user;\r\n        if(user)\r\n        {\r\n            activity.isGoing=activity.attendees!.some(a=>a.username===user.userName);\r\n            activity.isHost=activity.hostUserName===user.userName;\r\n            activity.host=activity.attendees?.find(x=>x.username===activity.hostUserName);\r\n        }\r\n        activity.date=new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n    private getActivity=(id: string)=>\r\n    {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n    \r\n\r\n\r\n    createActivity=async (activity:ActivityFormValues)=>{\r\n        const user=store.userStore.user;\r\n        const attendee=new Profile(user!);\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Activities.create(activity);\r\n            const newActivity=new Activity(activity);\r\n        newActivity.hostUserName=user!.userName;\r\n        newActivity.attendees=[attendee];\r\n        this.setActivity(newActivity);\r\n            runInAction(()=>{\r\n                this.selectedActivity=newActivity;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    updateActivity=async (activity:ActivityFormValues)=>{\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Activities.update(activity);\r\n            runInAction(()=>{\r\n                //this.Activities.filter(x=>x.id!==activity.id);\r\n                //this.Activities.push(activity);\r\n                if(activity.id){\r\n                    let updateActivity={...this.getActivity(activity.id), ...activity};\r\n                    this.activityRegistry.set(activity.id, updateActivity as Activity);\r\n                    this.selectedActivity=updateActivity as Activity;\r\n                }\r\n          \r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n    }\r\n    deleteActivity=async (id:string)=>{\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Activities.delete(id);\r\n            runInAction(()=>{\r\n                this.activityRegistry.delete(id);\r\n                this.loading=false;                \r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance=async()=>{\r\n        const user=store.userStore.user;\r\n        this.loading=true;\r\n        try{\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                if(this.selectedActivity?.isGoing){\r\n                    this.selectedActivity.attendees=this.selectedActivity.attendees?.filter(a=> a.username!==user?.userName);\r\n                    this.selectedActivity.isGoing=false;\r\n                }\r\n                else{\r\n                    const attendee=new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing=true;\r\n                }\r\n\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n        finally{\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle=async()=>{\r\n        this.loading=true;\r\n        try{\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                this.selectedActivity!.isCancelled=!this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n        finally{\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity=()=>{\r\n        this.selectedActivity=undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing=(username:string)=>\r\n    {\r\n        this.activityRegistry.forEach(activity=>{\r\n            activity.attendees.forEach(attendee=>{\r\n                if(attendee.username===username)\r\n                {\r\n                    attendee.following?attendee.followerCount--: attendee.followerCount++;\r\n                    attendee.following=!attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class CommentStore{\r\n    comments:ChatComment[]=[];\r\n    hubConnection:HubConnection | null=null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection=(activityId:string)=>{\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection=new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?activityId='+activityId,{\r\n                accessTokenFactory:()=>store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n            \r\n            this.hubConnection.start().catch(error=>console.log('Error estabilising the connection ', error));\r\n\r\n            this.hubConnection.on('LoadComments',(comments:ChatComment[])=>{\r\n                runInAction(()=>{\r\n                    comments.forEach(comment=>{\r\n                        comment.createdAt=new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments=comments});\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment',(comment:ChatComment)=>{\r\n                runInAction(()=>{\r\n                    comment.createdAt=new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)})\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection=()=>{\r\n        this.hubConnection?.stop().catch(error=>console.log('error stopping connection', error));\r\n    }\r\n\r\n    clearComments=()=>{\r\n        this.comments=[];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment=async(values:any)=>{\r\n        values.activityId=store.activityStore.selectedActivity?.id;\r\n        try{\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore{\r\n    error:ServerError|null=null;\r\n    token:string|null=window.localStorage.getItem('jwt');\r\n    appLoaded=false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            ()=>this.token,\r\n            token=>{\r\n                if(token)\r\n                {\r\n                    window.localStorage.setItem('jwt', token);\r\n                }\r\n                else\r\n                {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setServerError=(error:ServerError)=>{\r\n        this.error=error;\r\n    }\r\n\r\n    setToken=(token:string|null)=>{\r\n        //if(token) window.localStorage.setItem('jwt', token);\r\n        this.token=token;\r\n    }\r\n\r\n    setAppLoaded=()=>{\r\n        this.appLoaded=true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal\r\n{\r\n    open:boolean;\r\n    body:JSX.Element| null;\r\n}\r\nexport default class ModelStore\r\n{\r\n    model: Modal={\r\n        open:false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModel=(content:JSX.Element)=>{\r\n        this.model.open=true;\r\n        this.model.body=content;\r\n    }\r\n\r\n    closeModel=()=>{\r\n        this.model.open=false;\r\n        this.model.body=null;\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../API/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class ProfileStore{\r\n    profile:Profile|null=null;\r\n    loadingProfile=false;\r\n    uploading=false;\r\n    loading=false;\r\n    followings:Profile[]=[];\r\n    loadingFollowings=false;\r\n    activeTab=0;\r\n    userActivities:UserActivity[]=[];\r\n    loadingActivities=false;\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            ()=> this.activeTab,\r\n                activeTab=>{\r\n                if(activeTab===3 || this.activeTab===4){\r\n                    const predicate=this.activeTab===3? \"followers\":\"Following\";\r\n                    this.loadFollowing(predicate);\r\n                }\r\n                else{\r\n                    this.followings=[];\r\n                }\r\n        })\r\n    }\r\n    setActiveTab=(activeTab:any)=>{\r\n        this.activeTab=activeTab;\r\n    }\r\n    get isCurrentUser(){\r\n        if(store.userStore.user && this.profile){\r\n            return store.userStore.user.userName===this.profile.username;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadProfile=async (username: string)=>{\r\n        this.loadingProfile=true;\r\n        try{\r\n            const profile=await agent.Profiles.get(username);\r\n            runInAction(()=>{\r\n                this.profile=profile;\r\n                this.loadingProfile=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingProfile=false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async(file: Blob)=>{\r\n        this.uploading=true;\r\n        try{\r\n            const response=await agent.Profiles.uploadPhoto(file);\r\n            const photo=response.data;\r\n            runInAction(()=>{\r\n                if(this.profile){\r\n                    this.profile.photos?.push(photo);\r\n                    if(photo.isMain && store.userStore.user){\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image=photo.url;\r\n                    }\r\n                }\r\n                this.uploading=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.uploading=false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto=async(photo: Photo)=>{\r\n        this.loading=true;\r\n        try{\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(()=>{\r\n                if(this.profile && this.profile.photos){\r\n                    this.profile.photos.find(p=>p.isMain)!.isMain=false;\r\n                    this.profile.photos.find(p=>p.id===photo.id)!.isMain=true;\r\n                    this.profile.image=photo.url;\r\n                    this.loading=false;\r\n                }\r\n            })\r\n        }catch(error){\r\n            runInAction(()=>this.loading=false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto=async (photo:Photo)=>{\r\n        this.loading=true;\r\n        try{\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(()=>{\r\n                if(this.profile){\r\n                    this.profile.photos=this.profile.photos?.filter(p=>p.id!==photo.id);\r\n                    this.loading=false;\r\n                }\r\n            })\r\n        }\r\n        catch(error){\r\n            runInAction(()=>this.loading=false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateFollowing=async (username:string, following:boolean)=>{\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(()=>{\r\n                if(this.profile && this.profile.username!==store.userStore.user?.userName && this.profile.username===username){\r\n                    following?this.profile.followerCount++ : this.profile.followerCount--;\r\n                    this.profile.following=!this.profile.following;\r\n                }\r\n                if(this.profile && this.profile.username===store.userStore.user?.userName){\r\n                    following?this.profile.followingCount++:this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile=>{\r\n                    if(profile.username===username)\r\n                    {\r\n                        profile.following?profile.followerCount--: profile.followerCount++;\r\n                        profile.following=!profile.following;\r\n                    }\r\n                })\r\n\r\n                this.loading=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    loadFollowing=async(predicate:string)=>{\r\n        this.loadingFollowings=true;\r\n\r\n        try{\r\n            const following=await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(()=>{\r\n                this.followings=following;\r\n                this.loadingFollowings=false;\r\n\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingFollowings=false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities =async (username:string, predicate?:string) => {\r\n        this.loadingActivities=true;\r\n        try\r\n        {\r\n            const activities=await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(()=>{\r\n                this.userActivities=activities;\r\n                this.loadingActivities=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingActivities=false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../API/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class UserStore{\r\n    user:User|null=null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading=false;\r\n    refreshTokenTimeout:any;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login=async (creds:UserFormValues)=>{\r\n        try{\r\n            const user=await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(()=> this.user=user);\r\n            store.modalStore.closeModel();\r\n            return history.push('/activities')\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout=()=>{\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user=null;\r\n        return history.push('/');\r\n    }\r\n\r\n    getUser=async()=>{\r\n        try{\r\n            const user=await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(()=>this.user=user);\r\n            this.startRefreshTokenTimer(user);\r\n        }catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register=async (creds:UserFormValues)=>{\r\n        try{\r\n            const user=await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(()=> this.user=user);\r\n            store.modalStore.closeModel();\r\n            return history.push('/activities')\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage=(image:string)=>{\r\n        if(this.user) this.user.image=image;\r\n    }\r\n\r\n    getFacebookLoginStatus=async()=>{\r\n        window.FB.getLoginStatus(response=>{\r\n            if(response.status==='connected')\r\n            {\r\n                this.fbAccessToken=response.authResponse.accessToken;\r\n            }\r\n        })\r\n    }\r\n\r\n    facebookLogin=()=>{\r\n        this.fbLoading=true;\r\n        const apiLogin=(accessToken:string)=>{\r\n            agent.Account.fbLogin(accessToken).then(user=>{\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(()=>{\r\n                    this.user=user;\r\n                    this.fbLoading=false;\r\n                })\r\n\r\n            //todo: navigate to activities                \r\n            }).catch(error=>{\r\n                console.log(error);\r\n                runInAction(()=>this.fbLoading=false);\r\n            });\r\n            \r\n        }\r\n        if(this.fbAccessToken){\r\n            apiLogin(this.fbAccessToken);\r\n        }\r\n        else\r\n        {\r\n            window.FB.login(response=>{\r\n                apiLogin(response.authResponse.accessToken);\r\n            },{scope:'public_profile,email'})\r\n        }\r\n        // window.FB.login(response => {\r\n        //     console.log(response);\r\n        //     agent.Account.fbLogin(response.authResponse.accessToken).then(user=>console.log(user));\r\n\r\n        // },{scope:'public_profile,email'})\r\n    }\r\n\r\n    refreshToken=async()=>{\r\n        this.stoprefreshTokenTimer();\r\n        try{\r\n            const user=await agent.Account.refreshToken();\r\n            runInAction(()=>this.user=user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    private startRefreshTokenTimer(user:User){\r\n        const jwtToken=JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires=new Date(jwtToken.exp*1000);\r\n        const timeout=expires.getTime()-Date.now()-(60*1000);\r\n        console.log(\"timeout \"+timeout);\r\n        this.refreshTokenTimeout=setTimeout(this.refreshToken, timeout);\r\n    }\r\n\r\n    private stoprefreshTokenTimer(){\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\nimport CommentStore from \"./CommentStore\";\r\nimport CommonStore from \"./CommonStore\";\r\nimport ModelStore from \"./modelStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport UserStore from \"./UserStore\";\r\n\r\ninterface Store{\r\n    activityStore:ActivityStore;\r\n    commonStore:CommonStore;\r\n    userStore:UserStore;\r\n    modalStore:ModelStore;\r\n    profileStore:ProfileStore;\r\n    commentStore:CommentStore;\r\n}\r\n\r\nexport const store:Store={\r\n    activityStore:new ActivityStore(),\r\n    commonStore:new CommonStore(),\r\n    userStore:new UserStore(),\r\n    modalStore:new ModelStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore:new CommentStore()\r\n}\r\n\r\nexport const StoreContext=createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../store/Store\";\r\n\r\nexport default observer( function NavBar(){\r\n    const {userStore:{user, logout}}=useStore()\r\n    return(        \r\n    <Menu inverted fixed='top'>\r\n        <Container>\r\n            <Menu.Item as={NavLink} to='/' header>\r\n                <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight:10}}/>\r\n                Reactivity\r\n            </Menu.Item>\r\n            <Menu.Item as={NavLink} to='/activities' name='Activities'/>\r\n            <Menu.Item>\r\n                <Button as={NavLink} to='/createactivity' positive content='Create Activity'/>\r\n            </Menu.Item>\r\n            <Menu.Item position='right'>\r\n                <Image src={user?.image || 'assets/user.png'} avatar spaced='right'/>\r\n                <Dropdown pointing='top left' text={user?.displayName}>\r\n                    <Dropdown.Menu>\r\n                    <Dropdown.Item as={Link} to={`/profiles/${user?.userName}`} text='My Profile' icon='user'/>\r\n                    <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Menu.Item>\r\n        </Container>\r\n        </Menu>\r\n    );\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\n\r\nexport default observer(function ActivityFilter(){\r\n    const {activityStore:{predicate, setPredicate}}=useStore();\r\n    return(\r\n        <>\r\n        <Menu vertical size=\"large\" style={{width:'100%', marginTop:25}}>\r\n            <Header icon='filter' attached color='teal' content='Filters'/>\r\n            <Menu.Item \r\n                content='All Activities'\r\n                active={predicate.has('all')}\r\n                onClick={()=>setPredicate('all', 'true')}\r\n            />\r\n            <Menu.Item content=\"I'm Going\"\r\n                active={predicate.has('isGoing')}\r\n                onClick={()=>setPredicate('isGoing', 'true')}\r\n            />\r\n            <Menu.Item \r\n            content=\"I'm Hosting\"\r\n            active={predicate.has('isHost')}\r\n            onClick={()=>setPredicate('isHost', 'true')}            \r\n            />\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar\r\n            onChange={(date: Date)=>setPredicate('startDate', date as Date)}\r\n            value={predicate.get('startDate')|| new Date()}\r\n        />\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React,{ SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}:Props){\r\n    const {profileStore, userStore}=useStore();\r\n\r\n    const {updateFollowing, loading}=profileStore;\r\n    if(userStore.user?.userName === profile.username) return null;\r\n\r\n    function handleFollow(e:SyntheticEvent, username:string)\r\n    {\r\n        e.preventDefault();\r\n        profile.following?updateFollowing(username, false): updateFollowing(username, true);\r\n    }\r\n    return(\r\n        <Reveal animated=\"move\">\r\n        <Reveal.Content visible style={{width:'100%'}}>\r\n            <Button \r\n            fluid \r\n            color=\"teal\" \r\n            content={profile.following?'Following':'Not Following'}/>\r\n        </Reveal.Content>\r\n        <Reveal.Content hidden style={{width:'100%'}}>\r\n            <Button \r\n                basic \r\n                fluid\r\n                color={profile.following?'red':'green'} \r\n                content={profile.following?'UnFollow':'Follow'}\r\n                loading={loading}\r\n                onClick={(e)=>handleFollow(e,profile.username)}/>\r\n        </Reveal.Content>\r\n    </Reveal>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}:Props){\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'}/>\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>{profile.bio}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user'/>\r\n                {profile.followerCount}\r\n            </Card.Content>\r\n            <FollowButton profile={profile}/>\r\n        </Card>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport ProfileCard from \"../../Profiles/ProfileCard\";\r\n\r\ninterface Props{\r\n    attendees:Profile[];\r\n}\r\nexport default observer(function ActivityListItemAttendee({attendees}:Props)\r\n{\r\n    const style={\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee=>(\r\n                            <Popup hoverable key={attendee.username}\r\n                            trigger={\r\n                           <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                           <Image \r\n                                size='mini' circular src={attendee.image ||'/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following? style:null}/>\r\n                       </List.Item> }\r\n                       >\r\n                           <Popup.Content>\r\n                               <ProfileCard profile={attendee}/>\r\n                           </Popup.Content>\r\n                       </Popup>\r\n            ))}\r\n                       \r\n        </List>\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\n\r\ninterface Props{\r\n    activity:Activity;\r\n}\r\nexport default function ActivityListItem({activity}:Props)\r\n{\r\n \r\n\r\n    return(\r\n        <Segment.Group>\r\n            {activity.isCancelled &&\r\n                <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}}/>\r\n            }\r\n            <Segment>\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom:3}} size=\"tiny\" circular src={activity.host?.image || 'assets/user.png'}/>\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`} >\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUserName}`}> {activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>You are hosting this activity</Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost &&(\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>You are going to this activity</Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name=\"clock\"/>{format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name=\"marker\"/> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button as={Link} to={`/activities/${activity.id}`} color='teal'\r\n                floated=\"right\" content='View'/>\r\n            </Segment>\r\n        </Segment.Group>\r\n    );\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\n\r\nexport default observer( function ActivityList()\r\n{\r\n    const {activityStore} =useStore();\r\n    const {groupedActivities}=activityStore;\r\n\r\n    return(\r\n        <>\r\n            {groupedActivities.map(([group, activities])=>(\r\n                <Fragment key={group}>\r\n                    <Header sub color=\"teal\">\r\n                        {group}\r\n                    </Header>\r\n                            {activities.map(activity=>(\r\n                                <ActivityListItem key={activity.id} activity={activity}/>\r\n                            ))}\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { PagingParams } from \"../../../app/models/Pagination\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport ActivityFilter from \"./ActivityFilters\";\r\n\r\n\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard()\r\n{\r\n    const {activityStore}=useStore();\r\n    const {loadActivities, activityRegistry, setPagingParams, pagination}=activityStore;\r\n    const [loadingNext, setLoadingNext]=useState(false);\r\n\r\n    function handleGetNext()\r\n    {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.CurrentPage+1))\r\n        loadActivities().then(()=>setLoadingNext(false));\r\n    }\r\n    useEffect(()=>{\r\n      if(activityRegistry.size<=1) loadActivities();\r\n    },[loadActivities, activityRegistry.size]);\r\n  \r\n  \r\n    // if(activityStore.loadingInitials && !loadingNext) return <LoadingComponent content='App Loading'/>\r\n  \r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitials && !loadingNext?(\r\n                    <>\r\n                    <ActivityListItemPlaceholder/>\r\n                    <ActivityListItemPlaceholder/>\r\n                    </>\r\n                ):(\r\n                    <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={handleGetNext}\r\n                    hasMore={!loadingNext && !!pagination && pagination.CurrentPage<pagination.totalPages}\r\n                    initialLoad={false}\r\n                    >\r\n                    <ActivityList />\r\n    \r\n                    </InfiniteScroll>\r\n                )}\r\n\r\n                {/* <Button floated=\"right\"\r\n                content='Mare..'\r\n                positive\r\n                onClick={handleGetNext}\r\n                loading={loadingNext}\r\n                disabled={pagination?.totalPages===pagination?.CurrentPage}\r\n                /> */}\r\n\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilter/>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Loader active={loadingNext}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    type?:string;\r\n    label?:string;\r\n}\r\nexport default function MyTextInput(props:Props){\r\n    const [field, meta]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/store/Store';\r\n\r\nexport default observer( function LoginForm(){\r\n    const {userStore}=useStore();\r\n    const navigate=useNavigate()\r\n    return(\r\n        <Formik initialValues={{email:'', password:'', error:null}}\r\n        onSubmit={(value, {setErrors})=>userStore.login(value).catch(error=>setErrors({error:'Invalid email or password'}))}>\r\n            {({handleSubmit, isSubmitting, errors})=>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivity' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={()=>\r\n                        <Label style={{marginBottom:10}} basic colors='red' content={errors.error}/>}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    errors: any;\r\n}\r\nexport default function VaidationErrors({errors}:Props)\r\n{\r\n    return(\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {\r\n                        errors.map((err:any, i:any)=>(\r\n                            <Message.Item key={i}>{err}</Message.Item>\r\n                        ))\r\n                    }\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/store/Store';\r\nimport * as Yup from 'yup';\r\nimport VaidationErrors from '../error/ValidationError';\r\nexport default observer( function RegisterForm(){\r\n    const {userStore}=useStore();\r\n    const navigate=useNavigate()\r\n    return(\r\n        <Formik initialValues={{displayName:'', username:'', email:'', password:'', error:null}}\r\n        onSubmit={(value, {setErrors})=>userStore.register(value).catch(error=>\r\n            setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName:Yup.string().required(),\r\n            username:Yup.string().required(),\r\n            email:Yup.string().required().email(),\r\n            password:Yup.string().required(),\r\n        })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty})=>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivity' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='User Name'/>\r\n                    <MyTextInput name='email' placeholder='email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={()=>\r\n                       <VaidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Divider, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/registerForm\";\r\n\r\nexport default observer( function HomePage()\r\n{\r\n    const {userStore, modalStore}=useStore()\r\n    return (\r\n        <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size=\"massive\" src='/assets/logo.png' alt='logo' style={{marginBottom:12}}/>\r\n                    Reactivity\r\n                </Header>\r\n                {userStore.isLoggedIn?(\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities'/>\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activity\r\n                        </Button>\r\n                     </>\r\n                ):(\r\n                    <>\r\n                <Button onClick={()=>modalStore.openModel(<LoginForm/>)} size='huge' inverted>\r\n                    Login\r\n                </Button>\r\n                <Button onClick={()=>modalStore.openModel(<RegisterForm/>)} size='huge' inverted>\r\n                Register\r\n              </Button>\r\n              <Divider horizontal inverted>Or</Divider>\r\n              <Button loading={userStore.fbLoading} size='huge' inverted color=\"facebook\" content='Login with facebook' onClick={userStore.facebookLogin}/>\r\n              </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    inverted?:boolean,\r\n    content?:string\r\n}\r\n\r\nexport default function LoadingComponent({inverted=true, content='loading...'}: Props)\r\n{\r\n    return(\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    rows:number;\r\n    label?:string;\r\n}\r\nexport default function MyTextArea(props:Props){\r\n    const [field, meta]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    options:any;\r\n    label?:string;\r\n}\r\nexport default function MySelectInput(props:Props){\r\n    const [field, meta, helpers]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select clearable\r\n            options={props.options}\r\n            value={field.value || null}\r\n            onChange={(e,d)=>helpers.setValue(d.value)}\r\n            onBlur={()=>helpers.setTouched(true)}\r\n            placeholder={props.placeholder}\r\n            \r\n            />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions=[\r\n    {text:'Drinks', value:'drinks'},\r\n    {text:'Culture', value:'culture'},\r\n    {text:'Film', value:'film'},\r\n    {text:'Food', value:'food'},\r\n    {text:'Music', value:'music'},\r\n    {text:'Travel', value:'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    label?:string;\r\n}\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>){\r\n    const [field, meta, helpers]=useField(props.name!);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value))||null}\r\n                onChange={value=>helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { Button,  Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport {v4 as uuid} from 'uuid';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/Options/CategoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer( function ActivityForm()\r\n{\r\n    const {activityStore}=useStore();\r\n    const navigate=useNavigate();\r\n    const { createActivity, updateActivity, \r\n        loadActivity, loadingInitials}=activityStore;\r\n    const {id} = useParams<{id:string}>();\r\n    const[activity, setActivity]=useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema=Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity discription is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n    })\r\n    useEffect(()=>{\r\n        if(id) loadActivity(id).then(activity=>setActivity(new ActivityFormValues(activity)));\r\n    },[id, loadActivity])\r\n\r\n    function handleFormSubmit(activity:ActivityFormValues)\r\n    {\r\n        if(!activity.id)\r\n        {\r\n            let newActivity={\r\n                ...activity,\r\n                id:uuid()\r\n            }\r\n            createActivity(newActivity).then(()=>navigate(`/activities/${newActivity.id}`))\r\n        }\r\n        else{\r\n            updateActivity(activity).then(()=>navigate(`/activities/${activity.id}`));\r\n        }\r\n    }\r\n\r\n    // function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)\r\n    // {\r\n    //     const{name, value}=event.target;\r\n    //     setActivity({...activity, [name]:value});\r\n    // }\r\n\r\n    if(loadingInitials) return <LoadingComponent content=\"loading activity ...\"/>\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color=\"teal\"/>\r\n            <Formik \r\n            validationSchema={validationSchema}\r\n            enableReinitialize initialValues={activity} onSubmit={values =>handleFormSubmit(values)}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty})=>(\r\n                    <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\r\n                        {/* <FormField>\r\n                            <Field placeholder='Title' name='title' />\r\n                            <ErrorMessage name='title' render={error=><Label basic color='red' content={error}/>}/>\r\n                        </FormField> */}\r\n                     <MyTextInput name='title' placeholder=\"title\"/>  \r\n                    <MyTextArea rows={3} placeholder='Description'  name='description' />\r\n                    <MySelectInput options={categoryOptions} placeholder='Category'   name='category' />\r\n                   <MyDateInput placeholderText=\"Date\"\r\n                    name='date'\r\n                    showTimeSelect\r\n                    timeCaption=\"time\"\r\n                    dateFormat='MMMM d, yyyy h:mm aa'\r\n                   />\r\n                   <Header content='Location Details' sub color=\"teal\"/>\r\n                    <MyTextInput placeholder='City'  name='city' />\r\n                    <MyTextInput placeholder='Venue'  name='venue' />\r\n                    <Button \r\n                    disabled={isSubmitting || \r\n                        !isValid || !dirty}\r\n                    loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\"/>\r\n                    <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content=\"Cancel\"/>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/store/Store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns/esm';\r\ninterface Props{\r\n    activityId:string;\r\n}\r\nexport default observer(function ActivityDetailChat({activityId}:Props) {\r\n    const {commentStore}=useStore();\r\n    useEffect(()=>{\r\n        if(activityId){\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n\r\n        return ()=>{\r\n            commentStore.clearComments();\r\n        }\r\n    },[commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik onSubmit={(values, {resetForm})=>commentStore.addComment(values).then(()=>resetForm())}\r\n                    initialValues={{body:''}}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                    >\r\n                        {({isSubmitting, isValid, handleSubmit})=>(\r\n                                <Form className='ui form'>\r\n                                    <Field name='body'>\r\n                                        {(props:FieldProps)=>(\r\n                                            <div style={{position:'relative'}}>\r\n                                                <Loader active={isSubmitting}/>\r\n                                                <textarea \r\n                                                placeholder='Enter your comment (Enter shift+ enter for net line'\r\n                                                rows={2}\r\n                                                {...props.field}\r\n                                                onKeyPress={e=>{\r\n                                                    if(e.key==='Enter' && e.shiftKey)\r\n                                                        return;\r\n                                                    if(e.key==='Enter' && !e.shiftKey)\r\n                                                    {\r\n                                                        e.preventDefault();\r\n                                                        isValid && handleSubmit();\r\n                                                    }\r\n                                                }}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Field>\r\n\r\n                            </Form>\r\n                        )}\r\n\r\n                    </Formik>                \r\n                <Comment.Group>\r\n                    {\r\n                        commentStore.comments.map(comment=>(\r\n                            <Comment key={comment.id}>\r\n                                <Comment.Avatar src={comment.image ||'/assets/user.png'}/>\r\n                                <Comment.Content>\r\n                                    <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/store/Store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailHeader({activity}: Props) {\r\n    const {activityStore:{updateAttendance, loading, cancelActivityToggle}}=useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{position:'absolute', zindex:1000, left:-14, top:20 }} ribbon color='red' content='Cancelled'/>\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}> {activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost?(\r\n                    <>\r\n                        <Button color={activity.isCancelled?'green':'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled?'Re-activate Activity':'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link} to={`/manage/${activity.id}`} \r\n                        disabled={activity.isCancelled}\r\n                        color='orange' floated='right'>\r\n                        Manage Event\r\n                    </Button>\r\n                    </>\r\n                ):activity.isGoing?(\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ):(\r\n                    <Button color='teal' loading={loading} \r\n                    onClick={updateAttendance}\r\n                    disabled={activity.isCancelled}\r\n                    >Join Activity</Button>\r\n                )\r\n            }\r\n\r\n\r\n\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props{\r\n    activity:Activity;\r\n}\r\nexport default observer(function ActivityDetailSidebar ({activity: {attendees, host}}:Props) {\r\n    if(!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length===1? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee=>(\r\n                    <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                    {attendee.username===host?.username &&\r\n                    <Label\r\n                        style={{ position: 'absolute' }}\r\n                        color='orange'\r\n                        ribbon='right'\r\n                    >\r\n                        Host\r\n                    </Label>}\r\n                    <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                    <Item.Content verticalAlign='middle'>\r\n                        <Item.Header as='h3'>\r\n                            <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                        </Item.Header>\r\n                        {attendee.following && \r\n                        <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                    </Item.Content>\r\n                </Item>\r\n\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport ActivityDetailChat from \"./ActivityDetailChat\";\r\nimport ActivityDetailInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailHeader from \"./ActivityDetailHeader\";\r\nimport ActivityDetailSidebar from \"./ActivityDetailSidebar\";\r\n\r\n\r\nexport default observer( function ActivityDetails()\r\n{\r\n  const {activityStore}=useStore();\r\n  const{selectedActivity:activity, loadActivity, loadingInitials, clearSelectedActivity}=activityStore;\r\n\r\n  const {id}=useParams<{id:string}>();\r\n  useEffect(()=>{\r\n    if(id) loadActivity(id);\r\n\r\n    return()=>clearSelectedActivity();\r\n  },[id, loadActivity, clearSelectedActivity])\r\n  if(loadingInitials || !activity) return <LoadingComponent/>;\r\n    return(\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailHeader activity={activity}/>\r\n          <ActivityDetailInfo activity={activity}/>\r\n          <ActivityDetailChat activityId={activity.id}/>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailSidebar activity={activity }/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n})","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound()\r\n{\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                OOps not found\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>Go to Activities</Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../store/Store\";\r\n\r\nexport default observer (function ModalContainer(){\r\n    const {modalStore}=useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.model.open} onClose={modalStore.closeModel} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.model.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport { format } from 'date-fns';\r\n\r\nconst panes=[\r\n    {menuItem:'Future Events', pane:{key:'future'}},\r\n    {menuItem:'Past Events', pane:{key:'past'}},\r\n    {menuItem:'Hosting', pane:{key:'hosting'}},\r\n\r\n]\r\nexport default observer(function ProfileActivities(){\r\n    const {profileStore}=useStore();\r\n\r\n    const {loadUserActivities, profile, loadingActivities, userActivities}=profileStore;\r\n    useEffect(()=>{\r\n        loadUserActivities(profile!.username);\r\n    },[loadUserActivities, profile]);\r\n    const handleTabChange=(e: SyntheticEvent, data:TabProps)=>{\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calender' content={'Activities'}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab panes={panes}\r\n                    menu={{secondary: true, pointing:true}}\r\n                    onTabChange={(e,data)=>handleTabChange(e,data)}\r\n                    />\r\n                    <br/>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity:UserActivity)=>(\r\n                            <Card\r\n                            as={Link}\r\n                            to={`/activities/${activity.id}`}\r\n                            key={activity.id}>\r\n                                <Image src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{minHeight:100, objectFit:'cover'}}/>\r\n                                    <Card.Content>\r\n                                        <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                                        <Card.Meta textAlign=\"center\">\r\n                                            <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                            <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                        </Card.Meta>\r\n                                    </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n\r\n                    </Card.Group>\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowing() {\r\n    const {profileStore}=useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n\r\n\r\n    return(\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated=\"left\" icon='user' content={activeTab===3?`People following ${profile?.displayName}`:`People ${profile?.displayName} following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile=> (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react';\r\ninterface Props{\r\n    setFiles:(files:any)=>void;\r\n}\r\nexport default function PhotoWidgetDropZone({setFiles}:Props) {\r\n    const dzStyles={\r\n        border: 'dashed 3 px #eee',\r\n        borderColor:'#eee',\r\n        borderRadius: '5px',\r\n        paddingTop:'30px',\r\n        textAlign:'center' as 'center',\r\n        height:200\r\n    }\r\n\r\n    const dzActive={\r\n        borderColor:'green'\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file:any)=> Object.assign(file,{\r\n        preview:URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive?{...dzStyles, ...dzActive}: dzStyles}>\r\n      <input {...getInputProps()} />\r\n        <Icon name='upload' size='huge'/>\r\n        <Header content='Drop file here'/>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\n\r\ninterface Props{\r\n    imagePreview:string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\nexport default function PhotoWidgetCropper(\r\n    {imagePreview, setCropper}:Props\r\n)\r\n{\r\n    return(\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height:200, width:'100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropZone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    loading:boolean,\r\n    uploadPhoto:(file:Blob)=>void;\r\n}\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}:Props)\r\n{\r\n    const [files, setFiles]=useState<any>([]);\r\n    const [cropper, setCropper]=useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob=>uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            files.forEach((file:any)=>URL.revokeObjectURL(file.preview))\r\n        }\r\n    },[files]);\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropZone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize Photo'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>            \r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload'/>\r\n                {files && files.length>0 &&\r\n                <>\r\n                    <div className=\"img-preview\" style={{minHeight:200, overflow:'hidden'}} />                  \r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                        <Button disabled={loading} onClick={()=>setFiles([])} icon='close'/>\r\n                    </Button.Group>\r\n                </>}\r\n\r\n            </Grid.Column>                        \r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\nexport default observer(function ProfilePhotos({profile}:Props){\r\n    const {profileStore:{isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}}=useStore();\r\n    const [addPhotoMode, setAddPhotoMode]=useState(false);\r\n    const [target, setTarget]=useState('');\r\n    function handlePhotoUpload(file:Blob){\r\n        uploadPhoto(file).then(()=>setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo:Photo, e: SyntheticEvent<HTMLButtonElement>)\r\n    {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n    return(\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos'/>\r\n                    {isCurrentUser &&(\r\n                        <Button floated='right' basic\r\n                        content={addPhotoMode?'Cancel':'Add Photo'}\r\n                        onClick={()=>setAddPhotoMode(!addPhotoMode)}/>\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode?(\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n                    ):\r\n                    (\r\n                    <Card.Group itemsPerRow={5}>\r\n                        {profile.photos?.map(photo=>(\r\n                        <Card key={photo.id}>\r\n                            <Image src={photo.url} />\r\n                            {isCurrentUser &&(\r\n                                <Button.Group fluid widths={2}>\r\n                                    <Button basic color='green' content='Main' name={'main'+photo.id} disabled={photo.isMain}\r\n                                    loading={target=== 'main' + photo.id && loading} onClick={e=>handleSetMainPhoto(photo,e)}/>\r\n\r\n                                    <Button basic color='red' icon='trash'\r\n                                    loading={target===photo.id && loading}\r\n                                    onClick={e=>handleDeletePhoto(photo, e)}\r\n                                    disabled={photo.isMain}\r\n                                    name={photo.id}\r\n                                    />\r\n                                </Button.Group>\r\n                            )}\r\n                        </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer( function ProfileContent({profile}:Props){\r\n    const {profileStore}=useStore();\r\n    const panes=[\r\n        {menuItem:'About', render:()=><Tab.Pane>About Content</Tab.Pane>},\r\n        {menuItem:'Photos', render:()=><Tab.Pane><ProfilePhotos profile={profile}/></Tab.Pane>},\r\n        {menuItem:'Events', render:()=><ProfileActivities/>},\r\n        {menuItem:'Followers', render:()=><ProfileFollowings/>},\r\n        {menuItem:'Following', render:()=><ProfileFollowings/>},\r\n    ];\r\n\r\n    return(\r\n        <Tab\r\n            menu={{fluid:true, vertical:true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data)=>profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n        )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item,Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\nexport default observer( function ProfileHeader({profile}:Props){\r\n    return(\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size=\"small\" src={profile.image || `/assets/user.png`}/>\r\n                            <Item.Content verticalAlign=\"middle\">\r\n                                <Header as='h1' content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followerCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer( function ProfilePage(){\r\n    const {username}=useParams<{username:string}>();\r\n    const {profileStore}=useStore();\r\n    const {loadProfile, profile, setActiveTab}=profileStore;\r\n\r\n    useEffect(()=>{\r\n        loadProfile(username!);\r\n        return()=>{\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile, username,setActiveTab]);\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                <ProfileHeader profile={profile}/>\r\n                <ProfileContent profile={profile}/>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n});","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useStore } from \"../store/Store\";\r\n\r\ninterface Props{\r\n    children:any;\r\n}\r\nexport default function PrivateRoute({children}:Props){\r\n    const {userStore:{isLoggedIn}}=useStore();\r\n    return isLoggedIn ? children : <Navigate replace to='/'/>;\r\n        \r\n}","import React, { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './navbar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/error/NotFound';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../store/Store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modal/modalContainer';\nimport ProfilePage from '../../features/Profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\nfunction App() {\n  const location=useLocation();\n  const {commonStore, userStore}=useStore();\n  \n  useEffect(()=>{\n    if(commonStore.token){\n      userStore.getUser().finally(()=>commonStore.setAppLoaded());\n    }\n    else\n    {\n      userStore.getFacebookLoginStatus().then(()=>commonStore.setAppLoaded());\n    }\n  },[commonStore, userStore])\n  if(location)\n  console.log(location.key);\n\nif(!commonStore.appLoaded) return <LoadingComponent content='Loading App...'/>\n\n  return (\n    <Fragment>\n      <NavBar/>\n      <ToastContainer position='bottom-right' hideProgressBar/>\n      <ModalContainer/>\n      <Container style={{marginTop:'7em'}}>\n        <Routes>\n        <Route path='/' element={<HomePage/>}/>\n        <Route path='/activities' element={<PrivateRoute><ActivityDashboard/></PrivateRoute>}/>   \n        <Route path='/activities/:id' element={<PrivateRoute><ActivityDetails/></PrivateRoute>}/>        \n        <Route path='/createactivity' element={<PrivateRoute><ActivityForm key={location.key}/></PrivateRoute>}/>   \n        <Route path='/profiles/:username' element={<PrivateRoute><ProfilePage/></PrivateRoute>}/>\n        <Route path='/manage/:id' element={<PrivateRoute><ActivityForm key={location.key} /></PrivateRoute>}/>\n        <Route path='/login' element={<LoginForm/>}/>\n        <Route path='*' element={<NotFound/>}/>     \n        </Routes>\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop(){\r\n    const {pathname}=useLocation();\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname]);\r\n\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/store/Store';\nimport { BrowserRouter } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history=createBrowserHistory();\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <BrowserRouter>\n    <ScrollToTop/>\n    <App />\n    </BrowserRouter>\n  </StoreContext.Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}