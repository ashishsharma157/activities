{"version":3,"sources":["app/models/Pagination.ts","app/API/agent.ts","app/models/activity.ts","app/models/Profile.ts","app/store/ActivityStore.ts","app/store/CommentStore.ts","app/store/CommonStore.ts","app/store/modelStore.ts","app/store/ProfileStore.ts","app/store/UserStore.ts","app/store/Store.ts","app/layout/navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/Profiles/FollowButton.tsx","features/Profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/error/ValidationError.tsx","features/users/registerForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/Options/CategoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailHeader.tsx","features/activities/details/ActivityDetailSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/error/NotFound.tsx","app/common/modal/modalContainer.tsx","features/Profiles/ProfileActivities.tsx","features/Profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetDropZone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/Profiles/ProfilePhotos.tsx","features/Profiles/ProfileContent.tsx","features/Profiles/ProfileHeader.tsx","features/Profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","Object","createClass","data","pagination","classCallCheck","this","PagingParams","pageNumber","arguments","length","undefined","pageSize","pagenumber","PageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","concat","response","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","JSON","parse","abrupt","stop","_x","apply","error","_ref2","status","method","errors","hasOwnProperty","modelStateErrors","key","push","flat","toast","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","Content-type","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Activity","init","assign","ActivityFormValues","title","category","description","date","city","venue","Profile","userName","displayName","image","ActivityStore","_this","activityRegistry","Map","selectedActivity","editMode","loading","submitting","loadingInitials","pagingParams","set","setPagingParams","setPredicate","value","resetPrediciate","forEach","loadActivities","result","axiosParams","sent","runInAction","setActivity","setPagination","t0","console","log","loadActivity","_callee2","_context2","getActivity","_activity$attendees","userStore","isGoing","attendees","some","isHost","hostUserName","host","find","x","Date","createActivity","_ref3","_callee3","attendee","newActivity","_context3","_x2","updateActivity","_ref4","_callee4","_context4","objectSpread2","_x3","deleteActivity","_ref5","_callee5","_context5","_x4","updateAttendance","_callee6","_context6","_this$selectedActivit","_this$selectedActivit2","filter","_this$selectedActivit3","_this$selectedActivit4","finish","cancelActivityToggle","_callee7","_context7","_this$selectedActivit5","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followerCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activityByDate","reduce","activities","format","toConsumableArray","CommentStore","comments","hubConnection","createHubConnection","activityId","activityStore","HubConnectionBuilder","withUrl","accessTokenFactory","_store$userStore$user","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","_this$hubConnection","clearComments","addComment","_store$activityStore$","_this$hubConnection2","invoke","CommonStore","window","localStorage","getItem","appLoaded","setServerError","setToken","setAppLoaded","setItem","removeItem","ModelStore","model","open","openModel","content","closeModel","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","_this$profile$photos","photos","isMain","setImage","p","_this$profile$photos2","_store$userStore$user2","followingCount","_x5","_x6","loadFollowing","_ref6","_x7","loadUserActivities","_ref7","_x8","_x9","UserStore","creds","modalStore","history","logout","getUser","profileStore","commentStore","StoreContext","createContext","useStore","useContext","observer","_useStore$userStore","react_default","createElement","Menu","inverted","fixed","Container","Item","as","NavLink","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","_useStore$activitySto","Fragment","vertical","size","width","marginTop","Header","attached","color","active","has","esm","onChange","_userStore$user","_useStore","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","bio","extra","Icon","Profiles_FollowButton","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","Profiles_ProfileCard","ActivityListItem","_activity$host","_activity$host2","Segment","Group","Label","textAlign","marginBottom","react_router_dom","secondary","dashboard_ActivityListItemAttendee","clearing","floated","groupedActivities","slicedToArray","group","react","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","_useState","useState","_useState2","loadingNext","setLoadingNext","useEffect","Grid","Column","react_infinite_scroller_default","pageStart","loadMore","CurrentPage","hasMore","totalPages","initialLoad","dashboard_ActivityList","ActivityFilters","Loader","MyTextInput","props","_useField","useField","_useField2","field","meta","Form","Field","touched","label","useNavigate","formik_esm","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","colors","VaidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","users_LoginForm","registerForm","LoadingComponent","_ref$inverted","_ref$content","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","react_datepicker_min_default","selected","navigate","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zindex","top","ribbon","_ref$activity","relaxed","divided","Extra","details_ActivityDetailHeader","ActivityDetailedInfo","details_ActivityDetailChat","details_ActivityDetailSidebar","NotFound","Inline","primary","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetDropZone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","react_cropper_es","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","_useState3","_useState4","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","_profile$photos","_useStore$profileStor","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","Profiles_ProfilePhotos","Profiles_ProfileActivities","ProfileFollowings","menuPosition","Statistic","Divider","Profiles_ProfileHeader","Profiles_ProfileContent","PrivateRoute","children","react_router","replace","location","useLocation","finally","navbar","react_toastify_esm","hideProgressBar","modalContainer","path","element","home_HomePage","dashboard_ActivityDashboard","details_ActivityDetails","form_ActivityForm","Profiles_ProfilePage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","Provider","layout_App","document","getElementById"],"mappings":"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","file":"static/js/main.1518e853.chunk.js","sourcesContent":["export interface Pagination{\r\n    CurrentPage:number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data:T;\r\n    pagination:Pagination;\r\n\r\n    constructor(data: T, pagination:Pagination)\r\n    {\r\n        this.data=data;\r\n        this.pagination=pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams{\r\n    pagenumber;\r\n    PageSize;\r\n    \r\n    constructor(pageNumber=1, pageSize=2)\r\n    {\r\n        this.pagenumber=pageNumber;\r\n        this.PageSize=pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Activity, ActivityFormValues} from '../models/activity';\r\nimport { PaginatedResult } from \"../models/Pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"../store/Store\";\r\n\r\nconst sleep=(delay:number) =>{\r\n    return new Promise ((resolve)=>{\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\n\r\naxios.defaults.baseURL=process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config=>{\r\n    const token=store.commonStore.token;\r\n    if(token) config.headers!.Authorization=`Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response=>{\r\n        if(process.env.NODE_ENV === 'development') await sleep(1000);\r\n        const pagination=response.headers['pagination'];\r\n        if(pagination){\r\n            response.data=new PaginatedResult(response.data, JSON.parse(pagination));\r\n            return response as AxiosResponse<PaginatedResult<any>>;\r\n        }\r\n        return response;\r\n\r\n}, (error:AxiosError)=>{\r\n    const {data, status, config}=error.response!;\r\n    switch(status){\r\n        case 400:\r\n            if(config.method ==='get' && data.errors.hasOwnProperty('id')){\r\n                //history.push('not-found')\r\n            }\r\n            if(data.errors)\r\n            {\r\n                const modelStateErrors=[];\r\n                for(const key in data.errors)\r\n                {\r\n                    if(data.errors[key])\r\n                    {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }    \r\n                throw modelStateErrors.flat();\r\n            }\r\n            else\r\n            {\r\n                toast.error(data);\r\n            }\r\n            break\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            toast.error('not found');\r\n            break;\r\n        case 500:\r\n            toast.error('server error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\nconst responseBody= <T>(response: AxiosResponse<T>)=>response.data;\r\n\r\nconst requests={\r\n    get: <T>(url:string)=>axios.get<T>(url).then(responseBody),\r\n    post: <T> (url:string, body:{})=>axios.post<T>(url, body).then(responseBody),\r\n    put:<T> (url:string, body:{})=>axios.put<T>(url, body).then(responseBody),\r\n    delete: <T>(url:string)=>axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities={\r\n    list: (params:URLSearchParams)=>axios.get<PaginatedResult<Activity[]>>('/activities',{params}).then(responseBody),\r\n    details: (id:string)=>requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity:ActivityFormValues)=>requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues)=>requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id:string)=>requests.delete<void>(`/activities/${id}`),\r\n    attend: (id:string)=>requests.post<void>(`/activities/${id}/attend`,{})\r\n}\r\n\r\nconst Account={\r\n    current:()=> requests.get<User>('/account'),\r\n    login:(user:UserFormValues)=>requests.post<User>('/account/login', user),\r\n    register:(user:UserFormValues)=>requests.post<User>('/account/register', user)\r\n}\r\n\r\nconst Profiles= {\r\n    get: (username: string)=> requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto:(file:Blob)=>{\r\n        let formData=new FormData();\r\n        formData.append('File', file);\r\n        return axios.post<Photo>('photos', formData,{\r\n            headers:{'Content-type':'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto:(id:string)=>requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto:(id:string)=>requests.delete(`/photos/${id}`),\r\n    updateFollowing:(username:string)=>requests.post(`/follow/${username}`,{}),\r\n    listFollowings:(username:string, predicate:string)=>requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities:(username:string, predicate:string)=>requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\nconst agent={\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n        id: string;\r\n        title: string;\r\n        date: Date | null;\r\n        description: string;\r\n        category: string;\r\n        city: string;\r\n        venue: string;\r\n        hostUserName:string;\r\n        isCancelled:boolean;\r\n        isGoing:boolean;\r\n        isHost:boolean;\r\n        host?:Profile;\r\n        attendees: Profile[]\r\n    }\r\n\r\n    export class Activity implements Activity{\r\n        constructor(init?:ActivityFormValues){\r\n            Object.assign(this, init);\r\n        }\r\n    }\r\n    \r\n    export class ActivityFormValues{\r\n        id?: string=undefined\r\n        title:string='';\r\n        category:string='';\r\n        description:string='';\r\n        date:Date | null=null;\r\n        city: string='';\r\n        venue:string='';\r\n\r\n        constructor(activity?:ActivityFormValues){\r\n            if(activity){\r\n                this.id=activity.id;\r\n                this.title=activity.description;\r\n                this.category=activity.category;\r\n                this.description=activity.description;\r\n                this.date=activity.date;\r\n                this.venue=activity.venue;\r\n                this.city=activity.city;\r\n            }\r\n        }\r\n    }","import { User } from \"./User\";\r\n\r\nexport interface Profile{\r\n    username:string;\r\n    displayName:string;\r\n    image?:string;\r\n    bio?:string;\r\n    followerCount:number;\r\n    followingCount:number;\r\n    following:boolean;\r\n    photos?:Photo[];\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user:User)\r\n    {\r\n        this.username=user.userName;\r\n        this.displayName=user.displayName;\r\n        this.image=user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo\r\n{\r\n    id: string;\r\n    url: string;\r\n    isMain:boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n   }","import { format } from \"date-fns\";\r\nimport {  makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../API/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/Pagination\";\r\nimport { Profile } from \"../models/Profile\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class ActivityStore{\r\n    activityRegistry=new Map<string, Activity>();\r\n    selectedActivity:Activity | undefined=undefined;\r\n    editMode=false;\r\n    loading=false;\r\n    submitting=false;\r\n    loadingInitials=false;\r\n    pagination: Pagination | null=null;\r\n    pagingParams=new PagingParams();\r\n    predicate=new Map().set('all', true);\r\n  \r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            ()=>this.predicate.keys(),\r\n            ()=>{this.pagingParams=new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    setPagingParams=(pagingParams: PagingParams)=>{\r\n        this.pagingParams=pagingParams;\r\n    }\r\n\r\n    setPredicate=(predicate:string, value: string|Date)=>{\r\n        const resetPrediciate=()=>{\r\n            this.predicate.forEach((value, key)=>{\r\n                if(key!=='startDate') this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch(predicate)\r\n        {\r\n            case 'all':\r\n                resetPrediciate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                resetPrediciate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPrediciate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n                break;\r\n        }\r\n    }\r\n\r\n   get axiosParams() {\r\n       const params=new URLSearchParams();\r\n       params.append('pageNumber', this.pagingParams.pagenumber.toString());\r\n       params.append('pageSize', this.pagingParams.PageSize.toString());\r\n       this.predicate.forEach((value, key)=>{\r\n           if(key==='startDate')\r\n           {\r\n               params.append(key, (value as Date).toISOString());\r\n           }\r\n           else\r\n           {\r\n               params.append(key, value);\r\n           }\r\n       })\r\n       return params;\r\n   }\r\n    get activityByDate(){\r\n        return Array.from(this.activityRegistry.values()).sort((a,b)=>\r\n        a.date!.getTime()-b.date!.getTime());\r\n\r\n    }\r\n\r\n    get groupedActivities(){\r\n        return Object.entries(\r\n            this.activityByDate.reduce((activities, activity)=>{\r\n                const date = format(activity.date!, 'dd MMM yyyy');\r\n                activities[date]=activities[date]?[...activities[date], activity]:[activity];\r\n                return activities;\r\n            }, {} as {[key:string]:Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities= async ()=>{\r\n        this.loadingInitials=true;\r\n        try{\r\n            const result=await agent.Activities.list(this.axiosParams);\r\n            runInAction(()=>{\r\n                result.data.forEach(activity => {\r\n                    this.setActivity(activity);\r\n                  });\r\n                this.setPagination(result.pagination);  \r\n                this.loadingInitials=false;\r\n            })\r\n        }catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loadingInitials=false;\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    setPagination=(pagination:Pagination)=>{\r\n        this.pagination=pagination;\r\n    }\r\n\r\n    loadActivity=async (id:string)=>{\r\n        let activity=this.getActivity(id);\r\n        if(activity)\r\n        {\r\n            this.selectedActivity=activity;\r\n            return activity;\r\n        }\r\n        else\r\n        {\r\n            this.loadingInitials=true;\r\n            try{\r\n                    activity=await agent.Activities.details(id);\r\n                    this.setActivity(activity);\r\n                    runInAction(()=>{\r\n                    this.selectedActivity=activity;\r\n                    })\r\n                    this.loadingInitials=false;\r\n                    return activity;\r\n            }catch(error)\r\n            {\r\n                console.log(error);\r\n                this.loadingInitials=false;\r\n            }\r\n\r\n        }\r\n    }\r\n    private setActivity=(activity:Activity)=>{\r\n        const user=store.userStore.user;\r\n        if(user)\r\n        {\r\n            activity.isGoing=activity.attendees!.some(a=>a.username===user.userName);\r\n            activity.isHost=activity.hostUserName===user.userName;\r\n            activity.host=activity.attendees?.find(x=>x.username===activity.hostUserName);\r\n        }\r\n        activity.date=new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n    private getActivity=(id: string)=>\r\n    {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n    \r\n\r\n\r\n    createActivity=async (activity:ActivityFormValues)=>{\r\n        const user=store.userStore.user;\r\n        const attendee=new Profile(user!);\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Activities.create(activity);\r\n            const newActivity=new Activity(activity);\r\n        newActivity.hostUserName=user!.userName;\r\n        newActivity.attendees=[attendee];\r\n        this.setActivity(newActivity);\r\n            runInAction(()=>{\r\n                this.selectedActivity=newActivity;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    updateActivity=async (activity:ActivityFormValues)=>{\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Activities.update(activity);\r\n            runInAction(()=>{\r\n                //this.Activities.filter(x=>x.id!==activity.id);\r\n                //this.Activities.push(activity);\r\n                if(activity.id){\r\n                    let updateActivity={...this.getActivity(activity.id), ...activity};\r\n                    this.activityRegistry.set(activity.id, updateActivity as Activity);\r\n                    this.selectedActivity=updateActivity as Activity;\r\n                }\r\n          \r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n    }\r\n    deleteActivity=async (id:string)=>{\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Activities.delete(id);\r\n            runInAction(()=>{\r\n                this.activityRegistry.delete(id);\r\n                this.loading=false;                \r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loading=false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance=async()=>{\r\n        const user=store.userStore.user;\r\n        this.loading=true;\r\n        try{\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                if(this.selectedActivity?.isGoing){\r\n                    this.selectedActivity.attendees=this.selectedActivity.attendees?.filter(a=> a.username!==user?.userName);\r\n                    this.selectedActivity.isGoing=false;\r\n                }\r\n                else{\r\n                    const attendee=new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing=true;\r\n                }\r\n\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n        finally{\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle=async()=>{\r\n        this.loading=true;\r\n        try{\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                this.selectedActivity!.isCancelled=!this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n        finally{\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity=()=>{\r\n        this.selectedActivity=undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing=(username:string)=>\r\n    {\r\n        this.activityRegistry.forEach(activity=>{\r\n            activity.attendees.forEach(attendee=>{\r\n                if(attendee.username===username)\r\n                {\r\n                    attendee.following?attendee.followerCount--: attendee.followerCount++;\r\n                    attendee.following=!attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class CommentStore{\r\n    comments:ChatComment[]=[];\r\n    hubConnection:HubConnection | null=null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection=(activityId:string)=>{\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection=new HubConnectionBuilder().withUrl(process.env.REACT_APP_CHAT_URL + '?activityId='+activityId,{\r\n                accessTokenFactory:()=>store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n            \r\n            this.hubConnection.start().catch(error=>console.log('Error estabilising the connection ', error));\r\n\r\n            this.hubConnection.on('LoadComments',(comments:ChatComment[])=>{\r\n                runInAction(()=>{\r\n                    comments.forEach(comment=>{\r\n                        comment.createdAt=new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments=comments});\r\n            })\r\n\r\n            this.hubConnection.on('ReceiveComment',(comment:ChatComment)=>{\r\n                runInAction(()=>{\r\n                    comment.createdAt=new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)})\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection=()=>{\r\n        this.hubConnection?.stop().catch(error=>console.log('error stopping connection', error));\r\n    }\r\n\r\n    clearComments=()=>{\r\n        this.comments=[];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment=async(values:any)=>{\r\n        values.activityId=store.activityStore.selectedActivity?.id;\r\n        try{\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore{\r\n    error:ServerError|null=null;\r\n    token:string|null=window.localStorage.getItem('jwt');\r\n    appLoaded=false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            ()=>this.token,\r\n            token=>{\r\n                if(token)\r\n                {\r\n                    window.localStorage.setItem('jwt', token);\r\n                }\r\n                else\r\n                {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            }\r\n        )\r\n    }\r\n    setServerError=(error:ServerError)=>{\r\n        this.error=error;\r\n    }\r\n\r\n    setToken=(token:string|null)=>{\r\n        //if(token) window.localStorage.setItem('jwt', token);\r\n        this.token=token;\r\n    }\r\n\r\n    setAppLoaded=()=>{\r\n        this.appLoaded=true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal\r\n{\r\n    open:boolean;\r\n    body:JSX.Element| null;\r\n}\r\nexport default class ModelStore\r\n{\r\n    model: Modal={\r\n        open:false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModel=(content:JSX.Element)=>{\r\n        this.model.open=true;\r\n        this.model.body=content;\r\n    }\r\n\r\n    closeModel=()=>{\r\n        this.model.open=false;\r\n        this.model.body=null;\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../API/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class ProfileStore{\r\n    profile:Profile|null=null;\r\n    loadingProfile=false;\r\n    uploading=false;\r\n    loading=false;\r\n    followings:Profile[]=[];\r\n    loadingFollowings=false;\r\n    activeTab=0;\r\n    userActivities:UserActivity[]=[];\r\n    loadingActivities=false;\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            ()=> this.activeTab,\r\n                activeTab=>{\r\n                if(activeTab===3 || this.activeTab===4){\r\n                    const predicate=this.activeTab===3? \"followers\":\"Following\";\r\n                    this.loadFollowing(predicate);\r\n                }\r\n                else{\r\n                    this.followings=[];\r\n                }\r\n        })\r\n    }\r\n    setActiveTab=(activeTab:any)=>{\r\n        this.activeTab=activeTab;\r\n    }\r\n    get isCurrentUser(){\r\n        if(store.userStore.user && this.profile){\r\n            return store.userStore.user.userName===this.profile.username;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadProfile=async (username: string)=>{\r\n        this.loadingProfile=true;\r\n        try{\r\n            const profile=await agent.Profiles.get(username);\r\n            runInAction(()=>{\r\n                this.profile=profile;\r\n                this.loadingProfile=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingProfile=false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async(file: Blob)=>{\r\n        this.uploading=true;\r\n        try{\r\n            const response=await agent.Profiles.uploadPhoto(file);\r\n            const photo=response.data;\r\n            runInAction(()=>{\r\n                if(this.profile){\r\n                    this.profile.photos?.push(photo);\r\n                    if(photo.isMain && store.userStore.user){\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image=photo.url;\r\n                    }\r\n                }\r\n                this.uploading=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.uploading=false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto=async(photo: Photo)=>{\r\n        this.loading=true;\r\n        try{\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(()=>{\r\n                if(this.profile && this.profile.photos){\r\n                    this.profile.photos.find(p=>p.isMain)!.isMain=false;\r\n                    this.profile.photos.find(p=>p.id===photo.id)!.isMain=true;\r\n                    this.profile.image=photo.url;\r\n                    this.loading=false;\r\n                }\r\n            })\r\n        }catch(error){\r\n            runInAction(()=>this.loading=false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deletePhoto=async (photo:Photo)=>{\r\n        this.loading=true;\r\n        try{\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(()=>{\r\n                if(this.profile){\r\n                    this.profile.photos=this.profile.photos?.filter(p=>p.id!==photo.id);\r\n                    this.loading=false;\r\n                }\r\n            })\r\n        }\r\n        catch(error){\r\n            runInAction(()=>this.loading=false);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateFollowing=async (username:string, following:boolean)=>{\r\n        this.loading=true;\r\n        try\r\n        {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(()=>{\r\n                if(this.profile && this.profile.username!==store.userStore.user?.userName && this.profile.username===username){\r\n                    following?this.profile.followerCount++ : this.profile.followerCount--;\r\n                    this.profile.following=!this.profile.following;\r\n                }\r\n                if(this.profile && this.profile.username===store.userStore.user?.userName){\r\n                    following?this.profile.followingCount++:this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile=>{\r\n                    if(profile.username===username)\r\n                    {\r\n                        profile.following?profile.followerCount--: profile.followerCount++;\r\n                        profile.following=!profile.following;\r\n                    }\r\n                })\r\n\r\n                this.loading=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    loadFollowing=async(predicate:string)=>{\r\n        this.loadingFollowings=true;\r\n\r\n        try{\r\n            const following=await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(()=>{\r\n                this.followings=following;\r\n                this.loadingFollowings=false;\r\n\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingFollowings=false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities =async (username:string, predicate?:string) => {\r\n        this.loadingActivities=true;\r\n        try\r\n        {\r\n            const activities=await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(()=>{\r\n                this.userActivities=activities;\r\n                this.loadingActivities=false;\r\n            })\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>this.loadingActivities=false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../API/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./Store\";\r\n\r\nexport default class UserStore{\r\n    user:User|null=null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login=async (creds:UserFormValues)=>{\r\n        try{\r\n            const user=await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(()=> this.user=user);\r\n            store.modalStore.closeModel();\r\n            return history.push('/activities')\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout=()=>{\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user=null;\r\n        return history.push('/');\r\n    }\r\n\r\n    getUser=async()=>{\r\n        try{\r\n            const user=await agent.Account.current();\r\n            runInAction(()=>this.user=user);\r\n        }catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register=async (creds:UserFormValues)=>{\r\n        try{\r\n            const user=await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(()=> this.user=user);\r\n            store.modalStore.closeModel();\r\n            return history.push('/activities')\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage=(image:string)=>{\r\n        if(this.user) this.user.image=image;\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\nimport CommentStore from \"./CommentStore\";\r\nimport CommonStore from \"./CommonStore\";\r\nimport ModelStore from \"./modelStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport UserStore from \"./UserStore\";\r\n\r\ninterface Store{\r\n    activityStore:ActivityStore;\r\n    commonStore:CommonStore;\r\n    userStore:UserStore;\r\n    modalStore:ModelStore;\r\n    profileStore:ProfileStore;\r\n    commentStore:CommentStore;\r\n}\r\n\r\nexport const store:Store={\r\n    activityStore:new ActivityStore(),\r\n    commonStore:new CommonStore(),\r\n    userStore:new UserStore(),\r\n    modalStore:new ModelStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore:new CommentStore()\r\n}\r\n\r\nexport const StoreContext=createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../store/Store\";\r\n\r\nexport default observer( function NavBar(){\r\n    const {userStore:{user, logout}}=useStore()\r\n    return(        \r\n    <Menu inverted fixed='top'>\r\n        <Container>\r\n            <Menu.Item as={NavLink} to='/' header>\r\n                <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight:10}}/>\r\n                Reactivity\r\n            </Menu.Item>\r\n            <Menu.Item as={NavLink} to='/activities' name='Activities'/>\r\n            <Menu.Item>\r\n                <Button as={NavLink} to='/createactivity' positive content='Create Activity'/>\r\n            </Menu.Item>\r\n            <Menu.Item position='right'>\r\n                <Image src={user?.image || 'assets/user.png'} avatar spaced='right'/>\r\n                <Dropdown pointing='top left' text={user?.displayName}>\r\n                    <Dropdown.Menu>\r\n                    <Dropdown.Item as={Link} to={`/profiles/${user?.userName}`} text='My Profile' icon='user'/>\r\n                    <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Menu.Item>\r\n        </Container>\r\n        </Menu>\r\n    );\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\n\r\nexport default observer(function ActivityFilter(){\r\n    const {activityStore:{predicate, setPredicate}}=useStore();\r\n    return(\r\n        <>\r\n        <Menu vertical size=\"large\" style={{width:'100%', marginTop:25}}>\r\n            <Header icon='filter' attached color='teal' content='Filters'/>\r\n            <Menu.Item \r\n                content='All Activities'\r\n                active={predicate.has('all')}\r\n                onClick={()=>setPredicate('all', 'true')}\r\n            />\r\n            <Menu.Item content=\"I'm Going\"\r\n                active={predicate.has('isGoing')}\r\n                onClick={()=>setPredicate('isGoing', 'true')}\r\n            />\r\n            <Menu.Item \r\n            content=\"I'm Hosting\"\r\n            active={predicate.has('isHost')}\r\n            onClick={()=>setPredicate('isHost', 'true')}            \r\n            />\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar\r\n            onChange={(date: Date)=>setPredicate('startDate', date as Date)}\r\n            value={predicate.get('startDate')|| new Date()}\r\n        />\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React,{ SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({profile}:Props){\r\n    const {profileStore, userStore}=useStore();\r\n\r\n    const {updateFollowing, loading}=profileStore;\r\n    if(userStore.user?.userName === profile.username) return null;\r\n\r\n    function handleFollow(e:SyntheticEvent, username:string)\r\n    {\r\n        e.preventDefault();\r\n        profile.following?updateFollowing(username, false): updateFollowing(username, true);\r\n    }\r\n    return(\r\n        <Reveal animated=\"move\">\r\n        <Reveal.Content visible style={{width:'100%'}}>\r\n            <Button \r\n            fluid \r\n            color=\"teal\" \r\n            content={profile.following?'Following':'Not Following'}/>\r\n        </Reveal.Content>\r\n        <Reveal.Content hidden style={{width:'100%'}}>\r\n            <Button \r\n                basic \r\n                fluid\r\n                color={profile.following?'red':'green'} \r\n                content={profile.following?'UnFollow':'Follow'}\r\n                loading={loading}\r\n                onClick={(e)=>handleFollow(e,profile.username)}/>\r\n        </Reveal.Content>\r\n    </Reveal>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}:Props){\r\n    return (\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n            <Image src={profile.image || '/assets/user.png'}/>\r\n            <Card.Content>\r\n                <Card.Header>{profile.displayName}</Card.Header>\r\n                <Card.Description>{profile.bio}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user'/>\r\n                {profile.followerCount}\r\n            </Card.Content>\r\n            <FollowButton profile={profile}/>\r\n        </Card>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport ProfileCard from \"../../Profiles/ProfileCard\";\r\n\r\ninterface Props{\r\n    attendees:Profile[];\r\n}\r\nexport default observer(function ActivityListItemAttendee({attendees}:Props)\r\n{\r\n    const style={\r\n        borderColor: 'orange',\r\n        borderWidth: 3\r\n    }\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee=>(\r\n                            <Popup hoverable key={attendee.username}\r\n                            trigger={\r\n                           <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                           <Image \r\n                                size='mini' circular src={attendee.image ||'/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following? style:null}/>\r\n                       </List.Item> }\r\n                       >\r\n                           <Popup.Content>\r\n                               <ProfileCard profile={attendee}/>\r\n                           </Popup.Content>\r\n                       </Popup>\r\n            ))}\r\n                       \r\n        </List>\r\n    )\r\n})","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\n\r\ninterface Props{\r\n    activity:Activity;\r\n}\r\nexport default function ActivityListItem({activity}:Props)\r\n{\r\n \r\n\r\n    return(\r\n        <Segment.Group>\r\n            {activity.isCancelled &&\r\n                <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}}/>\r\n            }\r\n            <Segment>\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{marginBottom:3}} size=\"tiny\" circular src={activity.host?.image || 'assets/user.png'}/>\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`} >\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUserName}`}> {activity.host?.displayName}</Link></Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>You are hosting this activity</Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost &&(\r\n                                <Item.Description>\r\n                                    <Label basic color='green'>You are going to this activity</Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name=\"clock\"/>{format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name=\"marker\"/> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button as={Link} to={`/activities/${activity.id}`} color='teal'\r\n                floated=\"right\" content='View'/>\r\n            </Segment>\r\n        </Segment.Group>\r\n    );\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\n\r\nexport default observer( function ActivityList()\r\n{\r\n    const {activityStore} =useStore();\r\n    const {groupedActivities}=activityStore;\r\n\r\n    return(\r\n        <>\r\n            {groupedActivities.map(([group, activities])=>(\r\n                <Fragment key={group}>\r\n                    <Header sub color=\"teal\">\r\n                        {group}\r\n                    </Header>\r\n                            {activities.map(activity=>(\r\n                                <ActivityListItem key={activity.id} activity={activity}/>\r\n                            ))}\r\n                </Fragment>\r\n            ))}\r\n        </>\r\n\r\n    )\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { PagingParams } from \"../../../app/models/Pagination\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport ActivityFilter from \"./ActivityFilters\";\r\n\r\n\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard()\r\n{\r\n    const {activityStore}=useStore();\r\n    const {loadActivities, activityRegistry, setPagingParams, pagination}=activityStore;\r\n    const [loadingNext, setLoadingNext]=useState(false);\r\n\r\n    function handleGetNext()\r\n    {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.CurrentPage+1))\r\n        loadActivities().then(()=>setLoadingNext(false));\r\n    }\r\n    useEffect(()=>{\r\n      if(activityRegistry.size<=1) loadActivities();\r\n    },[loadActivities, activityRegistry.size]);\r\n  \r\n  \r\n    // if(activityStore.loadingInitials && !loadingNext) return <LoadingComponent content='App Loading'/>\r\n  \r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitials && !loadingNext?(\r\n                    <>\r\n                    <ActivityListItemPlaceholder/>\r\n                    <ActivityListItemPlaceholder/>\r\n                    </>\r\n                ):(\r\n                    <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={handleGetNext}\r\n                    hasMore={!loadingNext && !!pagination && pagination.CurrentPage<pagination.totalPages}\r\n                    initialLoad={false}\r\n                    >\r\n                    <ActivityList />\r\n    \r\n                    </InfiniteScroll>\r\n                )}\r\n\r\n                {/* <Button floated=\"right\"\r\n                content='Mare..'\r\n                positive\r\n                onClick={handleGetNext}\r\n                loading={loadingNext}\r\n                disabled={pagination?.totalPages===pagination?.CurrentPage}\r\n                /> */}\r\n\r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilter/>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Loader active={loadingNext}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    type?:string;\r\n    label?:string;\r\n}\r\nexport default function MyTextInput(props:Props){\r\n    const [field, meta]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/store/Store';\r\n\r\nexport default observer( function LoginForm(){\r\n    const {userStore}=useStore();\r\n    const navigate=useNavigate()\r\n    return(\r\n        <Formik initialValues={{email:'', password:'', error:null}}\r\n        onSubmit={(value, {setErrors})=>userStore.login(value).catch(error=>setErrors({error:'Invalid email or password'}))}>\r\n            {({handleSubmit, isSubmitting, errors})=>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Login to Reactivity' color='teal' textAlign='center' />\r\n                    <MyTextInput name='email' placeholder='Email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={()=>\r\n                        <Label style={{marginBottom:10}} basic colors='red' content={errors.error}/>}\r\n                    />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    errors: any;\r\n}\r\nexport default function VaidationErrors({errors}:Props)\r\n{\r\n    return(\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {\r\n                        errors.map((err:any, i:any)=>(\r\n                            <Message.Item key={i}>{err}</Message.Item>\r\n                        ))\r\n                    }\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/store/Store';\r\nimport * as Yup from 'yup';\r\nimport VaidationErrors from '../error/ValidationError';\r\nexport default observer( function RegisterForm(){\r\n    const {userStore}=useStore();\r\n    const navigate=useNavigate()\r\n    return(\r\n        <Formik initialValues={{displayName:'', username:'', email:'', password:'', error:null}}\r\n        onSubmit={(value, {setErrors})=>userStore.register(value).catch(error=>\r\n            setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName:Yup.string().required(),\r\n            username:Yup.string().required(),\r\n            email:Yup.string().required().email(),\r\n            password:Yup.string().required(),\r\n        })}\r\n        >\r\n            {({handleSubmit, isSubmitting, errors, isValid, dirty})=>(\r\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                    <Header as='h2' content='Sign up to Reactivity' color='teal' textAlign='center' />\r\n                    <MyTextInput name='displayName' placeholder='Display Name'/>\r\n                    <MyTextInput name='username' placeholder='User Name'/>\r\n                    <MyTextInput name='email' placeholder='email'/>\r\n                    <MyTextInput name='password' placeholder='Password' type='password'/>\r\n                    <ErrorMessage name='error' render={()=>\r\n                       <VaidationErrors errors={errors.error}/>}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/registerForm\";\r\n\r\nexport default observer( function HomePage()\r\n{\r\n    const {userStore, modalStore}=useStore()\r\n    return (\r\n        <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size=\"massive\" src='/assets/logo.png' alt='logo' style={{marginBottom:12}}/>\r\n                    Reactivity\r\n                </Header>\r\n                {userStore.isLoggedIn?(\r\n                    <>\r\n                        <Header as='h2' inverted content='Welcome to Reactivities'/>\r\n                        <Button as={Link} to='/activities' size='huge' inverted>\r\n                            Go to Activity\r\n                        </Button>\r\n                     </>\r\n                ):(\r\n                    <>\r\n                <Button onClick={()=>modalStore.openModel(<LoginForm/>)} size='huge' inverted>\r\n                    Login\r\n                </Button>\r\n                <Button onClick={()=>modalStore.openModel(<RegisterForm/>)} size='huge' inverted>\r\n                Register\r\n              </Button>\r\n              </>\r\n                )}\r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    inverted?:boolean,\r\n    content?:string\r\n}\r\n\r\nexport default function LoadingComponent({inverted=true, content='loading...'}: Props)\r\n{\r\n    return(\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    rows:number;\r\n    label?:string;\r\n}\r\nexport default function MyTextArea(props:Props){\r\n    const [field, meta]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    options:any;\r\n    label?:string;\r\n}\r\nexport default function MySelectInput(props:Props){\r\n    const [field, meta, helpers]=useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select clearable\r\n            options={props.options}\r\n            value={field.value || null}\r\n            onChange={(e,d)=>helpers.setValue(d.value)}\r\n            onBlur={()=>helpers.setTouched(true)}\r\n            placeholder={props.placeholder}\r\n            \r\n            />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions=[\r\n    {text:'Drinks', value:'drinks'},\r\n    {text:'Culture', value:'culture'},\r\n    {text:'Film', value:'film'},\r\n    {text:'Food', value:'food'},\r\n    {text:'Music', value:'music'},\r\n    {text:'Travel', value:'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\ninterface Props{\r\n    placeholder:string;\r\n    name:string;\r\n    label?:string;\r\n}\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>){\r\n    const [field, meta, helpers]=useField(props.name!);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value))||null}\r\n                onChange={value=>helpers.setValue(value)}\r\n            />\r\n            {meta.touched && meta.error?(\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ):null}\r\n        </Form.Field>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { Button,  Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport {v4 as uuid} from 'uuid';\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/Options/CategoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer( function ActivityForm()\r\n{\r\n    const {activityStore}=useStore();\r\n    const navigate=useNavigate();\r\n    const { createActivity, updateActivity, \r\n        loadActivity, loadingInitials}=activityStore;\r\n    const {id} = useParams<{id:string}>();\r\n    const[activity, setActivity]=useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema=Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity discription is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required(),\r\n    })\r\n    useEffect(()=>{\r\n        if(id) loadActivity(id).then(activity=>setActivity(new ActivityFormValues(activity)));\r\n    },[id, loadActivity])\r\n\r\n    function handleFormSubmit(activity:ActivityFormValues)\r\n    {\r\n        if(!activity.id)\r\n        {\r\n            let newActivity={\r\n                ...activity,\r\n                id:uuid()\r\n            }\r\n            createActivity(newActivity).then(()=>navigate(`/activities/${newActivity.id}`))\r\n        }\r\n        else{\r\n            updateActivity(activity).then(()=>navigate(`/activities/${activity.id}`));\r\n        }\r\n    }\r\n\r\n    // function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)\r\n    // {\r\n    //     const{name, value}=event.target;\r\n    //     setActivity({...activity, [name]:value});\r\n    // }\r\n\r\n    if(loadingInitials) return <LoadingComponent content=\"loading activity ...\"/>\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color=\"teal\"/>\r\n            <Formik \r\n            validationSchema={validationSchema}\r\n            enableReinitialize initialValues={activity} onSubmit={values =>handleFormSubmit(values)}>\r\n                {({handleSubmit, isValid, isSubmitting, dirty})=>(\r\n                    <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\r\n                        {/* <FormField>\r\n                            <Field placeholder='Title' name='title' />\r\n                            <ErrorMessage name='title' render={error=><Label basic color='red' content={error}/>}/>\r\n                        </FormField> */}\r\n                     <MyTextInput name='title' placeholder=\"title\"/>  \r\n                    <MyTextArea rows={3} placeholder='Description'  name='description' />\r\n                    <MySelectInput options={categoryOptions} placeholder='Category'   name='category' />\r\n                   <MyDateInput placeholderText=\"Date\"\r\n                    name='date'\r\n                    showTimeSelect\r\n                    timeCaption=\"time\"\r\n                    dateFormat='MMMM d, yyyy h:mm aa'\r\n                   />\r\n                   <Header content='Location Details' sub color=\"teal\"/>\r\n                    <MyTextInput placeholder='City'  name='city' />\r\n                    <MyTextInput placeholder='Venue'  name='venue' />\r\n                    <Button \r\n                    disabled={isSubmitting || \r\n                        !isValid || !dirty}\r\n                    loading={isSubmitting} floated=\"right\" positive type=\"submit\" content=\"Submit\"/>\r\n                    <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content=\"Cancel\"/>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </Segment>\r\n    )\r\n})","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/store/Store';\r\nimport * as Yup from 'yup';\r\nimport { formatDistanceToNow } from 'date-fns/esm';\r\ninterface Props{\r\n    activityId:string;\r\n}\r\nexport default observer(function ActivityDetailChat({activityId}:Props) {\r\n    const {commentStore}=useStore();\r\n    useEffect(()=>{\r\n        if(activityId){\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n\r\n        return ()=>{\r\n            commentStore.clearComments();\r\n        }\r\n    },[commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{border: 'none'}}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik onSubmit={(values, {resetForm})=>commentStore.addComment(values).then(()=>resetForm())}\r\n                    initialValues={{body:''}}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                    >\r\n                        {({isSubmitting, isValid, handleSubmit})=>(\r\n                                <Form className='ui form'>\r\n                                    <Field name='body'>\r\n                                        {(props:FieldProps)=>(\r\n                                            <div style={{position:'relative'}}>\r\n                                                <Loader active={isSubmitting}/>\r\n                                                <textarea \r\n                                                placeholder='Enter your comment (Enter shift+ enter for net line'\r\n                                                rows={2}\r\n                                                {...props.field}\r\n                                                onKeyPress={e=>{\r\n                                                    if(e.key==='Enter' && e.shiftKey)\r\n                                                        return;\r\n                                                    if(e.key==='Enter' && !e.shiftKey)\r\n                                                    {\r\n                                                        e.preventDefault();\r\n                                                        isValid && handleSubmit();\r\n                                                    }\r\n                                                }}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Field>\r\n\r\n                            </Form>\r\n                        )}\r\n\r\n                    </Formik>                \r\n                <Comment.Group>\r\n                    {\r\n                        commentStore.comments.map(comment=>(\r\n                            <Comment key={comment.id}>\r\n                                <Comment.Avatar src={comment.image ||'/assets/user.png'}/>\r\n                                <Comment.Content>\r\n                                    <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\r\n\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/store/Store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailHeader({activity}: Props) {\r\n    const {activityStore:{updateAttendance, loading, cancelActivityToggle}}=useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{position:'absolute', zindex:1000, left:-14, top:20 }} ribbon color='red' content='Cancelled'/>\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}> {activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost?(\r\n                    <>\r\n                        <Button color={activity.isCancelled?'green':'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={activity.isCancelled?'Re-activate Activity':'Cancel Activity'}\r\n                            onClick={cancelActivityToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link} to={`/manage/${activity.id}`} \r\n                        disabled={activity.isCancelled}\r\n                        color='orange' floated='right'>\r\n                        Manage Event\r\n                    </Button>\r\n                    </>\r\n                ):activity.isGoing?(\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ):(\r\n                    <Button color='teal' loading={loading} \r\n                    onClick={updateAttendance}\r\n                    disabled={activity.isCancelled}\r\n                    >Join Activity</Button>\r\n                )\r\n            }\r\n\r\n\r\n\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props{\r\n    activity:Activity;\r\n}\r\nexport default observer(function ActivityDetailSidebar ({activity: {attendees, host}}:Props) {\r\n    if(!attendees) return null;\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length===1? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee=>(\r\n                    <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                    {attendee.username===host?.username &&\r\n                    <Label\r\n                        style={{ position: 'absolute' }}\r\n                        color='orange'\r\n                        ribbon='right'\r\n                    >\r\n                        Host\r\n                    </Label>}\r\n                    <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                    <Item.Content verticalAlign='middle'>\r\n                        <Item.Header as='h3'>\r\n                            <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                        </Item.Header>\r\n                        {attendee.following && \r\n                        <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                    </Item.Content>\r\n                </Item>\r\n\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/store/Store\";\r\nimport ActivityDetailChat from \"./ActivityDetailChat\";\r\nimport ActivityDetailInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailHeader from \"./ActivityDetailHeader\";\r\nimport ActivityDetailSidebar from \"./ActivityDetailSidebar\";\r\n\r\n\r\nexport default observer( function ActivityDetails()\r\n{\r\n  const {activityStore}=useStore();\r\n  const{selectedActivity:activity, loadActivity, loadingInitials, clearSelectedActivity}=activityStore;\r\n\r\n  const {id}=useParams<{id:string}>();\r\n  useEffect(()=>{\r\n    if(id) loadActivity(id);\r\n\r\n    return()=>clearSelectedActivity();\r\n  },[id, loadActivity, clearSelectedActivity])\r\n  if(loadingInitials || !activity) return <LoadingComponent/>;\r\n    return(\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailHeader activity={activity}/>\r\n          <ActivityDetailInfo activity={activity}/>\r\n          <ActivityDetailChat activityId={activity.id}/>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailSidebar activity={activity }/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n})","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound()\r\n{\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                OOps not found\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>Go to Activities</Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../store/Store\";\r\n\r\nexport default observer (function ModalContainer(){\r\n    const {modalStore}=useStore();\r\n\r\n    return (\r\n        <Modal open={modalStore.model.open} onClose={modalStore.closeModel} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.model.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport { format } from 'date-fns';\r\n\r\nconst panes=[\r\n    {menuItem:'Future Events', pane:{key:'future'}},\r\n    {menuItem:'Past Events', pane:{key:'past'}},\r\n    {menuItem:'Hosting', pane:{key:'hosting'}},\r\n\r\n]\r\nexport default observer(function ProfileActivities(){\r\n    const {profileStore}=useStore();\r\n\r\n    const {loadUserActivities, profile, loadingActivities, userActivities}=profileStore;\r\n    useEffect(()=>{\r\n        loadUserActivities(profile!.username);\r\n    },[loadUserActivities, profile]);\r\n    const handleTabChange=(e: SyntheticEvent, data:TabProps)=>{\r\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingActivities}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calender' content={'Activities'}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab panes={panes}\r\n                    menu={{secondary: true, pointing:true}}\r\n                    onTabChange={(e,data)=>handleTabChange(e,data)}\r\n                    />\r\n                    <br/>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userActivities.map((activity:UserActivity)=>(\r\n                            <Card\r\n                            as={Link}\r\n                            to={`/activities/${activity.id}`}\r\n                            key={activity.id}>\r\n                                <Image src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                                    style={{minHeight:100, objectFit:'cover'}}/>\r\n                                    <Card.Content>\r\n                                        <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                                        <Card.Meta textAlign=\"center\">\r\n                                            <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                            <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                        </Card.Meta>\r\n                                    </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n\r\n                    </Card.Group>\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowing() {\r\n    const {profileStore}=useStore();\r\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\r\n\r\n\r\n\r\n    return(\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated=\"left\" icon='user' content={activeTab===3?`People following ${profile?.displayName}`:`People ${profile?.displayName} following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile=> (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react';\r\ninterface Props{\r\n    setFiles:(files:any)=>void;\r\n}\r\nexport default function PhotoWidgetDropZone({setFiles}:Props) {\r\n    const dzStyles={\r\n        border: 'dashed 3 px #eee',\r\n        borderColor:'#eee',\r\n        borderRadius: '5px',\r\n        paddingTop:'30px',\r\n        textAlign:'center' as 'center',\r\n        height:200\r\n    }\r\n\r\n    const dzActive={\r\n        borderColor:'green'\r\n    }\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file:any)=> Object.assign(file,{\r\n        preview:URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive?{...dzStyles, ...dzActive}: dzStyles}>\r\n      <input {...getInputProps()} />\r\n        <Icon name='upload' size='huge'/>\r\n        <Header content='Drop file here'/>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\n\r\ninterface Props{\r\n    imagePreview:string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\nexport default function PhotoWidgetCropper(\r\n    {imagePreview, setCropper}:Props\r\n)\r\n{\r\n    return(\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height:200, width:'100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n        />\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropZone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\ninterface Props{\r\n    loading:boolean,\r\n    uploadPhoto:(file:Blob)=>void;\r\n}\r\nexport default function PhotoUploadWidget({loading, uploadPhoto}:Props)\r\n{\r\n    const [files, setFiles]=useState<any>([]);\r\n    const [cropper, setCropper]=useState<Cropper>();\r\n\r\n    function onCrop(){\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob=>uploadPhoto(blob!));\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            files.forEach((file:any)=>URL.revokeObjectURL(file.preview))\r\n        }\r\n    },[files]);\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropZone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize Photo'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>            \r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload'/>\r\n                {files && files.length>0 &&\r\n                <>\r\n                    <div className=\"img-preview\" style={{minHeight:200, overflow:'hidden'}} />                  \r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                        <Button disabled={loading} onClick={()=>setFiles([])} icon='close'/>\r\n                    </Button.Group>\r\n                </>}\r\n\r\n            </Grid.Column>                        \r\n        </Grid>\r\n    )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\nexport default observer(function ProfilePhotos({profile}:Props){\r\n    const {profileStore:{isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto}}=useStore();\r\n    const [addPhotoMode, setAddPhotoMode]=useState(false);\r\n    const [target, setTarget]=useState('');\r\n    function handlePhotoUpload(file:Blob){\r\n        uploadPhoto(file).then(()=>setAddPhotoMode(false));\r\n    }\r\n\r\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n\r\n    function handleDeletePhoto(photo:Photo, e: SyntheticEvent<HTMLButtonElement>)\r\n    {\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n    return(\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos'/>\r\n                    {isCurrentUser &&(\r\n                        <Button floated='right' basic\r\n                        content={addPhotoMode?'Cancel':'Add Photo'}\r\n                        onClick={()=>setAddPhotoMode(!addPhotoMode)}/>\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode?(\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n                    ):\r\n                    (\r\n                    <Card.Group itemsPerRow={5}>\r\n                        {profile.photos?.map(photo=>(\r\n                        <Card key={photo.id}>\r\n                            <Image src={photo.url} />\r\n                            {isCurrentUser &&(\r\n                                <Button.Group fluid widths={2}>\r\n                                    <Button basic color='green' content='Main' name={'main'+photo.id} disabled={photo.isMain}\r\n                                    loading={target=== 'main' + photo.id && loading} onClick={e=>handleSetMainPhoto(photo,e)}/>\r\n\r\n                                    <Button basic color='red' icon='trash'\r\n                                    loading={target===photo.id && loading}\r\n                                    onClick={e=>handleDeletePhoto(photo, e)}\r\n                                    disabled={photo.isMain}\r\n                                    name={photo.id}\r\n                                    />\r\n                                </Button.Group>\r\n                            )}\r\n                        </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                    )}\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\n\r\nexport default observer( function ProfileContent({profile}:Props){\r\n    const {profileStore}=useStore();\r\n    const panes=[\r\n        {menuItem:'About', render:()=><Tab.Pane>About Content</Tab.Pane>},\r\n        {menuItem:'Photos', render:()=><Tab.Pane><ProfilePhotos profile={profile}/></Tab.Pane>},\r\n        {menuItem:'Events', render:()=><ProfileActivities/>},\r\n        {menuItem:'Followers', render:()=><ProfileFollowings/>},\r\n        {menuItem:'Following', render:()=><ProfileFollowings/>},\r\n    ];\r\n\r\n    return(\r\n        <Tab\r\n            menu={{fluid:true, vertical:true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data)=>profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n        )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Divider, Grid, Header, Item,Segment, Statistic } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props{\r\n    profile:Profile;\r\n}\r\nexport default observer( function ProfileHeader({profile}:Props){\r\n    return(\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size=\"small\" src={profile.image || `/assets/user.png`}/>\r\n                            <Item.Content verticalAlign=\"middle\">\r\n                                <Header as='h1' content={profile.displayName}/>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followerCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/store/Store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer( function ProfilePage(){\r\n    const {username}=useParams<{username:string}>();\r\n    const {profileStore}=useStore();\r\n    const {loadProfile, profile, setActiveTab}=profileStore;\r\n\r\n    useEffect(()=>{\r\n        loadProfile(username!);\r\n        return()=>{\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile, username,setActiveTab]);\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                {profile &&\r\n                <>\r\n                <ProfileHeader profile={profile}/>\r\n                <ProfileContent profile={profile}/>\r\n                </>}\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n});","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useStore } from \"../store/Store\";\r\n\r\ninterface Props{\r\n    children:any;\r\n}\r\nexport default function PrivateRoute({children}:Props){\r\n    const {userStore:{isLoggedIn}}=useStore();\r\n    return isLoggedIn ? children : <Navigate replace to='/'/>;\r\n        \r\n}","import React, { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './navbar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/error/NotFound';\nimport LoginForm from '../../features/users/LoginForm';\nimport { useStore } from '../store/Store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modal/modalContainer';\nimport ProfilePage from '../../features/Profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\nfunction App() {\n  const location=useLocation();\n  const {commonStore, userStore}=useStore();\n  \n  useEffect(()=>{\n    if(commonStore.token){\n      userStore.getUser().finally(()=>commonStore.setAppLoaded());\n    }\n    else\n    {\n      commonStore.setAppLoaded();\n    }\n  },[commonStore, userStore])\n  if(location)\n  console.log(location.key);\n\nif(!commonStore.appLoaded) return <LoadingComponent content='Loading App...'/>\n\n  return (\n    <Fragment>\n      <NavBar/>\n      <ToastContainer position='bottom-right' hideProgressBar/>\n      <ModalContainer/>\n      <Container style={{marginTop:'7em'}}>\n        <Routes>\n        <Route path='/' element={<HomePage/>}/>\n        <Route path='/activities' element={<PrivateRoute><ActivityDashboard/></PrivateRoute>}/>   \n        <Route path='/activities/:id' element={<PrivateRoute><ActivityDetails/></PrivateRoute>}/>        \n        <Route path='/createactivity' element={<PrivateRoute><ActivityForm key={location.key}/></PrivateRoute>}/>   \n        <Route path='/profiles/:username' element={<PrivateRoute><ProfilePage/></PrivateRoute>}/>\n        <Route path='/manage/:id' element={<PrivateRoute><ActivityForm key={location.key} /></PrivateRoute>}/>\n        <Route path='/login' element={<LoginForm/>}/>\n        <Route path='*' element={<NotFound/>}/>     \n        </Routes>\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop(){\r\n    const {pathname}=useLocation();\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname]);\r\n\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/store/Store';\nimport { BrowserRouter } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history=createBrowserHistory();\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <BrowserRouter>\n    <ScrollToTop/>\n    <App />\n    </BrowserRouter>\n  </StoreContext.Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}